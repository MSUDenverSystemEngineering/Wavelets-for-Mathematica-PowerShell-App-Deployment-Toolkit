(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     19957,        660]
NotebookOptionsPosition[     15584,        526]
NotebookOutlinePosition[     17775,        583]
CellTagsIndexPosition[     17690,        578]
WindowTitle->CheckColor
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["WAVELET WARE PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MaxIts\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/MaxIts"], "\<\"CheckData\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckData"], "\<\"CheckIterations\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckIterations"], "\<\"CheckFilter\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckFilter"], "\<\"CheckDataFilterSize\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckDataFilterSize"], "\<\"CheckParity\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckParity"], "\<\"CheckTree\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckTree"], "\<\"CheckIterationValue\"\>":>
       Documentation`HelpLookup["paclet:WaveletWare/ref/CheckIterationValue"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"List of Functions - Categorical\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Categorical"], "\<\"List \
of Functions - Alphabetical\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Alphabetical"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WaveletWare/ref/CheckColor\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WaveletWare/ref/CheckColor"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/WaveletWare/ref/\
CheckColor.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$23886], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "WaveletWare/ref/CheckColor", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["CheckColor", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"CheckColor", "[", 
       StyleBox[
        RowBox[{"clr", ",", "datatype", ",", "together"}], "TI"], "]"}]], 
      "InlineFormula"],
     "\[LineSeparator]determines if the input is a valid Mathematica color.  \
If so, it converts the input to RGB and returns the corresponding ordered \
triple."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6]]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->20019405],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 StyleBox["CheckColor",
  FontFamily->"Courier New",
  FontSize->12],
 " returns ",
 ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"],
 " if an input is not a valid color value."
}], "Notes",
 CellID->1067943069],

Cell[TextData[{
 "It is necessary to know ",
 Cell[BoxData[
  StyleBox["datatype", "TI"]], "InlineFormula"],
 " (1,2,3) and ",
 Cell[BoxData[
  StyleBox["together", "TI"]], "InlineFormula"],
 " (",
 ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"],
 ",",
 ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"],
 ") when assigning colors for various parts of wavelet and image plots.  Here \
",
 Cell[BoxData[
  StyleBox["dataype", "TI"]], "InlineFormula"],
 "=1,2,3 indicates that the data is either a vector, matrix, or list of three \
matrices of equal dimensions, respectively.  The value for ",
 Cell[BoxData[
  StyleBox["together", "TI"]], "InlineFormula"],
 " indicates how the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["PlotTogether"]],"paclet:WaveletWare/ref/PlotTogether"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " option has been set."
}], "Notes",
 CellID->514344953],

Cell["", "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->109071201],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->761873566],

Cell["This loads the package:", "MathCaption",
 CellID->16454449],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->861618089],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"color", "=", "White"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datatype", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"together", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckColor", "[", 
  RowBox[{"color", ",", "datatype", ",", "together"}], "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->549790136],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "}"}]], "Output",
 ImageSize->{82, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->54702401]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->67808564],

Cell[TextData[{
 "We can use any valid ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " color for the first argument."
}], "ExampleText",
 CellID->316325292],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"color", "=", 
   RowBox[{"CMYKColor", "[", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", ".5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datatype", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"together", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckColor", "[", 
  RowBox[{"color", ",", "datatype", ",", "together"}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->689930303],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "1.`", ",", "0.`"}], "}"}]], "Output",
 ImageSize->{82, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->434455521]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->767460569],

Cell[TextData[{
 StyleBox["CheckColor",
  FontFamily->"Courier New",
  FontSize->12],
 " returns White for an invalid color."
}], "ExampleText",
 CellID->887481702],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"color", "=", "Violet"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datatype", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"together", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckColor", "[", 
  RowBox[{"color", ",", "datatype", ",", "together"}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->536286300],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CheckColor", "::", "badcolor"}], "MessageName"], ":", 
  " ", "\<\"Warning :: The input must be either a single color or a list of \
three colors.  Each color must be a valid Mathematica color - resetting the \
color to its default value.\"\>"}]], "Message", "MSG",
 CellLabel->"During evaluation of In[1]:=",
 CellID->10666503],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 ImageSize->{61, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->93936236]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["MaxIts"]],"paclet:WaveletWare/ref/MaxIts"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckData"]],"paclet:WaveletWare/ref/CheckData"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckIterations"]],"paclet:WaveletWare/ref/CheckIterations"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckFilter"]],"paclet:WaveletWare/ref/CheckFilter"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckDataFilterSize"]],
    "paclet:WaveletWare/ref/CheckDataFilterSize"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckParity"]],"paclet:WaveletWare/ref/CheckParity"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckTree"]],"paclet:WaveletWare/ref/CheckTree"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckIterationValue"]],
    "paclet:WaveletWare/ref/CheckIterationValue"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Categorical"]],
   "paclet:WaveletWare/guide/List of Functions - Categorical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->528388724],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Alphabetical"]],
   "paclet:WaveletWare/guide/List of Functions - Alphabetical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->416883107]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"CheckColor",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:WaveletWare/guide/WaveletWare", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 8, 25, 9, 46, 31.4073572}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "WaveletWare`MiscFunctions`", "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Wavelet Ware Package Symbol", "language" -> "en", "paclet" -> 
    "WaveletWare Package", "status" -> "None", "summary" -> 
    "CheckColor[clr, datatype, together] determines if the input is a valid \
Mathematica color. If so, it converts the input to RGB and returns the \
corresponding ordered triple.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "CheckColor", "titlemodifier" -> "", "windowtitle" -> "CheckColor", 
    "type" -> "Symbol", "uri" -> "WaveletWare/ref/CheckColor"}, 
  "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[8034, 241, 387, 15, 30, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->109071201]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 17547, 571}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[582, 21, 4499, 105, 48, "AnchorBarGrid",
 CellID->1],
Cell[5084, 128, 287, 11, 44, "ObjectNameGrid"],
Cell[CellGroupData[{
Cell[5396, 143, 541, 15, 94, "Usage"],
Cell[CellGroupData[{
Cell[5962, 162, 737, 24, 31, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->20019405],
Cell[6702, 188, 31, 0, 70, "SectionHeaderSpacer"],
Cell[6736, 190, 253, 10, 70, "Notes",
 CellID->1067943069],
Cell[6992, 202, 959, 31, 70, "Notes",
 CellID->514344953],
Cell[7954, 235, 31, 0, 70, "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8034, 241, 387, 15, 30, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->109071201],
Cell[CellGroupData[{
Cell[8446, 260, 195, 6, 25, "ExampleSection",
 CellID->761873566],
Cell[8644, 268, 65, 1, 31, "MathCaption",
 CellID->16454449],
Cell[8712, 271, 126, 4, 42, "Input",
 InitializationCell->True,
 CellID->861618089],
Cell[CellGroupData[{
Cell[8863, 279, 388, 10, 75, "Input",
 CellID->549790136],
Cell[9254, 291, 218, 7, 35, "Output",
 CellID->54702401]
}, Open  ]],
Cell[CellGroupData[{
Cell[9509, 303, 124, 3, 8, "ExampleDelimiter",
 CellID->67808564],
Cell[9636, 308, 163, 6, 33, "ExampleText",
 CellID->316325292],
Cell[CellGroupData[{
Cell[9824, 318, 480, 13, 75, "Input",
 CellID->689930303],
Cell[10307, 333, 219, 7, 35, "Output",
 CellID->434455521]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10575, 346, 125, 3, 8, "ExampleDelimiter",
 CellID->767460569],
Cell[10703, 351, 164, 6, 35, "ExampleText",
 CellID->887481702],
Cell[CellGroupData[{
Cell[10892, 361, 389, 10, 75, "Input",
 CellID->536286300],
Cell[11284, 373, 376, 8, 70, "Message",
 CellID->10666503],
Cell[11663, 383, 212, 7, 35, "Output",
 CellID->93936236]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[11914, 395, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11982, 400, 270, 12, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[12255, 414, 2490, 72, 70, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[14782, 491, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[15061, 505, 31, 0, 70, "SectionHeaderSpacer"],
Cell[15095, 507, 221, 6, 70, "MoreAbout",
 CellID->528388724],
Cell[15319, 515, 223, 6, 70, "MoreAbout",
 CellID->416883107]
}, Open  ]],
Cell[15557, 524, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

