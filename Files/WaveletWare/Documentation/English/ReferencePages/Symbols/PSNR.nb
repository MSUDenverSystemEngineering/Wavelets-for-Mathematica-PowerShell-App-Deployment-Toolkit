(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     76379,       1636]
NotebookOptionsPosition[     72015,       1504]
NotebookOutlinePosition[     74097,       1559]
CellTagsIndexPosition[     74011,       1554]
WindowTitle->PSNR
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["WAVELET WARE PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"Naive Image Compression and Edge Detection\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/tutorial/Naive Image Compression and Edge \
Detection"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MSE\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/MSE"], "\<\"CE\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CE"], "\<\"PercentCE\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/PercentCE"], "\<\"QuantizeCE\"\>":>
       Documentation`HelpLookup["paclet:WaveletWare/ref/QuantizeCE"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"List of Functions - Alphabetical\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Alphabetical"], \
"\<\"List of Functions - Categorical\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Categorical"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WaveletWare/ref/PSNR\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WaveletWare/ref/PSNR"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/WaveletWare/ref/PSNR.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$89579], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "WaveletWare/ref/PSNR", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["PSNR", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"PSNR", "[", 
       RowBox[{
        StyleBox["a", "TI"], ",", 
        StyleBox["b", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]returns the peak signal-to-noise ratio between two \
input vectors or matrices."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6]]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->2192967],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 "The computation for the PSNR is \[LineSeparator]\[LineSeparator]\t\tPSNR = \
10",
 Cell[BoxData[
  SubscriptBox[
   TemplateBox[{Cell[
      TextData["Log"]],"paclet:ref/Log"},
    "RefLink",
    BaseStyle->"InlineFormula"], "10"]], "InlineFormula"],
 "(",
 Cell[BoxData[
  SuperscriptBox["255", "2"]], "InlineFormula"],
 "/",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["MSE"]],"paclet:WaveletWare/ref/MSE"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 "[",
 Cell[BoxData[
  StyleBox["a", "TI"]], "InlineFormula"],
 ",",
 Cell[BoxData[
  StyleBox["b", "TI"]], "InlineFormula"],
 "])."
}], "Notes",
 CellID->1067943069],

Cell["", "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->684691647],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->291496595],

Cell["This loads the package:", "MathCaption",
 CellID->16454449],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->861618089],

Cell["Compute the PSNR between two matrices.", "ExampleText",
 CellID->350133054],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"A", "-", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "5"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"MatrixForm", ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "B"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PSNR", "[", 
  RowBox[{"A", ",", "B"}], "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->270012542],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "13", 
        RowBox[{"-", "16"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "12"}]},
       {
        RowBox[{"-", "14"}], "14", 
        RowBox[{"-", "16"}], 
        RowBox[{"-", "13"}], "20"},
       {
        RowBox[{"-", "1"}], "5", "17", 
        RowBox[{"-", "2"}], 
        RowBox[{"-", "20"}]},
       {"16", 
        RowBox[{"-", "8"}], "1", 
        RowBox[{"-", "9"}], 
        RowBox[{"-", "16"}]},
       {"12", 
        RowBox[{"-", "6"}], 
        RowBox[{"-", "8"}], 
        RowBox[{"-", "4"}], 
        RowBox[{"-", "4"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "11", 
        RowBox[{"-", "14"}], "1", 
        RowBox[{"-", "11"}]},
       {
        RowBox[{"-", "16"}], "12", 
        RowBox[{"-", "14"}], 
        RowBox[{"-", "14"}], "20"},
       {"0", "6", "16", "0", 
        RowBox[{"-", "21"}]},
       {"17", 
        RowBox[{"-", "9"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "9"}], 
        RowBox[{"-", "16"}]},
       {"10", 
        RowBox[{"-", "6"}], 
        RowBox[{"-", "6"}], 
        RowBox[{"-", "3"}], 
        RowBox[{"-", "5"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 ImageSize->{339, 72},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->66819017],

Cell[BoxData["45.034501934420106`"], "Output",
 ImageSize->{53, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->98206601]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->2462690],

Cell["\<\
Compute the PSNR for two images, the second of which approximates the first.\
\>", "ExampleText",
 CellID->132288663],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{
    RowBox[{"PackageDirectory", "[", 
     RowBox[{"DataType", "\[Rule]", "Images"}], "]"}], "<>", 
    "\"\<pigeon.png\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ImageRead", "[", 
    RowBox[{"file", ",", 
     RowBox[{"Resize", "\[Rule]", "200"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImagePlot", "[", "A", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"30", 
    RowBox[{"Floor", "[", 
     RowBox[{"A", "/", "30"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImagePlot", "[", "B", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"PSNR", "[", 
  RowBox[{"A", ",", "B"}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->770496743],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XnYf1VV9/EfkCZmoJI4Gwomg/CgoCIEhuCElAOO4ISKAio4IeZszmM5
Fo5paipIaE6ZPYliToCAU4qIA4jMgUiAGs+r877udX39VdY/z3/t67rPde7z
PcPea332Wmvvvdbat3z04fd/3Ibr1q172rUc7n/gkXs+9akH/vF+1/XPAw97
2iGPP+ygx97rsKcf9PiDnrrLozdy8SX+vujv38//t/xv+f9U/uAP/mCPPfbY
bbfd7nznO99xKXe4wx062WmnnW53u9vtuOOO/2etOHfl9ktxvsMOO2y/FHfe
9a53fcADHvDYxz72SU960pOf/OSnPOUpf7yUI4444vDDD3/84x//sIc97IEP
fOB97nOfP/qjP9pvv/0e+tCHPuYxj3Hz8573vL/4i7/42Mc+dsIJJzi+/vWv
f8QjHrHLLrv4nPfvvPPOu+++u5d7xMu96olPfKLzO93pTltttdVNbnKTG9zg
Bje84Q1vfvOb3/rWt1Yl1faTJnhcxW5729uqsCsaqJl77bXX3e9+d3VQ1Yes
lfvf//6u3HcpD3rQg3z9kEMOecJSDjzwwAc/+MH3u9/99t1333ve856e3XPP
Pe9yl7v0nnvd615/+Id/6Nj5ve9973322cfJPkvxk3pqssf96x5v8AkXXfGr
i17rBEG6rjK+jixa+uhHP/qRj3wkKrl+37Wi2l6431rx+N3udjftUiUV23vv
vVWscwVn/euiK7FY+f3f/32Mxi+03XbbbW+9lK233hrpdt11V/ff4x738Ihn
PYXybkY9VMWImI6qji66R6PUX5Ue/vCHq3Z1Dlc9hRGeGsx0rgSnGOQ46Bpc
ue6KKmHNoYce+tznPvcVr3jFa17zmte+9rV/tlZe97rXvepVr3rJS17y/Oc/
3w2OL3zhC1/2spe94Q1veOtb3/r+97//ox/96Oc///kTTzzx7/7u79z8qEc9
CpB2XQqCaKnKI6n3v+hFL/qTP/kTKEUB1ICozTbbbPPNN4cr/yKX5sAkIgR4
TUAcHMEyzQeShy5F8/EObA444ABcxlmocJt/0Qd0n7oUX0Qrnw4nToAQN1Wp
KxVtv/9aud9S3OlbqK03+bTzkOD9kOOoMmHS23rclf3337+v65V1Rm/w7AOX
0tedqL/rXutB1QYtSADaey/Fyd2Wco+lIBSMoeddlgJaqOqIUMi13XbbbbMU
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
X/Xz3nc933wdX8f/M/4GhY7Qtw==
    "], {{0, 133}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> Automatic, ImageResolution -> Automatic, 
    Interleaving -> True, Magnification -> Automatic, MetaInformation -> {}],
   Selectable->False],
  AlignmentPoint->Center,
  BaseStyle->"ImageGraphics",
  BaselinePosition->Automatic,
  ImageSize->Automatic,
  ImageSizeRaw->{200, 133},
  PlotRange->{{0, 200}, {0, 133}}]], "Output",
 ImageSize->{204, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->63217710],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
8Kx8/S6/y2fkfwFllCCE
    "], {{0, 133}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> Automatic, ImageResolution -> Automatic, 
    Interleaving -> True, Magnification -> Automatic, MetaInformation -> {}],
   Selectable->False],
  AlignmentPoint->Center,
  BaseStyle->"ImageGraphics",
  BaselinePosition->Automatic,
  ImageSize->Automatic,
  ImageSizeRaw->{200, 133},
  PlotRange->{{0, 200}, {0, 133}}]], "Output",
 ImageSize->{204, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->20761599],

Cell[BoxData["23.761483420466124`"], "Output",
 ImageSize->{53, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->673533259]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["MSE"]],"paclet:WaveletWare/ref/MSE"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CE"]],"paclet:WaveletWare/ref/CE"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["PercentCE"]],"paclet:WaveletWare/ref/PercentCE"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantizeCE"]],"paclet:WaveletWare/ref/QuantizeCE"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["Naive Image Compression and Edge Detection"]],
   "paclet:WaveletWare/tutorial/Naive Image Compression and Edge Detection"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->317486753],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Alphabetical"]],
   "paclet:WaveletWare/guide/List of Functions - Alphabetical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->529992005],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Categorical"]],
   "paclet:WaveletWare/guide/List of Functions - Categorical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->39792402]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"PSNR",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:WaveletWare/guide/WaveletWare", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 8, 25, 9, 51, 27.2803296}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "WaveletWare`ImageProcessing`", "keywords" -> {}, "specialkeywords" -> {},
     "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Wavelet Ware Package Symbol", "language" -> "en", "paclet" -> 
    "WaveletWare Package", "status" -> "None", "summary" -> 
    "PSNR[a, b] returns the peak signal-to-noise ratio between two input \
vectors or matrices.", "synonyms" -> {}, "tabletags" -> {}, "title" -> "PSNR",
     "titlemodifier" -> "", "windowtitle" -> "PSNR", "type" -> "Symbol", 
    "uri" -> "WaveletWare/ref/PSNR"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[7660, 236, 387, 15, 30, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->684691647]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 73868, 1547}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[576, 21, 4763, 118, 48, "AnchorBarGrid",
 CellID->1],
Cell[5342, 141, 281, 11, 44, "ObjectNameGrid"],
Cell[CellGroupData[{
Cell[5648, 156, 466, 14, 80, "Usage"],
Cell[CellGroupData[{
Cell[6139, 174, 736, 24, 31, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->2192967],
Cell[6878, 200, 31, 0, 70, "SectionHeaderSpacer"],
Cell[6912, 202, 665, 26, 70, "Notes",
 CellID->1067943069],
Cell[7580, 230, 31, 0, 70, "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7660, 236, 387, 15, 30, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->684691647],
Cell[CellGroupData[{
Cell[8072, 255, 195, 6, 25, "ExampleSection",
 CellID->291496595],
Cell[8270, 263, 65, 1, 31, "MathCaption",
 CellID->16454449],
Cell[8338, 266, 126, 4, 42, "Input",
 InitializationCell->True,
 CellID->861618089],
Cell[8467, 272, 81, 1, 33, "ExampleText",
 CellID->350133054],
Cell[CellGroupData[{
Cell[8573, 277, 825, 28, 75, "Input",
 CellID->270012542],
Cell[9401, 307, 2395, 77, 93, "Output",
 CellID->66819017],
Cell[11799, 386, 175, 5, 35, "Output",
 CellID->98206601]
}, Open  ]],
Cell[CellGroupData[{
Cell[12011, 396, 123, 3, 8, "ExampleDelimiter",
 CellID->2462690],
Cell[12137, 401, 127, 3, 33, "ExampleText",
 CellID->132288663],
Cell[CellGroupData[{
Cell[12289, 408, 860, 27, 139, "Input",
 CellID->770496743],
Cell[13152, 437, 44041, 731, 154, "Output",
 CellID->63217710],
Cell[57196, 1170, 11642, 200, 154, "Output",
 CellID->20761599],
Cell[68841, 1372, 176, 5, 35, "Output",
 CellID->673533259]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[69056, 1382, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69124, 1387, 270, 12, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[69397, 1401, 1154, 34, 70, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[70588, 1440, 272, 12, 70, "TutorialsSection",
 CellID->250839057],
Cell[70863, 1454, 31, 0, 70, "SectionHeaderSpacer"],
Cell[70897, 1456, 246, 6, 70, "Tutorials",
 CellID->317486753],
Cell[71146, 1464, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71214, 1469, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[71493, 1483, 31, 0, 70, "SectionHeaderSpacer"],
Cell[71527, 1485, 223, 6, 70, "MoreAbout",
 CellID->529992005],
Cell[71753, 1493, 220, 6, 70, "MoreAbout",
 CellID->39792402]
}, Open  ]],
Cell[71988, 1502, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

