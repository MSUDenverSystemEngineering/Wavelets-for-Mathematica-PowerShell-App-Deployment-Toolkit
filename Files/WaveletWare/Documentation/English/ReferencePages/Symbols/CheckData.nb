(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     19737,        648]
NotebookOptionsPosition[     15383,        519]
NotebookOutlinePosition[     17642,        577]
CellTagsIndexPosition[     17557,        572]
WindowTitle->CheckData
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["WAVELET WARE PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"Data Structures in the WaveletWare Package\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/tutorial/Data Structures in the WaveletWare \
Package"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MaxIts\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/MaxIts"], "\<\"CheckFilter\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckFilter"], "\<\"CheckIterations\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckIterations"], \
"\<\"CheckDataFilterSize\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckDataFilterSize"], "\<\"CheckParity\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckParity"], "\<\"CheckTree\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckTree"], "\<\"CheckIterationValue\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckIterationValue"], "\<\"CheckColor\"\>":>
       Documentation`HelpLookup["paclet:WaveletWare/ref/CheckColor"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"List of Functions - Categorical\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Categorical"], "\<\"List \
of Functions - Alphabetical\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Alphabetical"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WaveletWare/ref/CheckData\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WaveletWare/ref/CheckData"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/WaveletWare/ref/\
CheckData.html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]},
             Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$25051], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "WaveletWare/ref/CheckData", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["CheckData", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"CheckData", "[", 
       StyleBox["data", "TI"], "]"}]], "InlineFormula"],
     "\[LineSeparator]takes an input argument and determines whether it is a \
vector (1), matrix (2) or list of three matrices (3).  The routine also \
returns the maximum number of iterations of a wavelet transform that can be \
performed on the input."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6]]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->44008725],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 StyleBox["CheckData",
  FontFamily->"Courier New",
  FontSize->12],
 " is a utility routine that attempts to determine if the data are formatted \
correctly for use in several functions in the ",
 ButtonBox["WaveletWare",
  BaseStyle->"Link",
  ButtonData->"paclet:WaveletWare/tutorial/WaveletWare Package"],
 " package."
}], "Notes",
 CellID->1067943069],

Cell[TextData[{
 "The output of ",
 StyleBox["CheckData",
  FontFamily->"Courier New",
  FontSize->12],
 " is a list of two integers ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    StyleBox["type", "TI"], ",", " ", 
    StyleBox["maxits", "TI"]}], "}"}]], "InlineFormula"],
 "."
}], "Notes",
 CellID->475581],

Cell["", "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->116614795],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->318203951],

Cell["This loads the package:", "MathCaption",
 CellID->16454449],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->861618089],

Cell["\<\
Check that the input data is really a list of three matrices of equal \
dimension.\
\>", "ExampleText",
 CellID->89136601],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"img", "=", 
   RowBox[{"ImageInfo", "[", 
    RowBox[{"ImageForm", "\[Rule]", "Color"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ImageRead", "[", 
    RowBox[{"First", "[", "img", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckData", "[", "A", "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->666143689],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "8"}], "}"}]], "Output",
 ImageSize->{43, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->526285238]
}, Open  ]],

Cell[TextData[{
 StyleBox["CheckData",
  FontFamily->"Courier New",
  FontSize->12],
 " returns 4 for datatype if the input is not a vector, matrix or a list of \
three matrices of equal dimensions."
}], "ExampleText",
 CellID->47710797],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Range", "[", "5", "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckData", "[", "A", "]"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->189035093],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CheckData", "::", "badinput"}], "MessageName"], ":", 
  " ", "\<\"Warning :: The input data type is not a vector, matrix or list of \
three matrices of equal dimensions.\"\>"}]], "Message", "MSG",
 CellLabel->"During evaluation of In[3]:=",
 CellID->228427110],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "0"}], "}"}]], "Output",
 ImageSize->{43, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->152155166]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["MaxIts"]],"paclet:WaveletWare/ref/MaxIts"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckFilter"]],"paclet:WaveletWare/ref/CheckFilter"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckIterations"]],"paclet:WaveletWare/ref/CheckIterations"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckDataFilterSize"]],
    "paclet:WaveletWare/ref/CheckDataFilterSize"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckParity"]],"paclet:WaveletWare/ref/CheckParity"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckTree"]],"paclet:WaveletWare/ref/CheckTree"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckIterationValue"]],
    "paclet:WaveletWare/ref/CheckIterationValue"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckColor"]],"paclet:WaveletWare/ref/CheckColor"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["Data Structures in the WaveletWare Package"]],
   "paclet:WaveletWare/tutorial/Data Structures in the WaveletWare Package"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->829501916],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Categorical"]],
   "paclet:WaveletWare/guide/List of Functions - Categorical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->102609824],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Alphabetical"]],
   "paclet:WaveletWare/guide/List of Functions - Alphabetical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->71101422]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"CheckData",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:WaveletWare/guide/WaveletWare", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 8, 25, 9, 46, 35.4454282}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "WaveletWare`MiscFunctions`", "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Wavelet Ware Package Symbol", "language" -> "en", "paclet" -> 
    "WaveletWare Package", "status" -> "None", "summary" -> 
    "CheckData[data] takes an input argument and determines whether it is a \
vector (1), matrix (2) or list of three matrices (3). The routine also \
returns the maximum number of iterations of a wavelet transform that can be \
performed on the input.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "CheckData", "titlemodifier" -> "", "windowtitle" -> "CheckData", "type" -> 
    "Symbol", "uri" -> "WaveletWare/ref/CheckData"}, "SearchTextTranslated" -> 
  ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[8295, 245, 387, 15, 30, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->116614795]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 17414, 565}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[581, 21, 5260, 127, 48, "AnchorBarGrid",
 CellID->1],
Cell[5844, 150, 286, 11, 44, "ObjectNameGrid"],
Cell[CellGroupData[{
Cell[6155, 165, 573, 14, 94, "Usage"],
Cell[CellGroupData[{
Cell[6753, 183, 737, 24, 31, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->44008725],
Cell[7493, 209, 31, 0, 70, "SectionHeaderSpacer"],
Cell[7527, 211, 372, 11, 70, "Notes",
 CellID->1067943069],
Cell[7902, 224, 310, 13, 70, "Notes",
 CellID->475581],
Cell[8215, 239, 31, 0, 70, "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8295, 245, 387, 15, 30, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->116614795],
Cell[CellGroupData[{
Cell[8707, 264, 195, 6, 25, "ExampleSection",
 CellID->318203951],
Cell[8905, 272, 65, 1, 31, "MathCaption",
 CellID->16454449],
Cell[8973, 275, 126, 4, 42, "Input",
 InitializationCell->True,
 CellID->861618089],
Cell[9102, 281, 132, 4, 33, "ExampleText",
 CellID->89136601],
Cell[CellGroupData[{
Cell[9259, 289, 401, 12, 59, "Input",
 CellID->666143689],
Cell[9663, 303, 203, 7, 35, "Output",
 CellID->526285238]
}, Open  ]],
Cell[9881, 313, 237, 7, 49, "ExampleText",
 CellID->47710797],
Cell[CellGroupData[{
Cell[10143, 324, 399, 13, 43, "Input",
 CellID->189035093],
Cell[10545, 339, 308, 7, 35, "Message",
 CellID->228427110],
Cell[10856, 348, 203, 7, 35, "Output",
 CellID->152155166]
}, Open  ]]
}, Open  ]],
Cell[11086, 359, 31, 0, 29, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11154, 364, 270, 12, 30, "SeeAlsoSection",
 CellID->1255426704],
Cell[11427, 378, 2492, 72, 75, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[13956, 455, 272, 12, 70, "TutorialsSection",
 CellID->250839057],
Cell[14231, 469, 31, 0, 70, "SectionHeaderSpacer"],
Cell[14265, 471, 246, 6, 70, "Tutorials",
 CellID->829501916],
Cell[14514, 479, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14582, 484, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[14861, 498, 31, 0, 70, "SectionHeaderSpacer"],
Cell[14895, 500, 221, 6, 70, "MoreAbout",
 CellID->102609824],
Cell[15119, 508, 222, 6, 70, "MoreAbout",
 CellID->71101422]
}, Open  ]],
Cell[15356, 517, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

