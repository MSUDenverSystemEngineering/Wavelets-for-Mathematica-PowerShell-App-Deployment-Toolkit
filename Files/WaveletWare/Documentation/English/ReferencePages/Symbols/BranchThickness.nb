(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     39989,        901]
NotebookOptionsPosition[     36187,        789]
NotebookOutlinePosition[     38674,        856]
CellTagsIndexPosition[     38554,        850]
WindowTitle->BranchThickness
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["WAVELET WARE PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"HuffmanTree\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/HuffmanTree"], "\<\"BranchColor\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/BranchColor"], "\<\"BranchFontColor\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/BranchFontColor"], "\<\"BranchFontSize\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/BranchFontSize"], "\<\"BranchLength\"\>":>
       Documentation`HelpLookup["paclet:WaveletWare/ref/BranchLength"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"List of Options and Values\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Options and Values"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WaveletWare/ref/BranchThickness\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WaveletWare/ref/BranchThickness"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/WaveletWare/ref/\
BranchThickness.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$20900], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "WaveletWare/ref/BranchThickness", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["BranchThickness", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData["BranchThickness"], "InlineFormula"],
     "\[LineSeparator]is an option for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["HuffmanTree"]],"paclet:WaveletWare/ref/HuffmanTree"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " that sets the thickness of the branches."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->19919167],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->177461227],

Cell["This loads the package:", "MathCaption",
 CellID->16454449],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->861618089],

Cell[TextData[{
 "The option ",
 StyleBox["BranchThickness",
  FontFamily->"Courier New",
  FontSize->12],
 " controls the thickness of the branches connecting the nodes of the tree.  \
The default value is ",
 ButtonBox["Medium",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Medium"],
 ".  Other values can be ",
 ButtonBox["Tiny",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Tiny"],
 ", ",
 ButtonBox["Small",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Small"],
 ", ",
 ButtonBox["Large",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Large"],
 " or a positive number."
}], "ExampleText",
 CellID->114441213],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"BranchThickness", "\[Rule]", "Large"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"BranchThickness", "\[Rule]", ".015"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->74704213],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnV9MW1l+x912NFRa1RNlx90xeORgBAKbFSGuOy4WhZXZGSwvAjwOzWCn
CpuQmVruOAy4ZC0Gb0ZYSAwSVNoMElLkl6JIVBrmYQiqVIm3cbsvefQDD36q
5pHHPKY/2xj/uzbXxvecc6+/n4fEvvfa+Pu7v/M7v/Pvnu7fR3yP/1Kn0y3/
Nf3jW1j9zVdfLfzh0xv05u6Xy//y+ZeLjzxfrix+vviV8/d/RQf/8S90uv+h
/7Ov3wIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABqkMlk
kslkPIerwOrqKr3d29tLp9O8fyBQEycnJ8Fg0GQyGY3GiYmJuzniBebn5+mt
x+Mxm80Gg8Hv9798+ZL3Twbi8ubNG4pCPT09DocjFAo9f/788Cr29/cjkcjY
2Bg5YSKROD8/5y0CiEUqlbJarRSFdnZ2rnSnasgJfT6fxWJB7AJ5KEyFw2Gb
zdacR1WEL4pdbrcbgavNIaeanJxcWFi4pkeVEovFnE7nzz//zFsc4ANFFXKq
tbW1FjpVnq2traGhIWpO8pYIOOByuZRwqjyUcQ0MDKBCbDe2t7enp6cVcqo8
lLYFAgHeQgE70ul0X1/fwcGBon5FOByOk5MT3nIBI4LBYCgUUtqpDnOJFrU0
ecsFLKCWWmdnJ4NglYf8KpVK8RYNFGdvb8/j8bBxKoICI4VH3qKB4jCrBPMk
Egm73c5bNFAcl8sVj8eZ+dX+/r7BYOAtGiiOyWSSM6bcQnQ6HW/RQHGoVqK6
iZlTJZNJvV7PWzRQHL/fH4lEmPkVuhrahPX19bm5OWZ+FY1GvV4vb9FAcdLp
tNlsvtohXjx7dHdZaurMznJ+CumjZy9k+NXIyMjR0RFv0YAFVzcJL3yn2q+K
3lbT70qgxmBXV9ebN294KwYsoABCYaSuTz16tiPpN3SycFCGY1Eut7GxwVsu
YIfP51taWqrnE5JuQweL1R/5WL26kDL24eFhBKu24vz83GKxUD3VmF+VuVI9
vzo4OBgcHHz9+jVvoYA1dNPtdnvNPtJrxCtyqtHR0ePjY94SAR/ItRwOh/SK
Cen06er8KplMwqlAJpOxWq3379+X51fZo/kgJXk+HA53d3fDqcDb3KqclZUV
m80Wi8Wk/arMh6T7rxKJBIW+QCCAlTiglFQq5Xa7jUbj4uKi/Fl/dGUoFKIY
RakaphyDWkQiEQo7HR0dvb29U1NT0Wg0Ho9TylTqSHSEItvs7CyFOLoyGAze
uXPn9PSU928HgpJOp2/fvp3vcaKUnvJ5r9frcrn0er2uADkSHaHItrm5eTnB
mJK0/v5+dFUBSZxOZ9Nz0cnNnj592trfAzTA3t7eF1980fTHKViRW6IjFJRC
jTiqyK65PJmciqrRVv0koAFmZmZaMpvlyZMnlJVd/3uABiCPIr9qyVdRbUhx
D0/8AFT3kSe0sDPz5ORkcnKyVd8GVArl6pSxt/Y7Hzx4kEwmW/udQEWkUilq
xLX8ayn6UQKPAZ32hHIhuvsKPS6b4hVFLSW+GQhO/rnZyn0/ZVkYMWw3Sods
FAKDO23Aq8f54b2R3bPc++sM2cinOLhztjuie/xK6b8HmFK8qflX1xyyaQiK
iq//9GnOp+FXGoOCVeGenu06dMEPrz1kI5+cT/1i9xXileagIFWo/sjHbulu
PvyO6QJkqgo3V34Hv9IaFK4KfnV09DX51aWTsSE7uGP5lV33GfxKUxTiVW7I
5sOgzsHYr4jT/wi/p+uEX2mLi/wqO2TzzV0+9dHZ7t/q+pYwuKMpsq3AXz/5
T6fTya25n2svWDC4oy3evPnhl+X9V6zJOfTqy5f37t3j8veBEig9ZCMfDO5o
BgZDNvLB4I5mYDNkI5+dnZ0nT57w/hXgWrAcspFPdnAHK3dUS0tW2SgBORVF
UdSGKqVVq2yUIDu4s7nJ+1eAhmnhKhslwModNdLyVTZKcHp6Oj4+zvtXgAZQ
YpWNEmDljopQaJWNEqgiroK3Cq+yUYKXGNxRA+IM2cgHgztcoEYTJSF5h3EV
WF1dpbeURJWGJqGGbORD9eCtW7dKf7Z8yaBRqAgHg0GTyWQ0GicmJvIPi40X
mJ+fp7cej8dsNhsMBr/fTxWKaEM28skP7jQhmfcPVw1UbKlI9vT0OByOUChU
fG5/4TnE1dsh7e/vRyKRkZGRGzduJBIJATvY65OX/N577925c6dMcm3yksfG
xsgJ1SiZMRRtrFYrFcmqZ/UXH8hfZ78juiM+n89isaioINeWLAs1SmYJldlw
OGyz2WqY94pNjkqhskwF2e12C16Kr5LcAGqRzBiyMLWJFhYW6tkuG6ca2FEy
FotRuiVs15AsyQ0iuGTGUBEjC6+trck1n+zQtbW1NTQ0JOAYXMOSZSOsZPZQ
C/pqC5f6UgNVYjb9GBgYEK12kCW5WcSUzJjt7e3p6Wk55io2B6/c/rYcymEC
gQBvoUXkS24a0SQzJp1O9/X1yd+MpmkcDocgHdptKJk9wWAwFAopbeHDXNZB
zS7ecrO0oWTGULOls7OTQcnNQ0bm3hXfhpLZs7e35/F42FiYoChBsQKSNQ+z
GiFPIpGw2+2QrHmorR2Px5kZeX9/32AwQLLmMZlMcgZYW4hOp4NkzUMhmgI1
Mwsnk0m9Xg/Jmsfv90ciEWZGFqHd3YaS2bO+vj43N8fMyNFo1Ov1QrLmSafT
ZrO5yhiF4RrJEUDpqX2XEx3qjRqOjIxwX/vcjOR66urMRBNFMheq2kdFQ0mY
rORQ6dnihL/a49HUMurq6hJh3ntjkuuqyztcLb8SRzJ7qDRRmZK04hVlsXi2
5CO1ocRmY2ODt9wsDUqurY4ufrS8XNtG4kjmgs/nW1paKrHVZZGsNxumrJA/
evasbkVC6evw8LA4JbcByTXV5T9Ws+yJJpk95+fnFouFgnaVXWv41UW6UTiV
e1usHas+cXBwMDg4KNTDphqQXENd4aW0XwkomQtkAbvdnu0wlB2vimfrfoQs
PDo6enx8zFtiJXIlS54tHpTwK2Elc4Hs7HA4dnbW5OZXxcxjZ7nGfUkmkyJb
WJ5kCXXFaf4FLi8RXDIXMpmM1Xrns7kLK0nnsFIuVLYArHBBOBzu7u4W3MJX
S66hrkDZJ1QhmQuUZ66shD6pKIQV3QsSS3Iue7WylyUSCYoDgUBAFctSrpRc
oa6ci+vUJZkXqVTK7XYbjcbFxUX5U+DoylAoZLPZKG9R3fzbNpTMC6ojyMgd
HR29vb1TU1PRaDQej1P+UGpVOhKLxWZnZ8m2dGUwGFT19Mjvv/++q6tLvuR3
3333gw8+ULVkjlB+u7Oz4/V6XS6XXq/XFSD70xEq5pubm9qw7eXDt+VLfvLk
CV3J+4cDcWnuOfN43B+oAznG7Wa3+hJz4wMgAtd8yi52rwDVkEuQY/D9BqA9
WvKMQbU8VxywIZlMPnjw4PrfI+xOQIA9rW3NYfs5kKflvU9I4IESybaKNtoA
CjE+Pn56etryr7137x4eYNu2KLd3SfUWA6BNoJtOt165wRck8O2J0oPF5LeU
ZSGB1zqvHuenI4zsnrHawefk5GRycjL76mx3RPf4laJ/DHCgeF/zr5ht3ZXd
2/rrj3MODb/SHhSsCrf1bLdf9/E/sNpy+iCYnbH17Q/fIl5pEApSuervbTbt
+eFvdB3f/MRurtTm5ubTzyfgVxqEwlXBr54+nft7nfniDROyW95bfmXXfQa/
0hqFeJXJZPr7P3yoc7L0K+Lou4c3dbfgV5rjIr/KZtHfPeRQJZ3tkl993ZZP
K9I02VZg/8PvyK/4tPjPdqke/LC/Hz3wGoPS9Rsl/VesyXnz3NOnlMOz/+NA
ObKNsqdP+f4GpUeOAGPEGQU+OjqaYdV1BpQmm64LkzMz6+oHilIcpBOD169f
O51OEYInaBq6fbdv306n07x/SBlYd692xJwEhQRe1YiTrlej3FRVoDSCTzJv
yUpYwJjT09Px8XHev6IeWHevOtQyBxgJvLoQM12vBg/OUhHqekgCHpylFh48
eJBMJnn/igbAunvxUeMadiTw4qPSso8HZ7Enk8lQvRbP4SqwurpKb+lelI7R
qDdXqcgJyySPTc7e/d1EDcmgUU5OToLBoMlkMhqNExMT+c0e4gXm5+fprcfj
MZvNBoPB7/eTwZt+6qwIUBt2ZmamIcki9/qKxps3b8hDenp6HA5HKBTKbrZ1
Ffv7+5FI5KOPPnr//fcTiYRaWoKXXEoeGBiQkCy1YU9e8tjYGDmhGiUzhrJu
q9VKRZIKr8xtREqhO+Lz+SwWi4oK8tWS626ppkbJLKEyGw6HbTZbcx5VCpVl
Kshut1vwUixX8lVb9alIMmPIwpOTkwsLC9f0qFJisZjT6RQ23WpAsgy/UoVk
xlARIwuvra1d25Uq2draGhoaorYVb4mVNCZZtl+JLJk9LpdLCafKQ+kHJcOi
1Q6NSW7Er4SVzJjt7e3p6emmXEYulMMEAgHeQos0LLlBvxJQMmPS6XRfX5/8
HSSbxuFwCLIEpg0lsycYDIZCIaUtfJjLOqjZxVtuljaUzBhqtnR2djIouXnI
yNwn/bahZPbs7e15PB42FiYoSlCsgGTNw6xGyJNIJOx2OyRrHmprx+NxZkbe
3983GAyQrHlMJpOcMeUWotPpIFnzUIimQM3MwslkUq/XQ7Lm8fv9kUiEmZFF
aHe3oWT2rK+vz83NMTNyNBr1er2QrHnS6bTZbJayx85yfqLko2cvqk9mBzUu
yI9tlBwoO17ByMgI90dgNSm5cLJc2aVuyc+IIpkLUu2j4mCY1LAYmbhgxuzp
KpOWnC+FWkZdXV0iPACkYcklh0rPktCLl8JLZg+VJipTVZ5RsF21lUtOVr2r
beLDQ0psNjY2eMvN0rBkaR+rki6wZC74fL6lpaUy0xVdo6afSJ6tdU8ofR0e
Hhan5DYtuSyuPXr2rHbdKZpk9pyfn1ssFgraUnatY+TqWlD64oODg8HBQaFW
FDYj+SKZKs0BSmrH8k8IKJkLZAG73X7RYSir8GYT2coTUteShUdHR4+Pj3lL
rKRxyeVna39EWMlcIDs7HI7c8oGrko3SolrXrZLJpMgWbkByuczc6Z1lKb8S
XDIXMpmM1Wq9fz94WcHVaBxJ2r2yMgiHw93d3YJbWJbkGrVk0RcL0lUhmQuU
Z66srNhsIwsVCWnB3LW7qooGTyQSFAcCgYAqlqVcKfmwTHVp2bns1Vr+N1VJ
5kUqlXK73UajcXFxUf4UOLoyFArZbDbKW1Q3/7YNJfOC6ohPPvnknXfe6e3t
nZqaikaj8Xic8odSq9KRWCw2OztLtu3o6Lh58+aPP/7I+4c3D0kmvyIh8iUH
g8E2nBF6HbJ7jPb3k6kpv6Xk1uv1ulwuvV6vK0BWpSNUzDc3N/O21czWM/Il
g0Zp7gGheHI1qEPTz/PHg+9AHa7z8DrVPVwUsOGaMUfkvUsAR8bHx09PT6/z
DSJsjQqEoiVtOuyWBUpp4V6BmulzANentZuPoM8BvFVg8xH0OYC3yuxsJfj+
g0BpFIot6HNocyYnJxUakc8/UV+JbwaCo2jbDX0O7UkL+xZqgR262xA2G5uq
dJMvIJtXj/NziUZ2zxhubFpsF5ztjugev1L67wGmFG9q/hXLXbOzfQ6r7pxP
w680BgWrwj092x3SfWph2G95EMzOuPz2h28Rr7QGBalc9Zfj1Ye6G5+/YDrb
P9vj8K+T8CutQeGq4FdHR1/f0t28dDI2ZPscum46dEH4laYoxCu6v05n/6e6
IcZ+Rbzc+ef3dT3wK21xkV9l+xYejPGpj852f6H75Z/Q56Apsq1Axzc/UZP/
p28cfNIc5u0FwIRXvy7pv+JAroNjDPMctMXr16+dTif3CQaY56AxZmZmBHmS
KuY5aAah5pxjnoM2yPUtOIUa/MU8Bw3AZt5Co2Ceg6qh6obuoICVDtZWqBqW
8xYaBWsrVIogfQu1QJ+DShGnb6EW6HNQHUL1LdQCfQ6qQy0NLvQ5qAgx+xZq
oZYi0Oacn5/39/erqHJBn4MqELlvoRbocxCcdDpNZV91jXf0OQiO+H0LtUCf
A3symUwymcxb3lVgdXWV3u7t7V2uhT85OZmcnOT7U5umos9BpmTQBOQnwWDQ
ZDIZjcaJiYn8Zj/xAvPz8/TW4/GYzWaDweD3++mFqhtWlGKNjY01JBlZmXyo
5FKR7OnpcTgcoVDo+fNvKzd/rdpEfX9/PxKJOJ1OuiOJRILBAvnWcil5YGAg
J/l5Yees5WcXm2pVbjqZl0x+qFLJjEmlUlarlYpkbuPF4tZlJfum362zbTzd
EZ/PZ7FYVFSQpSQfFvyq4FDZl9L7TqpRMkuozIbDYZvNVmXe0r0jS1/X3DqW
yjIVZLfbLXgpri256FclG5rW2SdXNZIZQxamlHthYUHKZg37VZ5YLEY1o7Ad
pHUlSwgs2TRXrZIZQ0WMLLy2tlbDWk36FbG1tTU0NERtK94SK7lKcrXAK+KV
+JLZQy3ouhZu3q8Oc+kHJcOi1Q5XSb4UWKgIZWkVWjJjtre3p6en69rpWn51
mNvYOhAI8BZaRIbkosDlZen2oLokMyadTvf19cnfWbhpHA6HIDsRNyK5kSAl
sGT2BIPBUCjUpOEagbIOanbxlpulEcnX8itxJDOGmi2dnZ0MglUeMjL3bWva
UDJ79vb2PB4PGwsTFCUoVkCy5mFWCeZJJBJ2ux2SNQ+1tePxODMj7+/vGwwG
SNY8JpOpMMDKCJ1OB8mah0I0BWpmFk4mk3q9HpI1j9/vj0QizIwsQru7DSWz
Z319fW5ujpmRo9Go1+uFZM2TTqfNZnPBBlVz9cqQOvviYsabxMQkqalZIyMj
3Ke+l0uuq66+ojraBZPMhUL7qGg1KY+QPFucm5Q9WHpHLu5S2bdQy6irq0uE
BS9VTcL62iUVFfvhK7ULKZk9VJqoTJXNLZIwrtTZsmkjRTtfzLDcqfwSSmw2
NjZ4y81SkFxXXaVPlSuq1C4dssSRzAWfz7cUfijpJIfSZsy9qeFXxY+UWJvS
1+HhYXFKblby0lI9ddWUKbo6XokmmT3n5+eWv/vt3YU/1LRt5azJygnfuVyj
pl8dHBwMDg4KtU4nK9lioXqqtrr6fnVYPyUTUDIXXv/385mZ335bXIQiI14d
FnPXXCUh7Vdk4dHR0ePjY94SK6Gbbrfbs32kTcSr0iBVtZ5CWMk8+PMf7/7x
Nw5HdvmAzPyq1gUll20mkyJbmFzLkZW8dpW6qlO1Q1xSbMnM+b+jlbtfvvhf
q9Ua/GxOsj2Yt115e7Akx6j4yItnn929b+/uFtzCmUzGar1DiqvU1fWrGvEq
HA53Cy+ZOX/+93zCML94x2aLxWJVmWpVOlE4VlF1JBIJh+vjubv/9F9qWJZC
qfXKSuiTCiHVHlZx5FJ77jNZyQ5HIBDASpw6pFIpt9ttNBoXFxflT4GjK0Oh
kM1mo7xFdfNv21AyL6iOICN3dHT09vZOTU1Fo9F4PE75Q6lV6QhFttnZWbIt
XRkMBlU9PbINJXOE8lvK571er8vl0uv1ugJkVTpCxXxzc1Njtm1DyQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO78Pxv3Zlc=

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->122599109],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnV1MW2eax89umkJajUvbcRPAlYMRCGxaSlyPEF5KZ6AzeF0EuIRNsTMq
MyHTtaw6FLxkWBZPulioFA2stFlLliJfoUjcRFqJRCutlLv17tzkZiVX4oKr
VS99mcvsYx/8fY45/nrPe47/v4sE+/jr/5znfd7n/e75XdBz968FQVhrp388
yxu//Pbb5T9+0UEPbn6z9vd/+Gbljuub9ZU/rHw7+rtL9OQnfyUI/03/p/9+
BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJDh7OwsHo+H
MzizbGxs0MNoNJpMJtX+gUBLPHv2zOfzmUymzs7OqampmxnCWZaWluihy+Uy
m81Go3FhYeHx48dq/2TALy9fvqQo1Nvb63A4/H7/w4cPjy8iFosFg8GJiQly
wkgkkkql1BYB+CKRSFitVopCBwcHF7pTOeSEHo/HYrEgdgERClOBQMBms9Xm
USXhi2LX5OQkAleLQ041PT29vLxcp0cVsrm5OTo6+tNPP6ktDqgDRRVyqq2t
rQY6lcje3t7w8DA1J9WWCFTA6XQ2w6lEKOMaHBxEhdhq7O/vz87ONsmpRCht
83q9agsF7Egmk/39/UdHR031K8LhcDx79kxtuYARPp/P7/c326mOM4kWtTTV
lgtYQC21rq4uBsFKhPwqkUioLRo0nWg06nK52DgVQYGRwqPaokHTYVYJikQi
EbvdrrZo0HScTmc4HGbmV7FYzGg0qi0aNB2TyaRkTLmBCIKgtmjQdKhWorqJ
mVPF43GDwaC2aNB0FhYWgsEgM79CV0OLsL29vbi4yMyvQqGQ2+1WWzRoOslk
0mw2X+wQjx7cubkmNXXmYE2cQnrnwSMFfjU2NvbkyRO1RQMWXNwkPPedcr/K
e5us3xVAjcHu7u6XL1+qrRiwgAIIhZGKPnXnwYGk39DF7JMKHItyuZ2dHbXl
AnZ4PJ7V1dVKPiHpNvRkvvojH6tUF1LGPjIygmDVUqRSKYvFQvVUdX5V5EqV
/Oro6GhoaOjFixdqCwWsoZtut9tl+0jriFfkVOPj4ycnJ2pLBOpAruVwOKRX
TEinTxfnV/F4HE4Fzs7OrFbr7du3lflV+lkxSEleDwQCPT09cCrwKrMqZ319
3WazbW5uSvtVkQ9J919FIhEKfV6vFytxQCGJRGJycvLdd99dWVlRPuuPXun3
+7u7u/v7+zHlGEhC6ZYgCG1tba+//npfX9/MzEwoFAqHw5QyFToSPUORbX5+
nkIcvXhsbIzede3aNXQpAEk++ugj8pD79++/yvgY5fNut9vpdBoMBiELORI9
Q5Ftd3c3N8F4dHSULn399deq/nzAI+Qn5BvXr1+vIeyQE7a3t9PbMZUdFEKt
QtExas6RqHKkt1PEQ20IckxPT5NXfPXVVzV/ArnTwMAAfQg5WON+F9AwlJaL
iXedXQTPnz+nz6G4h638APkSeRT5A3lX/Z9GqTt9FKXx9X8U0DRU95EnUD3Y
kE9LpVKil0aj0YZ8INAilKWLNVcD9xR68uQJfWZHRwc63lsTyrSvX79OPrC7
u9vYT56bm6OPpX8b+7FAE9y/f1/sGWj4J1OkonhFH46Z7a2GOGRDNGnqHeVX
YhsTW6u1FIVDNk0CgzstwNO7YngaOzytb8hGOclkMj+4c3o4Jtx92rwvAyqQ
v6npv76M1zlkoxxxcGfg/Y6MT8OvdAYFq+w9PT3sEN6vc8hGORQPRZ+a9k4j
XukNClKZ6u9Veshmle6ywVjvkI1yqBJMd5G1XR4RFuFXuoLCVcavMkM2b9Nd
Xvo+zvL7xcGdnwnvwa90RTZeiUM27wsd58GLFenBHWN6ZmAAgzu6Ip1f/bM4
ZNN22S58yT5uPPm339O3v97ejsEdHXH6w6jQ9k433dn1z83qpM+nhz8XejG4
ozPu318UCvqvVOD00CH43swM7uAsOX3Q7CEb5WBwR08wGLJRzqefforBHR3A
ZshGObnBnefPn6v9W0CN1L/KphmcD+4MDHDi6qBa6l9l0wzIncSqGSt3tEij
Vtk0g/PBnfZ21ZsSoCoau8qmGWDljhZp7CqbZkC1IVbuaItmrLJpBuLKnXYM
7miB5q2yaQa3bt3iPK4CkeatsmkGuZU7GNzhGX6GbJSTa7dicIcxlCaR8cMZ
nFk2NjboISW9hZtscDVkoxxxcKewn025ZFAtlH77fD6TydTZ2Tk1NSVuFhvO
srS0RA9dLpfZbDYajQsLC2Kuws+QjXJygzvff/99VZJReyqHvIKKZG9vr8Ph
8Pv9+X37s/sQlx+HFIvFgsHgjRs36O5QqddchUKS5+bmrly5MjAwUCRZHlHy
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
4lkye5xOZzOcSoTSj8HBQd5qh+okV+NX3EpmzP7+/uzsbE0uoxTKYbxer9pC
81QtuUq/4lAyY5LJJLWslZ8gWTMOh4OTztIWlMwen8/n9/ubbeHjTNZBzS61
5aZpQcmMoWZLV1cXg5IrQkZWffVEC0pmTzQadblcbCxMUJSgWAHJuodZjSAS
iUTsdjsk6x5qa4fDYWZGjsViRqMRknWPyWRSMqbcQARBgGTdQyGaAjUzC8fj
cYPBAMm6Z2FhIRgMMjMyD+3uFpTMnu3t7cXFRWZGDoVCbrcbknVPMpk0m81S
9jhYEydK3nnwqPxielDjHHFso+CJoudLGBsbU303sxolZy8WK8vplnwPL5JV
Qap9lB8MkxoWIxNnzZi+XGbSguuFUMuou7ubh8UUVUsueKrwKgk9/5N7yeyh
0kRlqswzsrYrt3LBxbJH8iY+PqbEZmdnR225aaqWLO1jZdI5lqwKHo9ndXW1
yHR515D1E8mrcveE0teRkRF+Sm7Nkovi2p0HD+TrTt4ksyeVSlksFgraUnat
YOTyWlD6xUdHR0NDQ1wdLlmL5PNkqjAHKKgdi9/BoWRVIAvY7fbzDkNFhTed
yJZekHotWXh8fPzk5ERtiaVUL7n4qvxbuJWsCmRnh8ORWT5wUbJRWFQrulU8
HufZwlVILpaZuXywJuVXnEtWhbOzM6vVevu2L1fByTSOJO1eWhkEAoGenh7O
LaxIskwtmffFrHRNSFYFyjPX19dttrHlkoQ0a275rqq8wSORCMUBr9eriWUp
F0o+LlJdWHZyvVpr/6ApyWqRSCQmJyc7OztXVlaUT4GjV/r9/oGBAcpbNDf/
th7JNptNi5LV4scff3zrrbcuXbp0/fr1mZmZUCgUDocpfyi0Kj2zubk5Pz9P
tn3ttdfa29s/+eQTtX947VC1SH7V1tbW19enRDK90ufzteCM0HoQ9/MfHR2l
/JaSW7fb7XQ6DQaDkIWsSs9QMd/d3SXb5nau1sHIhULJav9M7ZHbXKWqThhs
fAcqI24QWu1+/tj4DlSgnt2nxc1FqUJEywiUUOdu+WKsu3fvXmN/FdA0cfFo
7zrO1xaPRiUwQAZEcoeP1NmmE4+71eiGkKDhNOqsQD31OYA6qa1vQQ70OQAR
Md++detWQz4NfQ7gVXNOtkKfA2jSUdrieanoc2hN6u9bkCN3Qjf6HFqNXN9C
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
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->185357137],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnU9MI3eWx2uH7abT6XjoZC014JHBBNTYRMTxWmJtMSQyk8FyI8Br2G7s
HoV008laVhwCXjpeFk9rsVDTKPQeeixZavmEkJhDbw40Gmmlvo13R1pxieRI
HHxaJTeOHGefXXa5bFfZ5T/1q1+V3+eQtF22qe+r93u/9/s/+HnY++gXDMOs
X4P/eFc2P/nmm5Vv/7EHXix+tf7PX3y1+tD91cbqF6vfTHzeBW/++m8Y5r/h
/7l//xVBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEBGy2WwqlYrlcRbZ3NyEl4lEIpPJKH2DiJo4PT0NBAIG
g6G3t3d6enoxT6zI8vIyvHS73UajUa/X+3y+o6MjpW8ZoZfLy0uIQkNDQ3a7
PRgMvnjx4rgeyWQyHA5PTU2BE8bj8YuLC6VFIHSRTqfNZjNEoYODg7ruVA04
odfrNZlMGLsQFghToVDIYrE051EV4Qtil8vlwsDV4YBTzczMrKystOhRfKLR
6MTExE8//aS0OEQZIKqAU21tbbXRqVj29vbGx8ehOam0REQBnE6nHE7FAhnX
6OgoVoidxv7+/tzcnExOxQJpm9/vV1ooQo5MJjMyMnJ4eCirXwF2u/309FRp
uQghAoFAMBiU26mO84kWtDSVlouQAFpqfX19BIIVC/hVOp1WWjQiO4lEwu12
k3EqAAIjhEelRSOyQ6wSZInH4zabTWnRiOw4nc5YLEbMr5LJpF6vV1o0IjsG
g0HKmHIbYRhGadGI7ECtBHUTMadKpVI6nU5p0Yjs+Hy+cDhMzK+wq6FD2N7e
XlpaIuZXkUjE4/EoLRqRnUwmYzQa6zvEyycPF9eFps4crLNTSB8+eSnBrxwO
x6tXr5QWjZCgfpOw4DvVflXyNlG/4wGNwf7+/svLS6UVIySAAAJhpKZPPXxy
IOg3cLH4pgTHglxuZ2dHabkIObxe79raWi2fEHQbeLNU/YGP1aoLIWO3Wq0Y
rDqKi4sLk8kE9VRjflXmSrX86vDwcGxs7OzsTGmhCGngodtsNtE+0hbiFTjV
5OTkycmJ0hIRZQDXstvtwismhNOn+vlVKpVCp0Ky2azZbL5//740v8q9ywYp
weuhUGhwcBCdCvlrflXOxsaGxWKJRqPCflXmQ8L9V/F4HEKf3+/HlTgIn3Q6
7XA4dDrd6uqq9Fl/8MlgMNjf39/T0/P9998rLQKhkY8//phhmO7u7q6uruHh
4dnZ2UgkEovFIGXiOxK8A5FtYWEBQtzVq1ffeecdJs/XX3+ttAKEOsB5WPe4
du3aWR7I5z0ej9PphCDGFAGvg3dcLtfu7i47wTiRSHBXsWMB4QNJEVRkrG9A
OGr062ygAz788EPsCEU47t69yzrG7du3m3CMTCYDUY79BYhjctwhojpOT0+5
iuzNmzfN/QhEOa4axRX0CESnW7dusS7x5ZdftvI7UAmyvwPVYhvvEFEj0Ihj
nQG8q8XtFCCN5+IetALadIOI+uB7Qltm3/G9FDtIOxN+zTU/P9+u3+RqVWgL
tOU3EXUBDTfWAXp6etoYW/itANz0o9Pg9wwkEon2/jjXazEwMIDdWR0F15M5
MTHR9h/n97Li4E7nwB+ykWl7f+5P4OCOpnn9iH3Gjud/bm3IRjplgzs/PHMw
j17L98cQBTh/XnyouX8NTbUyZCMdfgqXB/1KY0CwKjzT05dfcI+ZwHZnXJPz
ytUrNuYe+pWmgCDleH5e6Fy62fqQjXT4XWS/ZPrQrzQFhKu8X3Gd4Tp9q0M2
0uF36a/h4I6WyMerP/Ke74M/EN0wgfPnmzi4oyleP2AemIr10bvMAOH6KFf/
6nU4uKM5zu8YC5FK99bfMoFD8nfAby/g4I42yLf3rxYeqmnxXJGbOH/+d8wQ
Du5oCVmHbKSDgztagsCQTRM3g4M7qqbFVTZygCt3NAA3X4Weh5jNZnHljqrh
z6+j6oQabnAHV+6ojnatspEDXLmjXvjrFyipAflA0s7FUly5oxbavspGDnDl
jrrg1zI0D5rAfQ4MDNB/nwiLTKts5ABX7qgFWVfZyAGu3FEFXK+jWtpZEFG5
disO7hAmm81CoymWx1lkc3MTXkJQ4kZnqBqykY7g4I5EyUgTQMoRCAQMBkNv
b+/09DS7WWysyPLyMrx0u91Go1Gv18/Ozl6/fp2qIRvpcGHWZDLdu3dPomSf
z3d0dKT0vasGSDOgSA4NDdnt9mAwWNq3v7gPcfVxSMlkMhwOW61WiFT9/f0/
//yz0iIa48cff7xy5cpbb701MjJSJlkcVvLU1BQ4YTweJzatWqWk02mz2QxF
smqv/tKG/DXOO4InMj8/D6VeRQWZlQzRSfh4gnqAZK/Xqy7JJIEwFQqFLBaL
iHnrHHLEB8oyFGSXy0V5Ka4nuQHUIpkwYOGZmZmVlZVatsvFqQZOlIxGoxMT
E9R2YUmS3CCUSyYMFDGw8NbWllTzSQ5de3t74+PjFM4ZaFiyZKiVTB5oQde3
MN+XGqgSc+nH6OgobbWDJMnNQqdkwuzv78/NzUkxV6k5WPf423Igh/H7/UoL
LSFdctPQJpkwmUwGWtbSD6NpGrvdTskAXAdKJk8gEAgGg3Jb+DifdUCzS2m5
OTpQMmGg2dLX10eg5LKAkRWfjdyBksmTSCTcbjcZCwMQJSBWoGTNQ6xGYInH
4zabDSVrHmhrx2IxYkZOJpN6vR4lax6DwSBlgLWNMAyDkjUPhGgI1MQsnEql
dDodStY8Pp8vHA4TMzIN7e4OlEye7e3tpaUlYkaORCIejwcla55MJmM0GquM
URyuERwBFJ7ax010qDVq6HA4FF9L2IzkWupqzESjRbIiVLWPSoYSMBnvLf7V
0oQ/8fFoaBn19/fTsOClMck11bEOJ+ZX9EgmD5QmKFOCVqxTFktXeV8RBxKb
nZ0dpeXmaFCyuDr48MP1dXEb0SNZEbxe79raGs9WXJGsNRumrJA/fPKkZkUC
6avVaqWn5DYgWVQd+zXRskebZPJcXFyYTCYI2lV2FfGrQrpRvJR/Waodq75x
eHg4NjZG1eZ4DUgWUVf8p7BfUShZEcACNpst12EoOV6Vrtb8Clh4cnLy5ORE
aYmVSJUseLX0poBfUStZEcDOdrv94GBLan5VyjwO1kWeSyqVotnC0iQLqCtN
8y/CfYRyyYqQzWbN5o/uLRWsJJzDCrlQ2QKw4gdCodDg4CDlFq4vWURdkbJv
qEKyIkCeubER/G1FIazoXhBYksP1auU+Fo/HIQ74/X5VLEupK7lCXTmFz6lL
slKk02mXy9Xb27u6uip9Chx8MhgMWiwWyFtUN/8WJH/yySc9PT1NSH7//ffV
KFkpoI4AI3d3dw8PD8/OzkYikVgsBvkD36rwTjQaXVhYAHeCTwYCAfVOjzw4
OGAYBlR0dXWBq9SVDJ+BT167du3GjRsYppoA8luwucfjcTqdOp2O23oFHgG8
A5Ftd3dXve7EAo7BbdsFYiVK5rYl/Oyzz5RWgNAIOAbrIeAq0r/15s2b6g2O
EISFv8tuo4GXf/CBTLeHqJRWqjN+BaqKfS8RMrDpOrvHYHPpN/cLuF83wsLf
XBTco7kfuby8vH37NvsjtJ2sgSgCuAGXHbUy94C/Xzcm8B0O/ygTaNm1+Gvz
8/PsTyl7dieiOFy6Di7R+q/xE3g8cKdj4W8J3q5kmztoA3K2Dt/8qjOBh86l
62082pJ/4A4eMdCBcCd5QTuuvVOFX716xYVBTOA7Cn66LsciLC6BV8tJLkhb
4I6WaEu6Xg3//Gjc0V3TvH7EPmbH84OjI66ekm/L4sePH3MJ/OUPzxzMo9cy
/SVEMc6fF5/rD88mmOs32Scu6wk+/LOt86BfaQ8IVoXH+vVnU6UwIvPKPi6B
v3L1ipVZQr/SGhCuHM/PCwduXpUvXa9mZmaG/XM9zK/Qr7QGhKu8X3FPefTX
M2T+MjQ8uQT+3zpy9w8tk49XfyjWSl3ML779E7kjKbmOspvy17wIWV4/YB7c
LGbRvcwHJKukXAKv1xFoKSDEOZ/5VaFVptddYR78J+E/f3TwOwI9Gwhh8r2U
hXSdGfndOfk7OH/+S6ZP1p5YhDw0jKrIPXKEEIaeaZzyjXQjhOFPO1d81opM
M3MQ8tA2y06OmYQIYehc1tfemc8IeehchtzelRoIYWjeNqFdK8sQwsDD4qob
CleJtmUlLEIeblV7T08Pnelx6yv3EcLAYwJ3oj8acBEV8kCl7wWpT3PbWJGn
lZ2REMKo62GppQgg6qpc1FJldziJREJ1yTD9TYwOR6WNd8q7RDRMNptNpVKx
PM4im5ub8BICVCZTmFGs3s7G6i7cMslTMwuLd6aFJCNNcHp6GggEDAZDb2/v
9PQ0e9hDrMjy8jK8dLvdRqNRr9d/+umn3KNR4+b83JAThFyJkn0+H66klg6E
GiiSQ0NDdrs9GAzmDtuqRzKZDIfDVqsV0iqLxULDvIWGAMlPnz69fv36yMiI
gGShA3tYyVNTU+CE8XhcdZIJk06nzWYzFElIkCQeI8IHnsjCwoLJZFJRQa4v
ueaRaiDZ6/WqSzJJoMyGQiGINs15FB8oy1CQXS4X5aVYquR6R/WpSDJhwMIz
MzMrKystehSfaDQ6MTFBbcu9AckS/EoVkgkDRQwsvLW11bIrVbK3tzc+Pk7h
uqrGJEv2K5olk8fpdMrhVCyQfoyOjtJWOzQmuRG/olYyYfb39+fm5ppyGalA
DuP3+5UWWqJhyQ36FYWSCZPJZKBlLf0Eyaax2+2UdGp1oGTyBAKBYDAot4WP
81kHNLuUlpujAyUTBpotfX19BEouCxhZ8WkzHSiZPIlEwu12k7EwAFECYgVK
1jzEagSWeDxus9lQsuaBtnYsFiNm5GQyqdfrUbLmMRgMUsaU2wjDMChZ80CI
hkBNzMKpVEqn06FkzePz+cLhMDEj09Du7kDJ5Nne3l5aWiJm5Egk4vF4ULLm
yWQyRqNRyB4H6+xEyYdPXlZfzA1qFGDHNnhvlL1fgcPhUHyXvCYlFy+WK+N0
C36HFsmKINQ+Kg2GCQ2LgYmLZsxdrjIp7zofaBn19/fTMOm9Ycm8t/hXQWjh
n9RLJg+UJihTVZ5RtF21lXkXq16Jm/j4GBKbnZ0dpeXmaFiysI9VSadYsiJ4
vd61tbUy05VcQ9RPBK+KPRNIX61WKz0lt2nJZXHt4ZMn4nUnbZLJc3FxYTKZ
IGgL2bWGkatrQeEPHx4ejo2NUbX/VTOSC8kUPwfg1Y7l36BQsiKABWw2W6HD
UFLhzSWylReEPgsWnpycPDk5UVpiJY1LLr8q/hVqJSsC2Nlut+eXD9RLNvhF
taZbpVIpmi3cgORymfnLB+tCfkW5ZEXIZrNms/n+/QBXwYk0jgTtXlkZhEKh
wcFByi0sSbJILVnyxaJ0VUhWBMgzNzY2LBbHSkVCWjS3eFdVyeDxeBzigN/v
V8WylLqSj8tU88sO16u1/i+qkqwU6XTa5XL19vaurq5KnwIHnwwGgwMDA5C3
qG7+bSuSLRaLGiUrxeeff97d3d3V1XXr1q07d+5EIpFYLAb5A9+q8E40Gl1Y
WBgdHYVPslu1q7eHGapF8CtQPTw8PDs7W1syuBN8MhAIdOCM0KbJH79V2M//
u+++g+TW4/E4nU6dTsdt7gFWhXegmO/u7oJtuaNnVLeZTDWQ0kuRrPRtqg/u
+C3puyPyD39X0eZXCDGa3s+f26wPHAwzWKSCVjYI5b6r+NFdCFW0uEEoF+vg
6ziQgbDwc6Smz9fmcjM8LQth4dp04F1Nt+n4bUn19jkg7YLvDy1uPaelPgek
RZroWxCDf9wt9jl0MvzDR9qSb3Ob7VNy/C6iCHIcPoJ9Dh2OTEdpn56ecj+L
G+l3Gm3pWxAD+xw6lsePH7fetyAGhCmujYkzSToHqPXa1bcgBr/PQY7fRyik
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
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->637550981]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["HuffmanTree"]],"paclet:WaveletWare/ref/HuffmanTree"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BranchColor"]],"paclet:WaveletWare/ref/BranchColor"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BranchFontColor"]],"paclet:WaveletWare/ref/BranchFontColor"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BranchFontSize"]],"paclet:WaveletWare/ref/BranchFontSize"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BranchLength"]],"paclet:WaveletWare/ref/BranchLength"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Options and Values"]],
   "paclet:WaveletWare/guide/List of Options and Values"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->401819766]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"BranchThickness",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:WaveletWare/guide/WaveletWare", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 8, 25, 9, 46, 18.3866663}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "WaveletWare`ImageProcessing`", "keywords" -> {}, "specialkeywords" -> {},
     "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Wavelet Ware Package Symbol", "language" -> "en", "paclet" -> 
    "WaveletWare Package", "status" -> "None", "summary" -> 
    "BranchThickness is an option for HuffmanTree that sets the thickness of \
the branches.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "BranchThickness", "titlemodifier" -> "", "windowtitle" -> 
    "BranchThickness", "type" -> "Symbol", "uri" -> 
    "WaveletWare/ref/BranchThickness"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[5516, 153, 386, 15, 30, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->19919167]},
 "RasterizedOutput"->{
  Cell[7724, 238, 8338, 145, 339, "Output",
   CellTags->"RasterizedOutput",
   CellID->122599109],
  Cell[16065, 385, 8813, 152, 339, "Output",
   CellTags->"RasterizedOutput",
   CellID->185357137],
  Cell[24881, 539, 8809, 152, 339, "Output",
   CellTags->"RasterizedOutput",
   CellID->637550981]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 38086, 833},
 {"RasterizedOutput", 38228, 837}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[587, 21, 4061, 98, 48, "AnchorBarGrid",
 CellID->1],
Cell[4651, 121, 292, 11, 44, "ObjectNameGrid"],
Cell[4946, 134, 545, 15, 83, "Usage"],
Cell[CellGroupData[{
Cell[5516, 153, 386, 15, 30, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->19919167],
Cell[CellGroupData[{
Cell[5927, 172, 195, 6, 25, "ExampleSection",
 CellID->177461227],
Cell[6125, 180, 65, 1, 31, "MathCaption",
 CellID->16454449],
Cell[6193, 183, 126, 4, 42, "Input",
 InitializationCell->True,
 CellID->861618089],
Cell[6322, 189, 620, 24, 49, "ExampleText",
 CellID->114441213],
Cell[CellGroupData[{
Cell[6967, 217, 754, 19, 75, "Input",
 CellID->74704213],
Cell[7724, 238, 8338, 145, 339, "Output",
 CellTags->"RasterizedOutput",
 CellID->122599109],
Cell[16065, 385, 8813, 152, 339, "Output",
 CellTags->"RasterizedOutput",
 CellID->185357137],
Cell[24881, 539, 8809, 152, 339, "Output",
 CellTags->"RasterizedOutput",
 CellID->637550981]
}, Open  ]]
}, Open  ]],
Cell[33717, 695, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33785, 700, 270, 12, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[34058, 714, 1526, 43, 70, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[35621, 762, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[35900, 776, 31, 0, 70, "SectionHeaderSpacer"],
Cell[35934, 778, 211, 6, 70, "MoreAbout",
 CellID->401819766]
}, Open  ]],
Cell[36160, 787, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

