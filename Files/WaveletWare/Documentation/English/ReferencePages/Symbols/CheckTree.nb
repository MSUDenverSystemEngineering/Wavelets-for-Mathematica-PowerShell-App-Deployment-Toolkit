(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     21164,        691]
NotebookOptionsPosition[     16962,        562]
NotebookOutlinePosition[     19089,        618]
CellTagsIndexPosition[     19004,        613]
WindowTitle->CheckTree
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["WAVELET WARE PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MaxIts\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/MaxIts"], "\<\"CheckData\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckData"], "\<\"CheckIterations\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckIterations"], "\<\"CheckFilter\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckFilter"], "\<\"CheckDataFilterSize\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckDataFilterSize"], "\<\"CheckParity\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckParity"], "\<\"CheckIterationValue\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckIterationValue"], "\<\"CheckColor\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckColor"], "\<\"WaveletTree\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/WaveletTree"], "\<\"FBITree\"\>":>
       Documentation`HelpLookup["paclet:WaveletWare/ref/FBITree"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"List of Functions - Alphabetical\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Alphabetical"], \
"\<\"List of Functions - Categorical\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Categorical"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WaveletWare/ref/CheckTree\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WaveletWare/ref/CheckTree"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/WaveletWare/ref/\
CheckTree.html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]},
             Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$27983], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "WaveletWare/ref/CheckTree", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["CheckTree", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"CheckTree", "[", 
       RowBox[{
        StyleBox["tree", "TI"], ",", 
        StyleBox["datatype", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]determines, given ",
     Cell[BoxData[
      StyleBox["datatype", "TI"]], "InlineFormula"],
     ", if an input ",
     Cell[BoxData[
      StyleBox["tree", "TI"]], "InlineFormula"],
     " is valid for use with a packet transform."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6]]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->563689553],

Cell["", "SectionHeaderSpacer"],

Cell["\<\
CheckTree is a utility function used primarily by packet transform modules \
and wavelet plotting modules to make sure the input tree(s) are of the \
correct form.  \
\>", "Notes",
 CellID->1067943069],

Cell["\<\
CheckTree, if successful, returns the number of iterations of the transform \
as indicated by the length of the tree.\
\>", "Notes",
 CellID->513580513],

Cell["", "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->90557588],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->114520985],

Cell["This loads the package:", "MathCaption",
 CellID->16454449],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->861618089],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datatype", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tree", "=", 
  RowBox[{"WaveletTree", "[", "iterations", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"CheckTree", "[", 
  RowBox[{"tree", ",", "datatype"}], "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->323432550],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 ImageSize->{319, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->206181573],

Cell[BoxData["3"], "Output",
 ImageSize->{11, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->159068653]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datatype", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tree", "=", 
   RowBox[{"FBITree", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckTree", "[", 
  RowBox[{"tree", ",", "datatype"}], "]"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->214171855],

Cell[BoxData["5"], "Output",
 ImageSize->{11, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->335315193]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->255663307],

Cell[TextData[{
 "For an invalid tree, CheckTree returns ",
 ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"],
 "."
}], "ExampleText",
 CellID->73670504],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datatype", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tree", "=", 
  RowBox[{"WaveletTree", "[", 
   RowBox[{"3", ",", 
    RowBox[{"InputDimension", "\[Rule]", "2"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"CheckTree", "[", 
  RowBox[{"tree", ",", "datatype"}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->452219383],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 ImageSize->{497, 63},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->638010009],

Cell[BoxData["False"], "Output",
 ImageSize->{39, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->187203012]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["MaxIts"]],"paclet:WaveletWare/ref/MaxIts"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckData"]],"paclet:WaveletWare/ref/CheckData"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckIterations"]],"paclet:WaveletWare/ref/CheckIterations"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckFilter"]],"paclet:WaveletWare/ref/CheckFilter"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckDataFilterSize"]],
    "paclet:WaveletWare/ref/CheckDataFilterSize"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckParity"]],"paclet:WaveletWare/ref/CheckParity"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckIterationValue"]],
    "paclet:WaveletWare/ref/CheckIterationValue"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckColor"]],"paclet:WaveletWare/ref/CheckColor"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WaveletTree"]],"paclet:WaveletWare/ref/WaveletTree"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FBITree"]],"paclet:WaveletWare/ref/FBITree"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Alphabetical"]],
   "paclet:WaveletWare/guide/List of Functions - Alphabetical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->16241676],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Categorical"]],
   "paclet:WaveletWare/guide/List of Functions - Categorical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->378448797]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"CheckTree",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:WaveletWare/guide/WaveletWare", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 8, 25, 9, 46, 44.8123635}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "WaveletWare`MiscFunctions`", "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Wavelet Ware Package Symbol", "language" -> "en", "paclet" -> 
    "WaveletWare Package", "status" -> "None", "summary" -> 
    "CheckTree[tree, datatype] determines, given datatype, if an input tree \
is valid for use with a packet transform.", "synonyms" -> {}, 
    "tabletags" -> {}, "title" -> "CheckTree", "titlemodifier" -> "", 
    "windowtitle" -> "CheckTree", "type" -> "Symbol", "uri" -> 
    "WaveletWare/ref/CheckTree"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[7481, 217, 386, 15, 30, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->90557588]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 18862, 606}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[581, 21, 4693, 109, 48, "AnchorBarGrid",
 CellID->1],
Cell[5277, 132, 286, 11, 44, "ObjectNameGrid"],
Cell[CellGroupData[{
Cell[5588, 147, 634, 19, 82, "Usage"],
Cell[CellGroupData[{
Cell[6247, 170, 738, 24, 31, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->563689553],
Cell[6988, 196, 31, 0, 70, "SectionHeaderSpacer"],
Cell[7022, 198, 211, 5, 70, "Notes",
 CellID->1067943069],
Cell[7236, 205, 162, 4, 70, "Notes",
 CellID->513580513],
Cell[7401, 211, 31, 0, 70, "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7481, 217, 386, 15, 30, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->90557588],
Cell[CellGroupData[{
Cell[7892, 236, 195, 6, 25, "ExampleSection",
 CellID->114520985],
Cell[8090, 244, 65, 1, 31, "MathCaption",
 CellID->16454449],
Cell[8158, 247, 126, 4, 42, "Input",
 InitializationCell->True,
 CellID->861618089],
Cell[CellGroupData[{
Cell[8309, 255, 392, 10, 75, "Input",
 CellID->323432550],
Cell[8704, 267, 462, 15, 35, "Output",
 CellID->206181573],
Cell[9169, 284, 158, 5, 35, "Output",
 CellID->159068653]
}, Open  ]],
Cell[CellGroupData[{
Cell[9364, 294, 316, 9, 59, "Input",
 CellID->214171855],
Cell[9683, 305, 158, 5, 35, "Output",
 CellID->335315193]
}, Open  ]],
Cell[CellGroupData[{
Cell[9878, 315, 125, 3, 8, "ExampleDelimiter",
 CellID->255663307],
Cell[10006, 320, 178, 7, 33, "ExampleText",
 CellID->73670504],
Cell[CellGroupData[{
Cell[10209, 331, 378, 11, 59, "Input",
 CellID->452219383],
Cell[10590, 344, 1873, 57, 84, "Output",
 CellID->638010009],
Cell[12466, 403, 162, 5, 35, "Output",
 CellID->187203012]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[12667, 413, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12735, 418, 270, 12, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[13008, 432, 3116, 90, 70, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[16161, 527, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[16440, 541, 31, 0, 70, "SectionHeaderSpacer"],
Cell[16474, 543, 222, 6, 70, "MoreAbout",
 CellID->16241676],
Cell[16699, 551, 221, 6, 70, "MoreAbout",
 CellID->378448797]
}, Open  ]],
Cell[16935, 560, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

