(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     18934,        641]
NotebookOptionsPosition[     14397,        500]
NotebookOutlinePosition[     16552,        556]
CellTagsIndexPosition[     16467,        551]
WindowTitle->CheckFilter
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["WAVELET WARE PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MaxIts\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/MaxIts"], "\<\"CheckData\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckData"], "\<\"CheckIterations\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckIterations"], \
"\<\"CheckDataFilterSize\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckDataFilterSize"], "\<\"CheckParity\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckParity"], "\<\"CheckTree\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckTree"], "\<\"CheckIterationValue\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CheckIterationValue"], "\<\"CheckColor\"\>":>
       Documentation`HelpLookup["paclet:WaveletWare/ref/CheckColor"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"List of Functions - Categorical\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Categorical"], "\<\"List \
of Functions - Alphabetical\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Alphabetical"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WaveletWare/ref/CheckFilter\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WaveletWare/ref/CheckFilter"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/WaveletWare/ref/\
CheckFilter.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$25647], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "WaveletWare/ref/CheckFilter", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["CheckFilter", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"CheckFilter", "[", 
       StyleBox["f", "TI"], "]"}]], "InlineFormula"],
     "\[LineSeparator]takes an input and determines whether it is an \
orthogonal filter (1), a biorthogonal filter (2) or not a filter (-1)."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6]]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->187532464],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 StyleBox["CheckFilter",
  FontFamily->"Courier New",
  FontSize->12],
 " checks the length of the filter(s) and also checks the (bi)orthogonality \
conditions."
}], "Notes",
 CellID->1067943069],

Cell[TextData[{
 "Filters that are orthogonal save for the fact that they do not square sum \
to 1 (like {1/2,1/2}) will pass successfully through ",
 StyleBox["CheckFilter",
  FontFamily->"Courier New",
  FontSize->12],
 "."
}], "Notes",
 CellID->371246290],

Cell[TextData[{
 StyleBox["CheckFilter",
  FontFamily->"Courier New",
  FontSize->12],
 " returns -1 if the input is not a (near) orthogonal filter or a \
biorthogonal filter pair."
}], "Notes",
 CellID->34592397],

Cell["", "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->17070681],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->103329768],

Cell["This loads the package:", "MathCaption",
 CellID->16454449],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->861618089],

Cell["CheckFilter can detect orthogonal and biorthogonal filters.", \
"ExampleText",
 CellID->20456259],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"Daub", "[", "4", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckFilter", "[", "h", "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->179477156],

Cell[BoxData["1"], "Output",
 ImageSize->{11, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->239325136]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"SplineFilters", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckFilter", "[", "h", "]"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->23346646],

Cell[BoxData["2"], "Output",
 ImageSize->{11, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->366863543]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->13704834],

Cell[TextData[{
 StyleBox["CheckFilter",
  FontFamily->"Courier New",
  FontSize->12],
 " works on \"almost\" orthogonal filters."
}], "ExampleText",
 CellID->106181731],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckFilter", "[", "h", "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->84026659],

Cell[BoxData["1"], "Output",
 ImageSize->{11, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->80541852]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->77179138],

Cell[TextData[{
 StyleBox["CheckFilter",
  FontFamily->"Courier New",
  FontSize->12],
 " returns -1 if the input is not a valid (bi)orthogonal filter."
}], "ExampleText",
 CellID->266945412],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"Range", "[", "4", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckFilter", "[", "h", "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->403207897],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 ImageSize->{19, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->15487443]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["MaxIts"]],"paclet:WaveletWare/ref/MaxIts"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckData"]],"paclet:WaveletWare/ref/CheckData"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckIterations"]],"paclet:WaveletWare/ref/CheckIterations"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckDataFilterSize"]],
    "paclet:WaveletWare/ref/CheckDataFilterSize"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckParity"]],"paclet:WaveletWare/ref/CheckParity"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckTree"]],"paclet:WaveletWare/ref/CheckTree"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckIterationValue"]],
    "paclet:WaveletWare/ref/CheckIterationValue"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CheckColor"]],"paclet:WaveletWare/ref/CheckColor"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Categorical"]],
   "paclet:WaveletWare/guide/List of Functions - Categorical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->293778309],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Alphabetical"]],
   "paclet:WaveletWare/guide/List of Functions - Alphabetical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->193835771]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"CheckFilter",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:WaveletWare/guide/WaveletWare", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 8, 25, 9, 46, 37.4192866}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "WaveletWare`MiscFunctions`", "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Wavelet Ware Package Symbol", "language" -> "en", "paclet" -> 
    "WaveletWare Package", "status" -> "None", "summary" -> 
    "CheckFilter[f] takes an input and determines whether it is an orthogonal \
filter (1), a biorthogonal filter (2) or not a filter (-1).", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "CheckFilter", 
    "titlemodifier" -> "", "windowtitle" -> "CheckFilter", "type" -> "Symbol",
     "uri" -> "WaveletWare/ref/CheckFilter"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[7424, 221, 386, 15, 30, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->17070681]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 16325, 544}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[583, 21, 4495, 105, 48, "AnchorBarGrid",
 CellID->1],
Cell[5081, 128, 288, 11, 44, "ObjectNameGrid"],
Cell[CellGroupData[{
Cell[5394, 143, 459, 12, 80, "Usage"],
Cell[CellGroupData[{
Cell[5878, 159, 738, 24, 31, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->187532464],
Cell[6619, 185, 31, 0, 70, "SectionHeaderSpacer"],
Cell[6653, 187, 211, 7, 70, "Notes",
 CellID->1067943069],
Cell[6867, 196, 258, 8, 70, "Notes",
 CellID->371246290],
Cell[7128, 206, 213, 7, 70, "Notes",
 CellID->34592397],
Cell[7344, 215, 31, 0, 70, "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7424, 221, 386, 15, 30, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->17070681],
Cell[CellGroupData[{
Cell[7835, 240, 195, 6, 25, "ExampleSection",
 CellID->103329768],
Cell[8033, 248, 65, 1, 31, "MathCaption",
 CellID->16454449],
Cell[8101, 251, 126, 4, 42, "Input",
 InitializationCell->True,
 CellID->861618089],
Cell[8230, 257, 103, 2, 33, "ExampleText",
 CellID->20456259],
Cell[CellGroupData[{
Cell[8358, 263, 209, 6, 43, "Input",
 CellID->179477156],
Cell[8570, 271, 158, 5, 35, "Output",
 CellID->239325136]
}, Open  ]],
Cell[CellGroupData[{
Cell[8765, 281, 242, 7, 43, "Input",
 CellID->23346646],
Cell[9010, 290, 158, 5, 35, "Output",
 CellID->366863543]
}, Open  ]],
Cell[CellGroupData[{
Cell[9205, 300, 124, 3, 8, "ExampleDelimiter",
 CellID->13704834],
Cell[9332, 305, 169, 6, 35, "ExampleText",
 CellID->106181731],
Cell[CellGroupData[{
Cell[9526, 315, 225, 7, 43, "Input",
 CellID->84026659],
Cell[9754, 324, 157, 5, 35, "Output",
 CellID->80541852]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9960, 335, 124, 3, 8, "ExampleDelimiter",
 CellID->77179138],
Cell[10087, 340, 191, 6, 35, "ExampleText",
 CellID->266945412],
Cell[CellGroupData[{
Cell[10303, 350, 210, 6, 43, "Input",
 CellID->403207897],
Cell[10516, 358, 174, 6, 35, "Output",
 CellID->15487443]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[10729, 369, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10797, 374, 270, 12, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[11070, 388, 2488, 72, 70, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[13595, 465, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[13874, 479, 31, 0, 70, "SectionHeaderSpacer"],
Cell[13908, 481, 221, 6, 70, "MoreAbout",
 CellID->293778309],
Cell[14132, 489, 223, 6, 70, "MoreAbout",
 CellID->193835771]
}, Open  ]],
Cell[14370, 498, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

