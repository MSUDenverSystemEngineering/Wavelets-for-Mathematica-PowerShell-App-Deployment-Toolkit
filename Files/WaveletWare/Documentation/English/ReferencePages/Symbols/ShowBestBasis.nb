(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    590706,      10560]
NotebookOptionsPosition[    580059,      10221]
NotebookOutlinePosition[    583375,      10312]
CellTagsIndexPosition[    583249,      10306]
WindowTitle->ShowBestBasis
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["WAVELET WARE PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"Computing and Plotting Wavelet Packet \
Transformations\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/tutorial/Computing and Plotting Wavelet Packet \
Transforms"], "\<\"Data Structures in the WaveletWare Package\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/tutorial/Data Structures in the WaveletWare \
Package"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WPT\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/WPT"], "\<\"WPTFull\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/WPTFull"], "\<\"BestBasisTree\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/BestBasisTree"], "\<\"FBITree\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/FBITree"], "\<\"WaveletTree\"\>":>
       Documentation`HelpLookup["paclet:WaveletWare/ref/WaveletTree"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WaveletWare/ref/ShowBestBasis\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WaveletWare/ref/ShowBestBasis"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/WaveletWare/ref/\
ShowBestBasis.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$103118], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "WaveletWare/ref/ShowBestBasis", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["ShowBestBasis", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     "ShowBestBasis[tree,opts]",
     "\[LineSeparator]gives a graphical representation of the best basis \
generated by ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BestBasisTree"]],"paclet:WaveletWare/ref/BestBasisTree"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6]]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->150541162],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ColorOn",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/ColorOn"], 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.333333", ",", " ", "0.333333", ",", " ", "0.333333"}], "]"}], 
    Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ColorOn"]],"paclet:WaveletWare/ref/ColorOn"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["ShowBestBasis"], "InlineFormula"],
     " that sets the color used to indicate an element of the best basis."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ColorOff",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/ColorOff"], 
    RowBox[{"GrayLevel", "[", "1", "]"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ColorOff"]],"paclet:WaveletWare/ref/ColorOff"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["ShowBestBasis"], "InlineFormula"],
     " that sets the color used to indicate an element is not part of the \
best basis."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BoundaryColor",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/BoundaryColor"], 
    RowBox[{"GrayLevel", "[", "0", "]"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BoundaryColor"]],"paclet:WaveletWare/ref/BoundaryColor"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["ShowBestBasis"], "InlineFormula"],
     " that sets the boundary color of each portion of the packet transform."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Frame",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Frame"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
Frame is an option for Graphics, Grid, and other constructs that specifies \
whether to include a frame. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotLabel",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotLabel"], 
    RowBox[{"{", "}"}], Cell["\<\
PlotLabel is an option for graphics functions that specifies an overall label \
for a plot. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["LabelStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/LabelStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
LabelStyle is an option for formatting and related constructs that specifies \
the style to use in displaying their label-like elements. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
ImageSize is an option that specifies the overall size of an image to display \
for an object. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["OpacityOn",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/OpacityOn"], "0.75", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OpacityOn"]],"paclet:WaveletWare/ref/OpacityOn"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["ShowBestBasis"], "InlineFormula"],
     " that sets the opacity level for the elements that are part of the best \
basis."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["OpacityOff",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/OpacityOff"], "0.3", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OpacityOff"]],"paclet:WaveletWare/ref/OpacityOff"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["ShowBestBasis"], "InlineFormula"],
     " that sets the opacity level for the elements that are not part of the \
best basis."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Show3D",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/Show3D"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Show3D"]],"paclet:WaveletWare/ref/Show3D"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["ShowBestBasis"], "InlineFormula"],
     " that provides a 3-dimensional graphic for the best basis of packet \
transforms of matrices."
    }], "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, True, True, True, True}}}}],

Cell[TextData[{
 "The input ",
 Cell[BoxData[
  StyleBox["tree", "TI"]], "InlineFormula"],
 " can be a best basis tree for either a 1-dimensional packet transform or a \
2-dimensional packet transform."
}], "Notes",
 CellID->293869076],

Cell["", "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(15)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->146040506],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->118678629],

Cell["This loads the package:", "MathCaption",
 CellID->16454449],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->861618089],

Cell["\<\
Plot the best basis tree for a 1-dimensional packet transform tree.\
\>", "ExampleText",
 CellID->119048367],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tree", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
       "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", "tree", "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->666294323],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{1, 0}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], RectangleBox[{2, 0}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], RectangleBox[{3, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{5, 0}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], RectangleBox[{6, 0}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], RectangleBox[{7, 0}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 1}, {2, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{2, 1}, {4, 2}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 1}, {6, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{6, 1}, {8, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 2}, {4, 3}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 2}, {8, 3}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 3}, {8, 4}]}},
  ImageSize->Automatic]], "Output",
 ImageSize->{244, 125},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->472063459]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->577038930],

Cell["\<\
Plot the best basis tree for a 2-dimensional packet transform tree.\
\>", "ExampleText",
 CellID->140821551],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tree", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{"tree", ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->487720912],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {InsetBox[
         GraphicsBox[
          {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
           Large]}], RectangleBox[{0, 0}, {4, 4}]}], {189., -193.5}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
         GraphicsBox[{
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 0}, {2, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}, {2, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}, {4, 2}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{2, 2}, {4, 4}]}}], {189., -580.5}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 1}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 2}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 1}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{1, 2}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{1, 3}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{2, 0}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{2, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 3}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{3, 0}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{3, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 3}]}}], {189., -967.5}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}]}, {}},
      ContentSelectable->True,
      ImageSize->300,
      PlotRangePadding->{6, 5}], {160., -157.5}, 
     ImageScaled[{0.5, 0.5}], {300, 300.}], InsetBox[
     Graphics3DBox[{
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 0}, {1, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 1, 0}, {1, 2, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 2, 0}, {1, 3, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 3, 0}, {1, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 0, 0}, {2, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 1, 0}, {2, 2, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{1, 2, 0}, {2, 3, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{1, 3, 0}, {2, 4, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{2, 0, 0}, {3, 1, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{2, 1, 0}, {3, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 0}, {3, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 3, 0}, {3, 4, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{3, 0, 0}, {4, 1, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{3, 1, 0}, {4, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 2, 0}, {4, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 3, 0}, {4, 4, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 0, 1}, {2, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 1}, {2, 4, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 1}, {4, 2, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{2, 2, 1}, {4, 4, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 2}, {4, 4, 3}]}},
      Boxed->False,
      ImageSize->300], {480., -157.5}, ImageScaled[{0.5, 0.5}], {300., 300.},
     ContentSelectable->True]}, 
   StyleBox[{{}, {LineBox[{{0, 0}, {0, -315.}}], 
      LineBox[{{320., 0}, {320., -315.}}], 
      LineBox[{{640., 0}, {640., -315.}}], LineBox[{{0, 0}, {320., 0}}], 
      LineBox[{{320., 0}, {640., 0}}], LineBox[{{0, -315.}, {320., -315.}}], 
      LineBox[{{320., -315.}, {640., -315.}}]}},
    Antialiasing->False]},
  ContentSelectable->True,
  ImageSize->{652., 327.},
  PlotRangePadding->{6, 5}]], "Output",
 ImageSize->{656, 327},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->524918352,ImageCache->GraphicsData["CompressedBitmap", "\<\
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
B/8v/obd7cc7p/IMaP+qH98Tln/5X/tkR64=\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->296147640],

Cell["Plot the best basis tree for a regular wavelet transform.", \
"ExampleText",
 CellID->37007167],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{"WaveletTree", "[", "4", "]"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->445641884],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3EFqU1EUx+GHThy6BXfh1KHTShfQYixOIqSCuGt3cE3JrIOYPnM97/z9
PkhpIRwO9/546aR9d//t5surZVke3xy/3Nz9+HA43P389Pb4w+3+8evDfvf5
4/777mF3eH//+ukdx9ev4+vp+wEAAKyyQEN6Jsn5nuc8++H69EwSPZNEzyTR
M0n0TBI9k0TPJNEzSfRMEj2TRM8kuaRn6EXPJFn39Ga108Hecm16LqHnSfRc
Qs+T6LmEnifRcwk9T6LnEnqeRM8l9DyJnkvoeRI9l9DzJHouoedJ9FxCz5Po
uYSeJ9FzCT1PcknP0IueSXK+57/9cP1XTttWf+JdpNHBNlp1ZP29lZ5naLTq
0HORRgfbaNWh5yKNDrbRqkPPRRodbKNVh56LNDrYRqsOPRdpdLCNVh16LtLo
YButOvRcpNHBNlp16LlIo4NttOrQc5FGB9to1aHnIo0OttGqw/9jJJGeSbLu
6b3aaWyLD/GpJ9BibKNV/zhWz0m3uZ2ZVWP1nHSb25lZNVbPSbe5nZlVY/Wc
dJvbmVk1Vs9Jt7mdmVVj9Zx0m9uZWTVWz0m3uZ2ZVWP1nHSb25lZNVbPSbe5
nZlVY/WcdJvbmVk1Vs9Jt7mdmVVjF2hIzyQ53/OLPu6v+4vB5e980Zst8H8u
oGcLJC2gZwskLaBnCyQtoGcLJC2gZwskLaBnCyQtoGcLJC2gZwskLaBnCyQt
oGcLJC2gZwskLaBnCyQtsEBDeibJhQ9zAADgmd85uSWY
    "], {{0, 82}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 82},
  PlotRange->{{0, 240}, {0, 82}}]], "Output",
 ImageSize->{244, 82},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->70663134]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(12)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True],

Cell[CellGroupData[{

Cell[TextData[{
 "ColorOn",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The color of those regions that represent the best basis can be changed \
from ",
 ButtonBox["Lighter",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Lighter"],
 "[",
 ButtonBox["Gray",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Gray"],
 "] (default) to any ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " color using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ColorOn"]],"paclet:WaveletWare/ref/ColorOn"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 "."
}], "ExampleText",
 CellID->241937436],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", "4", "]"}], ",", 
   RowBox[{"ColorOn", "\[Rule]", "Orange"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->424650288],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3EFKW1EYhuGLnXTYLbiLTh06tXQBSqM4iRCF0lmX7A5OI2TUQU+8TTjn
/3wetLQQfj68L0kn7eXd0839xbIsz5/3v9zc/rza7W5/ffuy/8P37fPjw3bz
43r7snnY7L7efXp7xf77df/99vsGAACsskBBeibJv3s+z3s/nJ6eSaJnkuiZ
JHomiZ5JomeS6JkkeiaJnkmiZ5LomSTH9Ay16Jkk6969We3wg/3t68Rfeh5C
z3pOomc9J9GznpPoWc9J9KznJHrWcxI96zmJnvWcRM96TqJnPSfRs56T6Hlg
z1CLnknS+Vgs4rB29Efe/38sTqXQ1Jb17630fA6FpjY967mn0NSmZz33FJra
9KznnkJTm5713FNoatOznnsKTW161nNPoalNz3ruKTS16VnPPYWmNj3ruafQ
1KZnPfcUmtr8f4wk0jNJ1r17r3Y4W+FD/Lw/gQpnC03tntVz0tOc5+aos3pO
eprz3Bx1Vs9JT3Oem6PO6jnpac5zc9RZPSc9zXlujjqr56SnOc/NUWf1nPQ0
57k56qyek57mPDdHndVz0tOc5+aos3pOeprz3Bx1Vs9JT3Oem6POLlCQnknS
efd+18f9Sf9icPwr3/ViAz7mAD0bkDRAzwYkDdCzAUkD9GxA0gA9G5A0QM8G
JA3QswFJA/RsQNIAPRuQNEDPBiQN0LMBSQP0bEDSgAUK0jNJjnwzBwAA/vIH
DiWS4w==
    "], {{0, 82}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 82},
  PlotRange->{{0, 240}, {0, 82}}]], "Output",
 ImageSize->{244, 82},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->1664002]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1016434212],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ColorOn"]],"paclet:WaveletWare/ref/ColorOn"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " can also be set for best basis trees of 2-dimensional transforms:"
}], "ExampleText",
 CellID->500535531],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tree", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{"tree", ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"ColorOn", "\[Rule]", "Red"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->445512537],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {InsetBox[
         GraphicsBox[
          {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
           Large]}], RectangleBox[{0, 0}, {4, 4}]}], {189., -193.5}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 0., 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}, {2, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}, {2, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}, {4, 2}]}, 
           {RGBColor[1., 0., 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}, {4, 4}]}}], {189., -580.5}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 1}]}, 
           {RGBColor[1., 0., 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}]}, 
           {RGBColor[1., 0., 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 1}]}, 
           {RGBColor[1., 0., 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 2}]}, 
           {RGBColor[1., 0., 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 3}]}, 
           {RGBColor[1., 0., 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}]}, 
           {RGBColor[1., 0., 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 3}]}, 
           {RGBColor[1., 0., 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 0}]}, 
           {RGBColor[1., 0., 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 3}]}}], {189., -967.5}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}]}, {}},
      ContentSelectable->True,
      ImageSize->300,
      PlotRangePadding->{6, 5}], {160., -157.5}, 
     ImageScaled[{0.5, 0.5}], {300, 300.}], InsetBox[
     Graphics3DBox[{
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 0}, {1, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 1, 0}, {1, 2, 1}]}, 
       {RGBColor[1., 0., 0.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 0}, {1, 3, 1}]}, 
       {RGBColor[1., 0., 0.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 3, 0}, {1, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 0, 0}, {2, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 1, 0}, {2, 2, 1}]}, 
       {RGBColor[1., 0., 0.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 2, 0}, {2, 3, 1}]}, 
       {RGBColor[1., 0., 0.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 3, 0}, {2, 4, 1}]}, 
       {RGBColor[1., 0., 0.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 0}, {3, 1, 1}]}, 
       {RGBColor[1., 0., 0.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 1, 0}, {3, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 0}, {3, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 3, 0}, {3, 4, 1}]}, 
       {RGBColor[1., 0., 0.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 0, 0}, {4, 1, 1}]}, 
       {RGBColor[1., 0., 0.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 1, 0}, {4, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 2, 0}, {4, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 3, 0}, {4, 4, 1}]}, 
       {RGBColor[1., 0., 0.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 1}, {2, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 1}, {2, 4, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 1}, {4, 2, 2}]}, 
       {RGBColor[1., 0., 0.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 1}, {4, 4, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 2}, {4, 4, 3}]}},
      Boxed->False,
      ImageSize->300], {480., -157.5}, ImageScaled[{0.5, 0.5}], {300., 300.},
     ContentSelectable->True]}, 
   StyleBox[{{}, {LineBox[{{0, 0}, {0, -315.}}], 
      LineBox[{{320., 0}, {320., -315.}}], 
      LineBox[{{640., 0}, {640., -315.}}], LineBox[{{0, 0}, {320., 0}}], 
      LineBox[{{320., 0}, {640., 0}}], LineBox[{{0, -315.}, {320., -315.}}], 
      LineBox[{{320., -315.}, {640., -315.}}]}},
    Antialiasing->False]},
  ContentSelectable->True,
  ImageSize->{652., 327.},
  PlotRangePadding->{6, 5}]], "Output",
 ImageSize->{656, 327},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->661248713,ImageCache->GraphicsData["CompressedBitmap", "\<\
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
8cF84r/0E7xaRFd+4xYw/626eTe4/ut/AYdch8Y=\
\>"]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "ColorOff",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The color of those regions that do not represent the best basis can be \
changed from ",
 ButtonBox["White",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/White"],
 " (default) to any ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " color using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ColorOff"]],"paclet:WaveletWare/ref/ColorOff"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 "."
}], "ExampleText",
 CellID->663898582],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", "4", "]"}], ",", 
   RowBox[{"ColorOn", "\[Rule]", "Orange"}], ",", 
   RowBox[{"ColorOff", "\[Rule]", 
    RowBox[{"Lighter", "[", "Yellow", "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->61090499],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt1jFKQ0EAhOGgjaVX8Ba2lraKB1CMYhMhCmLnkb3BM4Kta1Zcd3f4fiZB
IQzD2x/entw8XtwdrFarp6Pd18X1y9l2e/16ebz752rz9HC/Wd+eb57X9+vt
6c3h5y92n/fd5/PvBQAAAMCvWAETwmckUfZ5Wa5EpgifJSl8lqTwWZLCZ0kK
nyUpfJak8FmSwmdJCp8lKXyWpPBZkrKPz8Bc8BlJuG/0eS2+yR+Hz3xOCp/5
nBQ+8zkpfOZzUvjM56Twmc9J4TOfk8JnPieFz3xOCp/5nBQ+8zkpfOZzUvbx
GZgLPiOJjPvG19rer7ya12L/h7bvU+09o3Itn/lcNqT/kpq1fOZz2ZD+S2rW
8pnPZUP6L6lZy2c+lw3pv6RmLZ/5XDak/5KatXzmc9mQ/ktq1vKZz2VD+i+p
WctnPpcN6b+kZi2f+Vw2pP+SmrV85nPZkP5Latbymc9lQ/ovqVlb8hmYCz4j
iX++b3zVzvASb/sEZqidaOrS6f7M54lqJ5q68DnzNEfvbF/L56TTHL2zfS2f
k05z9M72tXxOOs3RO9vX8jnpNEfvbF/L56TTHL2zfS2fk05z9M72tXxOOs3R
O9vX8jnpNEfvbF/L56TTHL2zfW3JZ2Au+IwkfrhvVL3u//RisP8vq35sQPoA
PhuQNIDPBiQN4LMBSQP4bEDSAD4bkDSAzwYkDeCzAUkD+GxA0gA+G5A0gM8G
JA3gswFJA/hsQNKAks/AXPAZSXznMwAAAIAyH0zXznM=
    "], {{0, 82}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 82},
  PlotRange->{{0, 240}, {0, 82}}]], "Output",
 ImageSize->{244, 82},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->291060131]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "BoundaryColor",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The color of the boundaries of the plot can be controlled with the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BoundaryColor"]],"paclet:WaveletWare/ref/BoundaryColor"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " option."
}], "ExampleText",
 CellID->236082919],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", "4", "]"}], ",", 
   RowBox[{"ColorOn", "\[Rule]", "Orange"}], ",", 
   RowBox[{"ColorOff", "\[Rule]", 
    RowBox[{"Lighter", "[", "Yellow", "]"}]}], ",", 
   RowBox[{"BoundaryColor", "\[Rule]", "Red"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->22929764],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt20FKY0EURuHQThz2FnoXTnvoNI0LUIzSkwhJgzjLknsHzxecFymxrKqf
73IiBsLlkDrwapJfDy/bpx+bzeZ4vf7Z3r/+Phzu3/78XN/c7Y9/n/e7x9v9
v93z7nDzcHX+xPr6v77O/y/GGGOMMcaYz816nQamQ89IotzzcgfMgZ6RhJ6R
hJ6RhJ6RhJ6RhJ6RhJ6RhJ6RhJ6RhJ6RhJ6RxCU9A3OhZyThvtHlsXjCV6Nn
PSehZz0noWc9J6FnPSehZz0noWc9J6FnPSehZz0noWc9J6FnPSehZz0noWc9
J3FJz8Bc6BlJZNw3PmxPMzDRFzuR6pL1eys9Nyykt0adrZ71XC6kt0adrZ71
XC6kt0adrZ71XC6kt0adrZ71XC6kt0adrZ71XC6kt0adrZ71XC6kt0adrZ71
XC6kt0adrZ71XC6kt0adrZ71XC6kt0adrZ71XC6kt0adbbFnYC70jCS++b7x
sfY0w0O86TcwxdqJVJdO92c9T7R2ItVFz5GnOfzO5mv1nHSaw+9svlbPSac5
/M7ma/WcdJrD72y+Vs9Jpzn8zuZr9Zx0msPvbL5Wz0mnOfzO5mv1nHSaw+9s
vlbPSac5/M7ma/WcdJrD72y+ttgzMBd6RhLlnk81j/vLP/nlT6UWawlMKaBn
AkkCeiaQJKBnAkkCeiaQJKBnAkkCeiaQJKBnAkkCeiaQJKBnAkkCeiaQJKBn
AkkCeiaQJFDsGZgLPSMJY4wxxhhjzKfmHalkKOw=
    "], {{0, 82}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 82},
  PlotRange->{{0, 240}, {0, 82}}]], "Output",
 ImageSize->{244, 82},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->490461546]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Frame",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The ",
 ButtonBox["Frame",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Frame"],
 " option can be used when best basis trees of 2-dimensional trees are \
plotted with ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Show3D"]],"paclet:WaveletWare/ref/Show3D"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " set to ",
 ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"],
 " (default).  The ",
 ButtonBox["Frame",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Frame"],
 " option is used in this case as a regular option for ",
 ButtonBox["GraphicsRow.",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GraphicsRow"]
}], "ExampleText",
 CellID->461822369],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", 
    RowBox[{"3", ",", 
     RowBox[{"InputDimension", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "None"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->817396744],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {InsetBox[
         GraphicsBox[
          {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
           Large]}], RectangleBox[{0, 0}, {8, 8}]}], {189., -194.4}, 
         ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
         GraphicsBox[{
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 0}, {4, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}, {4, 8}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{4, 0}, {8, 4}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{4, 4}, {8, 8}]}}], {189., -583.2}, 
         ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}, {2, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}, {2, 4}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 4}, {2, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 6}, {2, 8}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}, {4, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}, {4, 4}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{2, 4}, {4, 6}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{2, 6}, {4, 8}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}, {6, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 2}, {6, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}, {6, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 6}, {6, 8}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 0}, {8, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 2}, {8, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 4}, {8, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 6}, {8, 8}]}}], {189., -972.}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 5}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 6}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 5}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{1, 6}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{1, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 7}]}}], {189., -1360.8000000000002}, 
         ImageScaled[{0.5, 0.5}], {360., 359.9999999999998}]}, {}},
      ContentSelectable->True,
      ImageSize->300,
      PlotRangePadding->{6, 5}], {160., -157.5}, 
     ImageScaled[{0.5, 0.5}], {300, 300.}], InsetBox[
     Graphics3DBox[{
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 0}, {1, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 1, 0}, {1, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 0}, {1, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 3, 0}, {1, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 0}, {1, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 5, 0}, {1, 6, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 6, 0}, {1, 7, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 7, 0}, {1, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 0, 0}, {2, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 1, 0}, {2, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 2, 0}, {2, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 3, 0}, {2, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 4, 0}, {2, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 5, 0}, {2, 6, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{1, 6, 0}, {2, 7, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{1, 7, 0}, {2, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 0}, {3, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 1, 0}, {3, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 0}, {3, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 3, 0}, {3, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 4, 0}, {3, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 5, 0}, {3, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 6, 0}, {3, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 7, 0}, {3, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 0, 0}, {4, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 1, 0}, {4, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 2, 0}, {4, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 3, 0}, {4, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 4, 0}, {4, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 5, 0}, {4, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 6, 0}, {4, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 7, 0}, {4, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 0}, {5, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 1, 0}, {5, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 2, 0}, {5, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 3, 0}, {5, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 0}, {5, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 5, 0}, {5, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 6, 0}, {5, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 7, 0}, {5, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 0, 0}, {6, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 1, 0}, {6, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 2, 0}, {6, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 3, 0}, {6, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 4, 0}, {6, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 5, 0}, {6, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 6, 0}, {6, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 7, 0}, {6, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 0, 0}, {7, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 1, 0}, {7, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 2, 0}, {7, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 3, 0}, {7, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 4, 0}, {7, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 5, 0}, {7, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 6, 0}, {7, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 7, 0}, {7, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 0, 0}, {8, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 1, 0}, {8, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 2, 0}, {8, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 3, 0}, {8, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 4, 0}, {8, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 5, 0}, {8, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 6, 0}, {8, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 7, 0}, {8, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 1}, {2, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 1}, {2, 4, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 4, 1}, {2, 6, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 6, 1}, {2, 8, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 1}, {4, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 1}, {4, 4, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{2, 4, 1}, {4, 6, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{2, 6, 1}, {4, 8, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 1}, {6, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 2, 1}, {6, 4, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 1}, {6, 6, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 6, 1}, {6, 8, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 0, 1}, {8, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 2, 1}, {8, 4, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 4, 1}, {8, 6, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 6, 1}, {8, 8, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 0, 2}, {4, 4, 3}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 2}, {4, 8, 3}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{4, 0, 2}, {8, 4, 3}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{4, 4, 2}, {8, 8, 3}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 3}, {8, 8, 4}]}},
      Boxed->False,
      ImageSize->300], {480., -157.5}, ImageScaled[{0.5, 0.5}], {300., 300.},
     ContentSelectable->True]}, {}},
  ContentSelectable->True,
  ImageSize->{652., 327.},
  PlotRangePadding->{6, 5}]], "Output",
 ImageSize->{656, 327},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->121906110,ImageCache->GraphicsData["CompressedBitmap", "\<\
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
31zbBU8ubSeM/PR16vQ5AwJZSZ9Xoa9T37d+w5wAdDJ4SpolTGcvnH61469t
0W/OC8qkiwTQy+z5+MqHNK2SJ2xZuR6uHxuFgzsPMUD5OTnw2+ff4ff9/csf
8H1ef/UM1q5r09/n2lWqvvNDR5HEW0GH/kzkUxyQl54PqRhOh5kC1WSUawtR
rg1vXI8sdHKnAW3f6iYmMMyCQI81geHv0kPJI/YCbuLd20c7NkLXslpZm2yT
VZ7Tp0yE7vVLYHTfJhQhxiVhOQvSXikldnXo+OGT8Dd8Gr7oKqr3YCh+iWxR
YuXLq0MUz7qCouhhFF/d2Q9fXdmJLHW9MZkSjEG5EhKY63NK70esCQYFjTzt
htGvDj+N1orPx0i6qeAI6pet5gplmi/zC2YRkOwWbfEy4OBb9b6cjunKSqf3
HocLRy8ydYV5ecQoE3r32k3o6NgGNQ1r9Lffv++0INXJ6q9iYaPcjDLdXGEx
Q6+r8N+TAMu9VxnTM2wuMUlLgOny4g4l3pAADzY3w4nurQ44t60HX0QsH+nY
pO/OO9PbbpMT+DlO5LXRrSj2MbKM4HpCsdwdkuXjXa28Zjw7ayay7K/30VdI
dm8k3Ozk+miNHqMDCkUI7mj+P8yA+Iubw5QiZKopq63Q7WS4vfxUeoh+rqGG
M4FuXvwTnDstOHcy5y5m/Gt8uvClb0jVGNmmx8b8yUKrsMUjcN63OVwHm9M3
TtXNmkSlWyQRezq7YcPGTdC0ej3Mm18H+aULOcFCrpRqhiorF+luV073vPRS
NBvOHTrPCWzaYFhXv5LgtckYeX71Sn6PiIhIuH/vmfS4xLfM27wTxIEVFJrS
NEMslWZlfoGE2MsQOxGpLXqEiwB7Tfz6q3Y0fs/16oFz8MId85Kyx9Dp63in
FbwuLrdfPC8XTg6txVBjG+3Ps2nbVJ00ffM0Lko6NT/tUCEmyiSuDhVX2hbF
YbcFtrYg3DqCcovOfowq5Abg3qlejddgDvgtMjrhFpB66FcXQaqJ0TCzGOVy
zm3odak6f/2GTbCoZjnMrqiRfZXmIrA1jU3Q1dkFC6qXspedPDkRqmsa/amf
eINTlo5ZW6ApZAlROa8a8grLmB9yzCUVtbB6fTtKhTF48tlj+OXVK2jZ3MUS
orJyMclWuvwqA123bAM763cEOkKvq8ickanqVwPEhakZ3G93pGVjhDXEHguI
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
i42eh9eVSNaGFnpd8Z59WOU0tJk35UjW2twufDIEH1a5hZNo8+LprE95tLu2
kF5dPls06mgTH6vnZSfDKOyNUUQwsv2pSWLqvPypXezfoYT2o2O12YajY3V8
t8RzlCE6FRBLeHDNPL2Tl5oduF+Xo+NglNq4xEmlgdX8Wa+Vrd2rqTIsDADA
yRJrB89/7eKJtJt9hst7q2Xk88i6EsBjQTPF18HbfQrr4lUUzJgpqAkz9+98
kAHqw9o0QKjp3e9pP/V55Bk+K/wKgBAbpkXQxvRcLTdEjQsnaYgCtKZisklI
+JIIT1uQ48d0I1RKLc4T5dlbO9uYNl8kGTOZ3swEhBnlMsGuNS2c4HKZlF2z
XKYAePHTl2fqRYGCeCT41CbgE9RZh0PNxYIQzN0B5ItBUFSIwtOH1xbTYe5a
QxQCWhalNo4mxaaFMVGiSVb69qgpOzPTdMzA2cmNJTJzEVMcTjNRzJbw1U5T
Bh01uniQA4Tz28vp8h6M7VTQRZaqI1Lfxu7fygItTVlejpOzeAlqpDGb2cy4
D8js0yCNHPUK/ah7D/GWut/WM2whZtIPaSG2OQ2nCq78ovn5Hq58yHGo4JVj
IS01VRJSFKG1cJMqOd5jlvavZLvQWMwSVCQ5K8nV5+jxpcMWP4cajTP0sjhD
lq0CM4sKXhC/l4Ul4jAj9ETwyJ/EftWXIaKA6QooYFbL4TM1BnjukKIG5YPr
Siwt0uRka3LU6JxDj1tyVC3WSWziCvUJiO4YSnLkf7VbhFkd+vj6Yhg42Da8
DXJ2kZ1yOOLYIIlBof0Ns7SXHY5zk54e/KRo0PTc3ICeBZ87bRrl5eZSQf5M
KpxZQLMLZslyy4AiKzuHftbnSWQSHFi66SXs0oJly1V9JW8PvKO2aAYWs+Ka
CNCCCZ1jAqSg2VVTSNtruOVXzhL35xD8axai9sJLDu3jNlnDgX0N/JkXXIZo
wlPs0IykU9zsv3xtOX15bhV9fnqFIy1RPAprTN4/slRUCB8eO/wRqY8SJPzQ
EUgYi4woCR+H1E++Dk8+Miw+ZMdUybwXBSw+tIjIwjiefGRrSo7rtLrmQ2pR
MJRpvCJ2stm9rqK3Dyylj06slMLGncvys4WRbKkP2VipSqrGP/eIMzl44MCB
Mm0dgCAi04AEWXEwW7ggv4D6DXha71/VRVgJCitBmDHWmztN3ikt13prCgfI
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
Soufw2m4Ol4DJwEPeDKt+Kp2zitUVTCKpr34eFyCCC06c+xg2sMB7et7KgP0
7cU1/DVfs/JrhtCDYrlcrnDIZZEAicNMUH59Y+8i7vhV0JQg/cUvNrLc2Oh8
xS/92VtKbj5n2TjcPDsOnbCOuCA3mhyxZQ3Ca0yC+PWAgBKC4vBT9fTL48sE
JH6bzy1BGqIcPSsLtSipZmUZkrIVScyQT20RjWlYWoCS6E9Pzc9jvX4qHXlt
t65UXbEgIPxkigyBoRVLllBddS1VlVeKTRs9ZrKzG0263BxJz+9xB1l1xWNR
rS3omDE3oBNxoVMyZRjbqEes8DtMM8YPpZLpo6i5Ws3ZRbd9cnJl0AOhLEEo
w4XQKkdv3kkwTCGh4azOBGmI2A9ITtEf3l5Pn51cHk8Ra4jfg6KA/B8Vv1qe
P99E31zAsRqfMVSFNVX42CeiqvUiTd+cVxnLpFRFXfOqCsx6HIaoLB2TwYgd
1pXjrEZXFSMM/pWEBauQ+EQP6YzinT1uB1o+aFM12FpapUzc0hr5WV+3gpYz
Z3Nml9D9vdX+iumydTQdnyhDSo3K5+U6awmyTyQrgdqjJEHNVQP7QdWFL3lw
lSlcrazIow/Ob6e/+voC/csPV+jvv3+d3jy4TGWRuYPfP1rnJVXZWqpgSxAn
nd++IKZJoTg7hlCJkeGPeCP12zfXCFJA9PBaZdPgJ2HQLqgh+vqcQudr8YoY
HvGpHXz4LgIjYVElcMOuHH10bJlwxM/5UyEUcU/Ns/GR5V5g0V7TW85iTNdM
B00iRjc4/CARJMnEEjylAvl1xTopVOokidTb12NClQnd8Bv21CvjBsNbTmyo
5CikwslJouTmyNoyalg4TXIBIHPU88NBZe0K/kxVRbk4XJVsKXNzZ9Kol8bR
o+yt3/Vgf1k5HCuIm9lRXdJB8/hV3a02XiMtNpNSXwAeE81jiF20vqJxFo/8
LBPJ/3swyZ/TUIodMpUnCkr0/jsHauINZVTG4jBT6JvzDexIrRdryEjS76+I
prURPnM8+GwW3+s9xtxkNDWfDpcsaVGD5bkYlpnCHeoYGgRLGEogid8R8lXO
GmlXbeboMRav+VVSRBeTMlMh6ZoE45aydtouGvJUSnIB4MTS/wZCTVyMsPVl
6m0A8BoNXYVwe3zDYj6wPHYFH+UC5qE18yXJeWTdIifZiUTVwdX42sV8HbKy
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
T6T3LDn/Gv7/e8L3J/8Xg3yTZw==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->431711776],

Cell["A frame can be drawn around only one of the plots.", "ExampleText",
 CellID->231255239],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", 
    RowBox[{"3", ",", 
     RowBox[{"InputDimension", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->116528545],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {InsetBox[
         GraphicsBox[
          {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
           Large]}], RectangleBox[{0, 0}, {8, 8}]}], {189., -194.4}, 
         ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
         GraphicsBox[{
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 0}, {4, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}, {4, 8}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{4, 0}, {8, 4}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{4, 4}, {8, 8}]}}], {189., -583.2}, 
         ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}, {2, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}, {2, 4}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 4}, {2, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 6}, {2, 8}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}, {4, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}, {4, 4}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{2, 4}, {4, 6}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{2, 6}, {4, 8}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}, {6, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 2}, {6, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}, {6, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 6}, {6, 8}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 0}, {8, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 2}, {8, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 4}, {8, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 6}, {8, 8}]}}], {189., -972.}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 5}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 6}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 5}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{1, 6}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{1, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 7}]}}], {189., -1360.8000000000002}, 
         ImageScaled[{0.5, 0.5}], {360., 359.9999999999998}]}, {}},
      ContentSelectable->True,
      ImageSize->300,
      PlotRangePadding->{6, 5}], {160., -157.5}, 
     ImageScaled[{0.5, 0.5}], {300, 300.}], InsetBox[
     Graphics3DBox[{
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 0}, {1, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 1, 0}, {1, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 0}, {1, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 3, 0}, {1, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 0}, {1, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 5, 0}, {1, 6, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 6, 0}, {1, 7, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 7, 0}, {1, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 0, 0}, {2, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 1, 0}, {2, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 2, 0}, {2, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 3, 0}, {2, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 4, 0}, {2, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 5, 0}, {2, 6, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{1, 6, 0}, {2, 7, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{1, 7, 0}, {2, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 0}, {3, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 1, 0}, {3, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 0}, {3, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 3, 0}, {3, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 4, 0}, {3, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 5, 0}, {3, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 6, 0}, {3, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 7, 0}, {3, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 0, 0}, {4, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 1, 0}, {4, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 2, 0}, {4, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 3, 0}, {4, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 4, 0}, {4, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 5, 0}, {4, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 6, 0}, {4, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 7, 0}, {4, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 0}, {5, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 1, 0}, {5, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 2, 0}, {5, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 3, 0}, {5, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 0}, {5, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 5, 0}, {5, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 6, 0}, {5, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 7, 0}, {5, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 0, 0}, {6, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 1, 0}, {6, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 2, 0}, {6, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 3, 0}, {6, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 4, 0}, {6, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 5, 0}, {6, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 6, 0}, {6, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 7, 0}, {6, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 0, 0}, {7, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 1, 0}, {7, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 2, 0}, {7, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 3, 0}, {7, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 4, 0}, {7, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 5, 0}, {7, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 6, 0}, {7, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 7, 0}, {7, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 0, 0}, {8, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 1, 0}, {8, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 2, 0}, {8, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 3, 0}, {8, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 4, 0}, {8, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 5, 0}, {8, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 6, 0}, {8, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 7, 0}, {8, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 1}, {2, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 1}, {2, 4, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 4, 1}, {2, 6, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 6, 1}, {2, 8, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 1}, {4, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 1}, {4, 4, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{2, 4, 1}, {4, 6, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{2, 6, 1}, {4, 8, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 1}, {6, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 2, 1}, {6, 4, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 1}, {6, 6, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 6, 1}, {6, 8, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 0, 1}, {8, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 2, 1}, {8, 4, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 4, 1}, {8, 6, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 6, 1}, {8, 8, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 0, 2}, {4, 4, 3}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 2}, {4, 8, 3}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{4, 0, 2}, {8, 4, 3}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{4, 4, 2}, {8, 8, 3}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 3}, {8, 8, 4}]}},
      Boxed->False,
      ImageSize->300], {480., -157.5}, ImageScaled[{0.5, 0.5}], {300., 300.},
     ContentSelectable->True]}, 
   StyleBox[{{}, {LineBox[{{0, 0}, {0, -315.}}], 
      LineBox[{{320., 0}, {320., -315.}}], LineBox[{{0, 0}, {320., 0}}], 
      LineBox[{{0, -315.}, {320., -315.}}]}},
    Antialiasing->False]},
  ContentSelectable->True,
  ImageSize->{652., 327.},
  PlotRangePadding->{6, 5}]], "Output",
 ImageSize->{656, 327},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->110351329,ImageCache->GraphicsData["CompressedBitmap", "\<\
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
8ATWFZIYQdfZKeOshPbe/euZId371pFrgV9cqA/dzbjBuY1N9Cp7hrgMhtw8
vokZRYXKZHKNl2HcjHR0Rja3S30SCBmPojseEyeVcMJDH7muzKtZ02bA+5ce
wOn94ijFrPR0vXr4vet98OTWHSibVcWkyKNM7oDDpjMHoUzYLhQ7KvhtRprM
Ky7laKzTJhorkhlDDCoUkolkqcUlE6koJZOpoKrZp2vxUJuWECszaMKg7Ct3
OA1mFBnMMM4GsjBDP8TNLevb+eBsjRbWthDqLqNA62a04dF9iLNnhtuGGQEb
ZrhkznwQZjiJGvg0qpY/g3/q2twAvVubYW/dCqidVQqpI0cEieE1NMbOhhq4
uHetcqWDkdYmBXeHHVXoZ5AqXqaK8j1uSB7YUeMEDe8laihvRAj2/Nxcv8XK
UqygMXRGtfCMuWJkb5xhYEVHx6C/0Qh7Ow4wtMdlZjIDPrv/EJ49eh/uXL4O
e3ftg2I0pnjYNdq/+7YdsSt5tM5hzPhraaFKGYkWoml3qKlpVyYpiBQ6Jbg2
SxlJlSUlBh2UkZQUP1TzGJQWiBS0EI0epnSBDT3kawJ2/OA0Nf1U3BDNg8NM
3KCedXPFYrDng5x5xQllQVHl+rwJE7miqrxoMuSMSofG6mqkxsZ4e364bPgR
wfyIMIaOECcULwbiBP5KfYjEiwsdjbBj9VJYNW8GZI5OEseEhrGiBBduSBVA
KTs7frik4XTj2CY2sogfCO4ILXorNAm7IXaUiJCUaF9TbngfSxctDLGtpOOh
DZ2TQ9vjOCNOjyWNGAXbW3cy1jPTMqDv4mXYWN8G1YtWwfipczm2NHF6BR+F
R883Te71mUq2rHMXB+NDSLP7b7WslOdNze6iqTHCljd9B3czZ85v62SeoBWl
xBtBjnwJKiYnh1qKchfMLJgga2nVVChuXCrlQ7MGJ4zbShintLUkV2TJFN3H
GnwRrVK54qgWrSdKL1MPZq9FmbpT9g2S5W/hi8NKmCMNa1HcNzrDEsZnhKSM
TEXLBjiJjECSOKwsOYea48KWTcySlXPLIC1pBAR83jAs8VpYQvk6l8YStIYk
P8Q9aQliiXRHvNIdUSy5cbyJybFJc1H6jjbimgqKhHM/LAFcdXIHnfgrVIbX
lPdOGjWWU+Yo+0W8yc+sWFq7nqcF0RAtPUZlTPD1syc+wGzr9LdNEgpPRcpO
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
Y+kTLNWhfjhIfJcIYVUdcm57ruyFip8I4fQ6W8u6nguvt3VFBm1hecvv509v
E6h+C1TYxY3Zc6PBXDxjJK1ZOllMJIMZEDBDAqZZ6K7BjJhvBpQhLQfMie3n
9RHWr9VHGH8s5MdTGsSALsqEkdQg8m+499NNNppX9xfRjcOlLAkK2aBm0aHq
VCVb43WlYzjrtS18rgYyE2IfDY0+Q2NlmMak1qVrsyyZT1w/smRY6NCt152S
n70F63AUhci5gcIH+93F1J1w9Wk17lII1hYutBDcvW65ZBwxQMMI4jAsbFYU
oH3whixUoQOxpam2loKh21YRYJuisoxKJIldW4PwLoFQPY2c0qaceYDR4wDf
iYaceIEvGAHfGb64SPAKAjqDoJ7OjVye7hONaTzxJb2qIk5DZ7N+GroQvcXP
Abor+wrk9Tf5MdJn+K7Qn6g79Gg9ilEcVWeLCYRmpHWJLTIdc10+a7oKcJha
wm6dSZpa0+iX4iwcgI7X7r37Djp9vIn+9Luve9tgW5M63yEK8qm0VVFE2srl
sWBLNvZO73QfkA3IARtcM/bOBT2Y8zletzoiy6+JcvVoDSk1DZAghvD4ltW0
vSxZsFrGF2q035wXB1PWkhflJ35nr9tF2ApYbKHQFuDbDZrXBhZeE0NWZxXU
mpNiUVZwHsHQvgJXeM/hOAe75pX7rnQVm51hwxLZwTJfULv+arGsyIReOVkP
O7fKyiTBhRrV3lC62ImwrrEEn9cSfDrh5DT/ZNKnrRHWyt69iibMeAJZHNkI
D2qjqeUQJU5oqi9pnjLaKwcvLlFHR69bpmCKlx2qZIs1fdIo5p2q4QB4SKL9
UDF3WiV7XLdbILl1Yh4poCiYXGaO09CEfS2yIlI8IYumo2wQIOe/e2ubPDZR
xrbSZJfCKy4KrzUGLb0kN1fqw5khy1YxTuh87CVzQexVvjVDa9slT20CrJY1
+unNprCEsxkvL/BCsoihAoRXDxTz5ZbTu8fWs7oro7ePrmfY8mUUAjKd+0cq
APP5LRAWW7thmtOW7fHpaHnSlBkyuQSD9siTQ+n2u+4XHdch3Lq3INYYtdZi
iB56UsgpQxmFmvaSXufd0ELWFj6yj3HxYtqzLoWOVGVKoebpOrZh9Ro9v831
2YgzVR14Go4YCziXR01EojZjfdZs6X0Gzgvi+C2/vLSZilZOc+DOT2d25Fvb
XGD5lJ7a91gaLFPQg7Gx9r0NH7mDGxbORKGmVs4IT7JZ2GVZgiB+kpFjvvgf
v3UQ82hvHy2nj05vop+f3Cisvb630FZvt9yIMZNUR4rntlhiLC46DwOwpFBu
NBu1J58bafa88Mg+Ah459kwvlNZ2qVWXaR7Fdpk9HMTZ0OcGiTjr7TAViRCh
MGUaBFoPXd5pz8PYM7VyUCcTuN2QVmAjzRtBWkPJEi/qfzHnXsbvKE2mAxtW
0VEG73gNuEJyOwen2DfmhJzBS7CBZ6SY9pkWeCk28Ji2YAzwEgGeG/ZOSppz
rb2KTKGqZdYUcmp1qpVDsdYU2vbrD+l9Y8LzQmZnjcsGQ+GTwUsU7nySGEfE
uoUH6eaCV+j8buz5Fblgj6MFbhhHPabMmD8iPdKtRy965InB9NDAIQouP/V/
fDANeGoEPT1kHEeqowU2dnhtlGZt46yn5ixamrUtCPDTdrbSW7RbNPVYDocK
aJhCAlNIQNpZtkzWSGId2kGG6lg124paDuXqOARo0JFmojNUAQcxlrX4RUcx
dnTratmN7ZcXqxMMWBc3U2EUWCGxaB7xpLBq6jhSte7zlN7OXgcGiU4nh2nF
77RjfvROyaz0mQyQFC/eEpUoyEof2pJObx/fQOd2FdAJHlqHWL/aaerurL38
uu63QC8xykxPb74vxIBnmKyhbMLGCE5DRkxy09DnsXMgfgVZiC87Fa1eDjqt
d68elJW+LFr12+lqKFum6fLYsxyuFuxTFyDlxv4F0P7M0/6KNHp142o6uSWb
UcmBgZLinds0SmciUfK0qsS80UrMA4zc9O3VOrFUXjwSqqqbUeUVqvh+Z4GQ
xVThpsAKCmh4Gj1+bnehBZo+NyExynYpVZcntsuWEQddbjPXk6vnuNVhu4Vq
42K2Vwq4OLGxxmaeY2V4/dBakWjvnaykm0crxJu/Wp2mWIt3UmFmrx2BDcvZ
9Q4NfEVYX8zNNXe+FJ0jc9Gv/0C/DTSw2Omg9W5Vofnoq88/pKr1BaLQXp4y
1BYN+NhJhpOMWBLQULyYx5qFVVBWwMD/Na1PpeObs9lUZYmZYrRAVk89D2Yn
y0Fn2WXWuszZIrRvHikLWDQJVwE8crfgAetKsWIGzs+jUNouN6tIAs+dVTzx
u5VXMkzpXU4TNFMyPRj2ddE2SpX2GHgkhVEMgoSiJLlXW6KZveQvYcnS1QMl
LBXwZ1f06bjITZ+Fm67NRI5aq3t/hPyaNHG87JiwKjXVY9sxIS01lW1ZBmVl
ZFJ25hoa++IMkWbxCUn07NDx/AXBlZcfT6A7733I1I11qgzr06oMcw40e2gD
ZlS/daIeP8d4CVFwhbeFMYuzMMMCQnjHAxWr6FBlOh1D0qw2y+j8btpiod4K
Gq4ye27UfGpAS/k5dIV77cs3ttC317bR129uFUslRiuIh36N2Wfnq8S+Gcz2
bkxVSLlhobDeks2X2Ci+nVU/uQ8d+Qpp53hJb36qD+4Ga1aIaaJTQJbUEmQJ
GjV8iBF3DBkYk3lbI85MDPDusQp678QGoY1JSxDQEtTC3Qp1POKS6c9by8rH
jRtnUYZwEpStycjysoVD42amZ9KIMZMkkdGNoQsD56F7HnjMymJ0Km13tCDG
Tp841Ez0z50yQmgrXPkSBFk3Ac5rAddQkowlTi0yF9Qec++6lewxmbNN7HW2
su1SjMVHeUUjsBZZXtGn5pbYtDVtWmk44//0/fUGvrfzFrKcpOItjr5ks/bR
6Q3iiy7tzWO/mm4tGUcBwfFt2UBMLJhb6zKgx79q6BzRM8cM6e1K9T6l6pht
I+uRb+thTvNiFQ8lj4gyXmjzC4HI4pq1ayCNn3MDNY9W/yDurYOlUkB08/A6
ZDa4UZg5nxZoMhWlF4rXFS4wYviZx/pJl/bo0YPSUlJDgpqXVixPFXcJrXZ/
/4G3nLI7HXQZpvmjdNnNq+ebqf7btMfcVrJYJwmTOaTEF01u2byFgJobC+9Q
obkxnQ5vyhDWmDO/jTOM0ubqK0iztfpCl1zZXyhbxZ7dmU0fn6mkb65uc0Iu
LtKn8j/4+s1a+vxCFX14SmF3VtYknGrE+hV82JsHivi1CipJmy7fOH3hBHqt
MdfyolBnZ8PWTz0dFCqjjnGwLB8jGIyiDwbvdk0fyANdYCqk8xl2+vATr1/R
SVx+zauDhuuvltKNw2vF7N08XM7/BIsriyTZbWydLu92RSSQChfIvNx2djJb
CxbR4/3vFjL63deP0uWEH0XkggXJskEBTmkY+NQIrybywUefkwxupxN5l4OA
S144GyWtrlhhQlftZVGgrHF04aB7gAYDyEDKjZHsBhLjxegl0J7yFNn6BHpu
f0UqHanKoBNb1nDIsKaZcGOvagyeyY8hmsSU4Xdv1fG/+/4a+Pr0XKWAyUTR
1VeLASZea0ZmvOaRH9Nvrmylz9n1Xj9UytBA04FHllVI1TPon57bhPe56Q/v
bOe3fMMI/yQ8faIFw9OpWeKE4xyY7GNn8oBYPKYRsAVUhFofnhWz8ai0HpZc
NKn9+I/WZtDB6jRZPrSJbygU3FowX8BTtkKOfV2HKKF45QxracuEcePjNHs4
Y0fyIcrpejR7yIMgSsUy1E5l72dRCk9KRAY9EaHwEDysK0qPCB66OLDn0ew1
li612KsvWixWsIuw15XqChbS5pwFkqyzpytmT3xOzjwtS59h8mD0NQPym8tb
6des4L7i268vb3ELdSGxY9jR4sjWVXSRe4N5o2/fqrdY+/pKrUtFER4BB5MH
+M2r76NcsELPL+hxTCIvM9j0u5sN9Pu3G70/HUG3PB2Qp41sjJpgdUSxrwOK
fu2c7fEG3qMxVH45UUjF2ASlyDqbMPdQTZqs+cUsw451y+lkfSFH2IV0ZEsu
X6CiceW8cdZKlmlTphpLCBk48GlVJNLr9r4eh5xJp9J4d6sK0DneSNTyDzlf
dRDQK6DQaweyaLEBsmvYGPpkIfzW/AW0Ln2W1Mu/PHmodr29rcQHWhFYwGoB
SmaQvnq9hr64UC1wfnp2E312rkogBTrgBI/fO75OpqR2rEumk+wev3pjK33J
74O1/OzcJjcycTySfvX6FjGEyMshFrnBxvXnJ9fLv927cblADsMKA3u5qYA+
eK2CvrhYTT9cq+f2+93NRrkXUgVUO65ms6xIXD12XLEHkmRpImbRdmSHHPC8
OwpPFQgrH27HE38PHmV8sRg4JQUqWeH6Lz0Dd2Y7ClhkU31ME1/cXUQX9xTz
z3J+qZT/hL16Dcr30i3DOXigWsnSs2dPeG2704aM9AdC9NCAp53Se52K6j2x
ZeTtLUyNla6aBSkZr80n1kttyZ+PjB52KRdat3PsWx+mtUs4XlG0VmbNpbWr
sHv0mIgtG+CfDa1vH10bJ65ZBKCAC/frkfsA/eJMpLv+9ZUtlotWZrMLTKi4
YLhnzCgYCk/WZ7BFy5G5eGjQzy9s5vfXijv/hj/jh+vOVPr0/cU9eTRn0uAI
Kt02KrW11BnpZlQ6acp7bBGNiZ+9OlqBNTTxM0pWcOhZRGkBUwg6z+1EkJ4v
ECIsv8iXAhwv7SlhD8FRTkMRvyuPDnCkeKAKB4yks6lZHC0iFY5BmvvyInu2
BjQKizgglVnsVBTvi6Ef7RxeOnNYJstsIU2cA4cB4dAnHII3xaHISDa0DKNP
wwhIAWP+simywej0cU83m0yFkPvy9c3xNhi/0zB6LUVYJ87WriERj3x1uUaS
yjY/HdaI7PpgJr9gk8l+383UNbI//eZqvbCoeNxieASN9NsbDXyrB4+BFlA8
2YCTvjR2ZmpXYRdwwO7O8PGpbBHV3Kw4bI8m0G79TtZntmD8ughxcYo4Nn6X
9pTxSyVMZLlQtjZ9jl0pKsJCTikaKxdoypi6diZm/dogFZ3mykIRjMnsBT+n
wxTNlw5TEsL5wHiqtXllnLVjdg1TAfFEO14uJ748emICv9uMYETc8jGzBd5w
QyomHBf7JC5Gr8LICWdX63kgAbQQ/XijkaObRgaOlcAbNezClWC0QaYNXlDB
x4YQr59mzTr7xedUqoeJO9GQY4DDGQPKUAlwfgfg7rCdrqQzNyo7o0yd2ivW
CMDWTV1PAS+kocPymbVs1cupaOVcio8LGjFIBTmYR1Z2LSpbI3bNlqrpVODu
b4MaBHCZKfOkQedPGy5qMGhNny1XE7MMXJxzXKxmZLFTUUsq0C8qcI341QxL
BTJDYf9aF+VfPRZy6i8Uavg7K+Q9XCo7S3oFNVV0BMx+9cZWbjsgFqAfGLHf
sB374mKVpG7w/h+vbxO03FrnAa0fGbdv+bVvrm71wIlrn2eK8DRlll0zSUON
ma/FFE2cOnIuHIeIazVBhjFrzJXdrBm82Kz1Fbr8StOxaRs9+DFLt+XnFCgz
FohItrBuo/v6P2EVLXUqTQ+0RbD58NCaKTPhRcABqHhnoHw2oMQ3Lle+MVqo
GaDeObqOnde1Bn76e45fv7u6zfDlj8WXdpn4C6++ZzMo5uzyfrjKfBPSwkJe
e7VEJBys3Fss99iSdRHKgkyOCpjhLb+9qlQcnO43/NgiKiQvfX+tHhkdsX04
Ork1wnAM2wUclBxJGBZR9BTCgioFrR0n6LJbMA4XPFHGCw7TGK97tfE6XpdF
zw58QLoaZ0mVF5fS+rL1tHHdRirMKxTj5RPW/FZyBaIMJQG6fKlTMevfRjHm
EBT4NGYNZcnWrFmCYBYXnVORFDMK4eyMsYMMIzaWyZ0l5WUcXgYEMb/lBg0/
2l16I8xWnQ0rn4AA8wO0dPpZe8h4YerqwWL6kF/74lI1/eXD3fSfP2kSrxjm
rYQ/fRvTAeAkW22g48/BvZ/NXg3/j00qc/OmIu2H6w0+oIbZDhtsa5ZO7hLF
mT6+yhPFmdqrV2bXGDM9twFTZk7OjG2+HtSqbBs3NM7bQh/PmzWDaqs3UV11
NW1av4GqN1RRcX4ROPNoxOwZE6Cmi5Y6FbGHYgixaL2PeTKbGPNGTcw2SE0Z
EEsSxHAy0dpVM5tpLqjkNcmTqGLNXHrzYCkclfQW0xEStpzizEg/aOyUAUr7
QGWnulh2Cmrqdxwy/sPHe+Xnt9fY7d2sp7/9oCW26rmXmC2Vbk7g/9JA312r
V+lAhllfpjwGeAwWP4frBP/1/ijIdOlKK5CZchSYsSTrdGzRYEXW8azairli
mbFHBDMfFa+cLpiFgkFKXsAiuWoDD4/aqo0QwoxcbVUNrSstow3lG2DSQJuV
8kChCVwmchydCtrDbRBgTvNknijKmCwtwFRUicmX9RlzZHeVl6cMddmX62Us
mkjHOdx/93iFhzt+B0wGOxzdi+hqcZZRgt4X5QRBkwWXV35978Q6JmQbjJSX
/vEX+7hh7Yx9xy8ZxpDjO7cz2+4vtfJX9ksjhsvQ95ZNw+seQcpnkfbLizX0
68u1+N0VbdOicHstEje3A24JYZvmlep1lHrGtmUDBTIvS7BHpQ/v6NObNpaX
eISyOL6vBGm0ddMm2rKpht3nOjmVfMHC5dZBX8xWp6L1SNvUWHQ8ublgkcut
6bLNwkbkLDblvEIFK6bRounP09xJgy0dv3rJVCpcNZd2blSr4GE9vrpc63Wg
LF4oC0VRti2GM/QJMIAFBkxzxgqnZdD+/qM99JvLW2yglcBmudwOoHnkPiig
yfMceuJ6f7ixnT+z3oCn4PILeDBvSCzjBgjZ1Hmc2UtyWP9lHQkZLr2L18Gn
VE7x01iP04pGe0q4w0rtNfTcQFW1OeCRh6iyvAzoafA2iD9Vv2/kx1UMYRXl
ZBfToKFq75ZON2yPtirSQhGzXjoQkO1VzYwXjJpXY1dXtIQqsuZZ2IUzYXGC
XW15Gn1+/RD9l+9v0L/9+UP6H79/l94/U6Oy+tz/n13Y7GTsErSxQyr2s/NI
xZaErZovwmUiCmSi+C3OxP3p/R1CHAhG9lYyvwfVRK1XM/b9NU3WdVDCbOH+
ZgRhARth+HOQ9fmFaqGMn3PHIizgSJiRagHBy6dOFtmt9q3Qa6tdLZi1u4AX
TCTyb2raoFC7U3V/aU+pFAfIa/J6gfpLVx9JeODvkds1CZDX91bIey7tXU8N
a9MlCQJs5s6cQZs3bqJtNdv4J7NaXUsV7IhTV66WRO/IsVPp0WdGyUkF2EvQ
pN+6dCazj7Wq+hKd5sbsM7RSrAJWmztfHyvFYWIebazys0wr34PXn5/dKukr
zSu/rzmwIQ0scPj4dGWkGw7K9Or77IaRkv07hhG+lnGlv/tQzGGisJvkYC13
0R/f20Gf8hDgyNZi92s2ccYa/nCjMSjIeuy48vADkKiHqTeCT2bhftBx7PG6
THvBcpJZ1xO1FFZD6rWZwPOyy2eWfVmZkwkMWoz6zCPZbxlUgr49JS71XFAT
qWYchMi95eZv+PFaj/yxV55Gihjg8k83D7a1bGOF3b1r5efr+zbwJ6yTKTRM
pZ3dwT/3VPBFrZXMMp4/tDlTMszH6/Lk98M1cGUn64u4EzG/sWbJNGtG+KWp
0yh9VRbNmbeQRo2fTs+OmOCSg2T4S4+bMl+2ZcFJHKZeq1O5f9xBhKKO/vDB
vZatjq4KROUKdjV3EpmG8zdPMF0fnooTxEP0L394jz6+1GhHHIBLKAGaVN0K
8PYJSV9c2GwhHpYBqArNo7ePV9AHpzfRF6xGv36rFu7eA9j5m9lw17baI7z/
5cM99OcPduPDryFp/ePb2+md4+vCyuAaYG4OeCIwdosZ9wvZ2FkiP2Vqc6qd
V0k6mNuI7b1sKWPsGc5cesTgCs0KTRhZMa5F2MBmD0pXwadCuUwZVD2JZiBV
7JbKz7M7SngE7FnPF3huJ79tD9hdzwxXcj+UWczi8YltBfjdI5h6BVOZjlNT
cm4w7MEjl0cmTnatw3bH2FZHzR/vqVgpz+3F8WTrVrjxhJpV9tPO8uVUnTuf
Hrm/rxCGFNEjTw1XR3mFhHLb+TM4fSZ6M63OpX5gW/Sxh669ccpM6bnM8n6j
czXgSQJ4UAD/8cMTAigAv3FkrbhvIUmm0MR0G7Zv2MNzr4X17z84QP/869Nu
+o+/eYvb5b9/c4YdQIOY6d+/u13wtlt1Rpv/Cph7BXMI39+/s51lRb1HSI/j
t9fTH9/fTf/1y+P0L785Tf/7x0v0799doA9OVdrpDznA30Wse8AKtD48tZFy
l0+JWIIixQ1Yh1KI/TV2FdLpXcW68oEf7yyUEYGNsTAq1IwJ/+a6j9+8iI6x
e2jalEavNeQyeIUyQwKWz+8q1dyvEwN7fpeasgPfpxqK+XGxgIvHABqGFkYW
syuoacDvpxpLUIIjvzOlUpaDWgdQjd9BMP/0aHjxNADGTWDnB5pzzbOrl9wn
yNLuiqy5VLB8qlGjNOH5gdS7p9oCCHmpuQtWGZCdjjroVJafdFDbUydPjEiJ
2gO9pXPH0tn9lVAg3bV1/sMnpwVB+9zwl5dq7CLDmht+6/Ba+uTCFvrHL04A
Vb+g6rVQhar43TtsM5Xx1ZTKbz5N6t+xMf6bn+9kI9wQJtXLgO+kv3y8Xyj9
X9+e9dF//O4Nfo8DrDJ94yCfbxNgewmwv+TLL0p9yba4ZanweWp3mTB6aleJ
PD7FrJ3YvY5OMmcntxfKz+NsDI82FNKr9cXUtDWf9m/No5rChW6+m8/if2vh
Atq1PoUOVGOLjkLx/cdq8wU5hVqR/A5TKcbRLXbSJ/wBMBCl+TN/wE9hhRmb
T7xgIxE/7xfyfELexjUvS3UfdhmB3/Xo8Dtt4TSq4njq4LZqSkpMEEKKizYF
HHaH71T6nmpVN6sKx7X5qdIX0AfvX9zt6qG1L9C7sLfQcYrYWEWD278zEHHC
WyCaN4HMmES3xs1uEgEbm1F+TSkAYxcNcWwXeSC0hpxH8p7GQHYX3oI8XLZa
rM2Y8BzVlKygww0ltJ/tT1N1ppv2cUcn0m7u2aaaHNqxnnu3Kot/plJjeQrt
qFhl/dxauFBqWhvLlkqne2yGCHQod2rc60ANhnGvMEsrtSDz6MADYOSmzOMh
30DvnjtGv//Fe9wIf//Vp6iXr98isOgNAP23GpZBrYrNyBnCSFgC9OdfXqBL
TSVWTQEA0S6TLzTSZwKM33Kn/4XDG8yc2Hyjy25yjHNkk5PUQv//6jKmUVT/
f2dzkN2UOvzxBqpdvry0hQpS1Gq66SySy9Jn8583rl0uU07LqJ4NEN8kb4ud
ZPAcv0o7uOe3l6+Qdc61hQuG28a66c7InIeP5kwe1qxLA7pL50ydLM0adZqU
fR/+Tu3Sp21KynSpTUn1cpiTQ68iDLYckI/+6ZurVsYGnfrnT1CIjQ7l6Pjb
s6LX0aE/8KjFKHbyGTyCuzl0IMTYp+erEV00G8Bx4Q70q2wgJonfws9GySlz
pO3mO3Q/0swfvraR8pZPtfp4Y/YrWBS11C0LBjzSj+jPneswZtX9Vl0wi+r0
52IY8ujOhTFH53765jn2OehcNlofvE0TRj0vjWxOWvA6b3Cf1Jmd/Iytk3Eq
bpTM6NXCrFhF3hJ7J9vTcpGdHKR/++0l+v17u6STHSRrrxgd63WQrh6dmOCe
balf0a18q0XH+qHJuZU/Or2RPnhtg2ggRKpm2djSWaNpa9Fi+5jFmS7Sv7V6
36jtZUvZvkXaYxywEWmPvRH2mPu2qx63108ds/ttpyMNO7VLn4tSjU5+2z75
pPvS1d0hZxXZmR764wd7pCO5A113Ss8lNO+5C9WSX//h5k62qY30mzdVLY7U
GF6uxajDgj90EkYe+ick9z6pBUcvvXtsnZT2nNmR7TJJ20v7iqkwdZZc8rLZ
Y6ihFNP7qqe26T2Z0FMDowLTKFMby9L2cHaeXodz+zq1xwbrHsN2oy05T3u9
FgJVOE/VY36JUD+7skt6CzeoKlZUXaI6jUecq690WlyzTvuQx8evLtexuN4i
6UJM1Hx+vipBOsYbMXwu7tbLPuIkXY2t0T9iXP788Wv0376+Qv/05etUkb1Q
9dMc6aeQQzc96mAwW/KGdoPZx9kbmrOSkGuAwOn0PhrSFm+oNI6Z/HASxCYW
Q5YLojfJoY/u0APr//zuMh7Jzd5fPCro/ZNYylBj76tgq4PIS1dfXWt11t9/
xpHYv35/HU66eZ9ZVrC+JNnqtIeirGDzcKWZFbwrhoNzRwXQ2J26UzttaNu9
m13CIAFk825O/Zbo0G/KlXns/eZSsW7Qsf9sfeeLNc581jj7/u2DZpyxzQz3
3erFkyP6LmANuHDf3d9+u3ivsydzOwQVrXVfi9ulDY/htdqoQv702TkrhjD9
lODQT90d+kkFiInN+umdY+WmjyS79xMGV5LuoHdP1dPcyUMjOsjvMLjubadF
fFB6JxjttSTNiq7ROxG3u2dGtME72dKpzfSEPQJAigl6It6hW25z6JYEp+HD
ugRJ1p+frGjLOOkWoxt8Dt1wl+6GBo7qnFMyXislo7tggPRAINonSevf/cDj
rQ0MuR/p8MLzbfM5LUsDZ2Ue59D4XRwaP0k/h8b/84cH6Y0mTF84sn57jEb2
OjRynxbSG/OnDouZ3nhcsx7tTc6dfdd+pH1iOxp7ZFt8hXLw0RmvWI0dcmhs
aVg32jpRmthL//zLExwk7aO3sfnlobJYPN8Zo6k9Dk3d6yekHQzTaOpBGuoo
ox8Rt7SnnUe3auidM0VG7KKRP7rYYIUnyBKxpQ84tHMfW2z5j58eoU/ObZYW
Pr87tyWjfU+M1nU7tG63VhO4zazFYGlYf4S97vfQEya0aE+bjolhou3O00z1
2vI03WwxhJnlsjlQn54E+Lffvi6pGqRlrKi9RW7RqNHc3i8t641o2dRXxluN
WrrUKkpLamfyc7jWmsYOSx2xnmRsT7O+0IL9TV+5xG4S4PyiJIkrlnb0alT/
9YeLks/84/u7tSZxRtUdZQ1s0ZbrYWnVoNWqyF2Vr56LRpV8htpfcUG8btHN
eQt+khEYZVPvA/qrxQK4Qam3p0XHOhhZvD5xwjh7i0anJ7778FREi5ppBdOi
HocWDbaoxlvA1huBLduCx6VtA83aVnK6+ZLT1fsANB//M8Y/09L4H6fVdEVe
pjgYXSXanuYc34ItRZ1xrxhTNKYtkXW/xl/YLs3cDm0ZcGhLdzuJfUpa1R/R
qmXps02W3BM19kvSZkQZVOexP1YrA35MN04dptyVi2jOlHHUt0+vNrZybBU8
wcHEwhaETaxz8G8mYh20ARqa/uf352XzDTSzCRbtgT9ubcP1OWnYuHDDjnuG
CldMlX0dHMZ9rGE/Vrso05h7t1RKYw4c8BC2TDenkgE5nIyKOovYqit2206M
bWd7tsWDBR1b+F++OydqgFvXK43rl8Z1YDYWssO0KDi7u1xNEIx7mha+NFwG
eazIrE3N6ItoRmwK3eYFyKOtR06t+mLbbK2T91JNmtgsFfzDO7tNc1pZqX/4
9CirAgtOVwt0DrOlKz57fS9dOVRNBamzIa5aSh11oPnadCB17Oab3Abb6pRG
7+ZUNrQjm64dLqFfv1krzDlIfDtvQ3VbIZ36q6v76f3T22hDzgKkeSwb6JSn
Gau9NbcdXTq8T2zgkEED0Vjqy3EbYxIJrQUiuKV6d7yhprTBMrYconrsEqk1
eP700WsCz9aSFZSz7CWUf7RpANobZMzwwcYpGILsbQKCeMTo3e461DBT22LW
YkWUfvrxg+PKnjElNjE9NGowHd2W19bB1I6muLvjTTEtti0yFj467tOJ2Ns0
KX/LcgWtwWS4hrRzjLxgMyox2sEYFXs79Ot4O0yPYVR6xs5ydnVohGd1I3xz
4/BPGhcvxLCsDo1gt6z9O94IM9pgMJwSil0cWuCpFkYCC6CWRkKsL9+KWxnQ
8S8/s21GwclgJjl8/8ejhoFxq/Zh4CSXx7S/EQZ2vBFmtcUcOFvGRN0Iv/3o
pNUIA9oxDMK2wEcfvn6azh7YTWmL55kGiPCXtm8/qONffk4bbEB0JKENYbz+
8h+cr5cvzy6BB2Skb2xpBNjG/wsOOgE2sHfP7vp7OzuCZzv+5efGGPtOOt82
/uOivjz7QjbJranK2Pi3wxsO7XgjzGubDXBS5iGHRrhHZ9aAv80NRntBO/kd
+P7Pd/z7v9y24e+UBQo6fP++DuqwlREwJkoFwPzFUAHGAOD7j+n495/fqgVw
TtsE9Jd/57Vq68v3bucIGN1+CTC+4y2woFUz4Gz9/boFbp6otFqg50/HP9aX
b8X7Ter4l1/YwvCfN2cW8O9h8wHbNpdHpzu8Dk1wm4MDbNMIUL4v6uu35Pum
dfyrL2rbyHeyfB6H753YAvzh7x0L/kjHP+Tpp1p1gDM63gJLHMb+gAEPR5Af
LX5h+NwOXz/ORr5N+MUKf0ZHuf62fvM5Hf/mya2O+ZCT1ZN13/Zv7Y8Be6yg
Z3T7fd4rHf/2S1sY9I31W8KDPuhk9Oxf3v3Tw53RP83V2b/2oo5/7WWxB7z6
2nHN9O7W4kV0sHol3Ty+pa1kj2rhe7bBoS3t+Pdc4TCs8R3fuX7F1cO2AbM9
sJ83ZUizVIUd2FEOXqqN3yil498opdXhGoiw01HYOV59G33sqo5f/crYw627
fAGvdMnqZXOk+fmiR7UxILQlUDM7fq2pscdIN71k9dOP3qVZk0egkV0j2unA
sjt+tatikH6bw6UOaafHye/4pabHQLirw6U+0/7cYHHHr3Z1bGSTHC74yfbb
vLUdv+CM2Nwm6gv+5IObNOPFoXLBj7X/gis6fsFZMdBN0Ff787cviznD1T7c
fgO8qeNXuyYGvfEOV/vgTzdeNR2/yuzY1IYcLvS+dhqv2o5fbU5sZIMOV/uz
dl5tQ8evNi8GrwGHS71DX6oZXW291J0dv9T8GLD6HS61V/sMAa52b8evtiA2
tF6HC+7Wfst1oOMXXBibW4/DBSe1/4IPd/yCi2Og63a42viodITtSltKRxzv
+FWWyH3IiVpcI73BShxXyKpcL8P96XbgtY5fZqncBx1xzctKkUvkoMHTzis8
2/ErlL/jTozm884+PWUHjYPbKn/SJV3s+CWV6+dsBDJ57AzN/3WyLZc7/n/X
6c6yb5vgMMje6vh/Wq+fQ6OboXuz4x8r9yP++jl//Zy/fs5fP+evn/P/5ee0
WGt7a98t9yP/+sb/V2/EA9cL1t+o91h/T1TfeU+4/tP/BXDN760=\
\>"]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "PlotLabel",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "A string can be supplied as the value of ",
 ButtonBox["PlotLabel",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotLabel"],
 " so that the graphic has a label."
}], "ExampleText",
 CellID->635982090],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", "4", "]"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Wavelet Transform - 4 Iterations\>\""}]}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->165036999],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnE2O00AQRi3YsOQK3AJlx5LtoDnAAOMRm0GaQULcIqfJZeYS3MD4J4m7
22Wn7bin3MV70qA46ZQ/Vz3/gIAPX3/elG+Konh+V/9yc/f709PT3Z8v7+uN
28fnHw+P998/P/66f7h/+vj1bf3mt/rnb/3TvK4AAGAuL/tdUZQHnZ0fSn/X
4fYy2kNqiKkVt8t6lcdu/3J1zCnOh6A3m5Au0nQaJ7a3dp25+ozUVPW53rln
xprHHVlr1i5TzEVzP/E0mpTl0pa+os+qDH3uNt3L4TF029BD/73zRr/WPzyx
q97K8KJ7uT3D+8lufzhdk05HIoRvv7gPF3rXM7cPYVsq+YIt7L1+qyx37ea+
XO/qfuz3kkvEeJOFwUX2c6TmyH1ZaN28cczqU/vFYwdG5tilcD7sX9avnGZ4
BxJsjq286vrcNNZpe1ioD99OIDyOaW19TQvn2E+vhb03b3XiNZ8IO1jC+TAW
3/KG78jjiO7nRJihBsPWxY5jNt3OD2XDwTlI7wzsT79uf14EYfrScY2uvNZn
4ctCePkM6kINmzj9GHbeEvbeaz1yffB2Il83hXX9VFbyeWQc0f2cCDPSLG9r
3jhm0BY7lJ3Th5PPzjkV7Lp52zm1pwY28FleubrPYvipO8JxthNhk/gcyeCO
cfkZJs5nKVl0P0fWDt+f4/M5WsxByjRutpfmpm79SFMGt1fnxtBtts9X/jPY
yJ6H9x1xpduui8zz2Ql/aRD+fMNpO88YwfNGep+F6vOXDZssjyO6n2JNqYbc
unnjmEF7MpyfIgoveXcf2ocnWCGeTsFdS3qyEFb6by/5/aA8lEF4sYFuztDf
sJ392v6T7fk89ud1UpOlcUT3U6w5MnehdfPGAQAAAAAAAAAAAAAAAADQEf7t
FoAcwGewxLTPaa79AOuDz2AJfAZL4DNYAp/BEvgMlsBnsAQ+gyXwGSyBz2AJ
fAZL4DNYIsZngLzAZ7DEsqs3LKZr7C2sDT6rgM+JwGcV8DkR+KwCPicCn1XA
50Tgswr4nAh8VgGfE4HPKuBzIvBZBXxOBD6rgM+JwGcV8DkR+KwCPicCn1XA
50TE+AyQF/gMlpj2+dqb62vRpdW+40WRUWMzilrZ+vdW+JyCjKJW+KxERo3N
KGqFz0pk1NiMolb4rERGjc0oaoXPSmTU2IyiVvisREaNzShqhc9KZNTYjKJW
+KxERo3NKGqFz0pk1NiMolb4rERGjc0oaoXPSmTU2IyiVvx/jGARfAZLLLt6
L6Yrm8VNPGkHsiibUdSLZfHZ0jS3U1OrLD5bmuZ2amqVxWdL09xOTa2y+Gxp
mtupqVUWny1Nczs1tcris6VpbqemVll8tjTN7dTUKovPlqa5nZpaZfHZ0jS3
U1OrLD5bmuZ2amqVxWdL09xOTa2yBUCG4DNYYtrnWbf7dR8M4lfOWkyA/zMA
PhPAUgB8JoClAPhMAEsB8JkAlgLgMwEsBcBnAlgKgM8EsBQAnwlgKQA+E8BS
AHwmgKUA+EwASwHwmQCWAhQAGYLPYInIizkAAAAAAAAY5h8vvSSi
    "], {{0, 99}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 99},
  PlotRange->{{0, 240}, {0, 99}}]], "Output",
 ImageSize->{244, 99},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->222674368]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "LabelStyle",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 ButtonBox["LabelStyle",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LabelStyle"],
 " is a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " directive that describes the formatting for ",
 ButtonBox["PlotLabel",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotLabel"],
 "."
}], "ExampleText",
 CellID->143142519],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", "4", "]"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Wavelet Transform - 4 Iterations\>\""}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Italic", ",", "12"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->461466800],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnEFu2zAQRYV202Wv0FsU2XXZbYocIEXCoJsUSAoUvYVPo8v4Er0BS0m2
TJGUTNlSRpy+hyawVXr4NfM5pAIkn77/vDXvqqp6/eC+3d7//vLycv/n20f3
5u759cfT8+PD1+dfj0+PL5+/v3cXH9zXX/fVvLYAAHABuxtbGaG59/bGDN/e
uG8LUBtr6syhWbdvKlt5/2521+nLUdXNtVBCFqA+f+P73SBLu7332cU9NhJT
0s/1MD/1Yj5xN7XL84Fzfv6kpsoNexVuXVc2czm+Ea0kk9cl4uTPSnIma8S8
ErecfUnu7SFdbfYGDWrYun1fNesx6JkjfghGBs3kfCeMwjaFq09Sa29YLL4+
TneyhDcyyEPcYUw0MjF72xBMO+/ODDvkdXQJz+wSxsvSRJLjwmXmcyxmbdJ1
DFM3sxz5HE4FR6+626mPAg558/YUM7zBcKQ/ILUTpUcOX5+TG+bKeGnva50Q
3yWqfe0v4dgeYaW82+zTbryLwezdx90L01Ykf5Oa5hAnc9eIsmRTSU6WIzef
yZj7Zi3EIhOpyy7HXJyfXQS3UkzrZHNcff0Uyen6i0H1e9lB258YOevEHoZt
0xIbMiG+PpXJP9h3/SS5j/hhg3l9d6W39aOjzixVv+9Vo2fOk+CUURNR480l
SnK6HPn5TMVMXk+nbmY58mkacrusuhdmF07hL67O/NZr42MPfW5AcH308XDO
c0oYJPXZpPjpJmCCLTJ5qtl7/9sNTs3ed+lmukUergPPZ5zKEqmOpKbLkZ3P
scF2zMD9vUQN83w55tAo3DWfbWQflfe30J2v+um60/XpjD1yzvRFulD15Mix
60mm22ZHUnxQlLiSg4up6vv5j9dIEOcw3XIP172Myx4G4yQn056fz7EIg/HH
3hinbl458mnXvn9yOJ1+j9tQ34r768Et+z9G62/28FxQDfKfHOn3n7O3ENzm
aJOJxJ9OgF7P7EUGOhNl9UT6u1U4+/AxxF/4i3D2eNk/34VtPJXkuBz5+RyL
ab2TTPws6Xs4vxxwJUs9xAHI0vW3rf1MFQAAAAAAAAAAAAAAAOAKKoACwc+g
iWk/r9P7AZYHP4Mm8DNoAj+DJvAzaAI/gybwM2gCP4Mm8DNoAj+DJvAzaAI/
gyZy/AxQFvgZNHFZ94aL6RJ7B0uDn0XAzyuBn0XAzyuBn0XAzyuBn0XAzyuB
n0XAzyuBn0XAzyuBn0XAzyuBn0XAzyuBn0XAzyuBn0XAzyuBn0XAzyuBn0XA
zyuR42eAssDPoIlpP1+7ub4VnVrpHS+LghJbkFSr6/et8PMaFCTV4mchCkps
QVItfhaioMQWJNXiZyEKSmxBUi1+FqKgxBYk1eJnIQpKbEFSLX4WoqDEFiTV
4mchCkpsQVItfhaioMQWJNXiZyEKSmxBUi1+FqKgxBYk1fL3GEEj+Bk0cVn3
vpgubBGb+KoZKCJsQVLPhsXPmqq5nZhSYfGzpmpuJ6ZUWPysqZrbiSkVFj9r
quZ2YkqFxc+aqrmdmFJh8bOmam4nplRY/KypmtuJKRUWP2uq5nZiSoXFz5qq
uZ2YUmHxs6ZqbiemVFj8rKma24kpFbYCKBD8DJqY9vOs7X7Zg0H+yFmDEfB/
CsDPCNAkAD8jQJMA/IwATQLwMwI0CcDPCNAkAD8jQJMA/IwATQLwMwI0CcDP
CNAkAD8jQJMA/IwATQLwMwI0CagACgQ/gyYymzkAAAAAAAAo5h+cpYqr
    "], {{0, 100}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 100},
  PlotRange->{{0, 240}, {0, 100}}]], "Output",
 ImageSize->{244, 100},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->56031334]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "ImageSize",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 ButtonBox["ImageSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ImageSize"],
 " is a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " directive that ",
 StyleBox["ShowBestBasis",
  FontFamily->"Courier New",
  FontSize->12],
 " uses with ",
 ButtonBox["Show",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Show"],
 " or ",
 ButtonBox["GraphicsRow",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GraphicsRow"],
 " to control the size of the plot."
}], "ExampleText",
 CellID->424863658],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{"WaveletTree", "[", "4", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", "4", "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->211279798],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3EFqU1EUx+GHThy6BXfh1KHTShfQYixOIqSCuGt3cE3JrIOYPnM97/z9
PkhpIRwO9/546aR9d//t5surZVke3xy/3Nz9+HA43P389Pb4w+3+8evDfvf5
4/777mF3eH//+ukdx9ev4+vp+wEAAKyyQEN6Jsn5nuc8++H69EwSPZNEzyTR
M0n0TBI9k0TPJNEzSfRMEj2TRM8kuaRn6EXPJFn39Ga108Hecm16LqHnSfRc
Qs+T6LmEnifRcwk9T6LnEnqeRM8l9DyJnkvoeRI9l9DzJHouoedJ9FxCz5Po
uYSeJ9FzCT1PcknP0IueSXK+57/9cP1XTttWf+JdpNHBNlp1ZP29lZ5naLTq
0HORRgfbaNWh5yKNDrbRqkPPRRodbKNVh56LNDrYRqsOPRdpdLCNVh16LtLo
YButOvRcpNHBNlp16LlIo4NttOrQc5FGB9to1aHnIo0OttGqw/9jJJGeSbLu
6b3aaWyLD/GpJ9BibKNV/zhWz0m3uZ2ZVWP1nHSb25lZNVbPSbe5nZlVY/Wc
dJvbmVk1Vs9Jt7mdmVVj9Zx0m9uZWTVWz0m3uZ2ZVWP1nHSb25lZNVbPSbe5
nZlVY/WcdJvbmVk1Vs9Jt7mdmVVjF2hIzyQ53/OLPu6v+4vB5e980Zst8H8u
oGcLJC2gZwskLaBnCyQtoGcLJC2gZwskLaBnCyQtoGcLJC2gZwskLaBnCyQt
oGcLJC2gZwskLaBnCyQtsEBDeibJhQ9zAADgmd85uSWY
    "], {{0, 82}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 82},
  PlotRange->{{0, 240}, {0, 82}}]], "Output",
 ImageSize->{244, 82},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->111910894],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt2EGKHUQUBdBWJw7dgrtw6tBpJAtIMAYnERJB3JLrc64tNaxJqj+59d7j
HOjQafiXm0dxofP9299f/fr109PTp2+f/3j15s8fP35889fP3z3/5fWHT7+9
//Dul58+/PHu/buPP7z95vmHfz9//fPV09P/3/8LAAAAAAAAAAAAAAAAkPUE
QGG2HWCeR7b9ZZ8F4Mux7QDz2HaAeWw7wDy2HWAe2w4wj20HmMe2A8xj2wHm
se0A89h2gHlsO8A8th1gHtsOMI9tB5jHtgPMY9sB5rHtAPPYdoB5bDvAPLYd
YB7bDjCPbQeYx7YDzGPbAeax7QDz2HaAeWw7wDyPbzsANdl2gHke2faXfRaq
We/5NYxg22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx
7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi
22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx
7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uxi22Gx7Uzy+LYDUJNtB5jnkW1/
2Wf5fOvOt3/Dm897znDnDNten23P8J4z3DnDttdn2zO85wx3zrDt9dn2DO85
w50zbHt9tj3De85w5wzbXp9tz/CeM9w5w7bXZ9szvOcMd86w7fXZ9gzvOcOd
M2x7fbY9w3vOcOcM216fbc/wnjPcOcO212fbM7znDHfOsO312fYM7znDnTNs
e322PcN7znDnDNten23P8J4z3DnDttdn2zO85wx3zrDt9dn2DO85w50zbHt9
tj3De85w5wzbXp9tz/CeM9w5w7bXZ9szvOcMd86w7fXZ9gzvOcOdM2x7fbY9
w3vOcOcM216fbc/wnjPcOcO212fbM7znDHfOsO312fYM7znDnTNse322PcN7
znDnDNten23P8J4z3DnDttdn2zO85wx3zrDt9dn2DO85w50zHt92AGqy7QDz
PLLtL/vsLavz7d/+z/S98+0WZ3TO0DnDttfX9863W5zROUPnDNteX987325x
RucMnTNse31973y7xRmdM3TOsO319b3z7RZndM7QOcO219f3zrdbnNE5Q+cM
215f3zvfbnFG5wydM2x7fX3vfLvFGZ0zdM6w7fX1vfPtFmd0ztA5w7bX1/fO
t1uc0TlD5wzbXl/fO99ucUbnDJ0zbHt9fe98u8UZnTN0zrDt9fW98+0WZ3TO
0DnDttfX9863W5zROUPnDNteX987325xRucMnTNse31973y7xRmdM3TOsO31
9b3z7RZndM7QOcO219f3zrdbnNE5Q+cM215f3zvfbnFG5wydM2x7fX3vfLvF
GZ0zdM6w7fX1vfPtFmd0ztA5w7bX1/fOt1uc0TlD5wzbXl/fO99ucUbnDJ0z
bHt9fe98u8UZnTN0zrDt9fW98+0WZ3TO0DnDttfX9863W5zROUPnDNteX987
325xRucMnTNse31973y7xRmdM3TOeHzbAajJtgPM88i2f7n/hfhyyS/7937O
NSRLliy5e7Jt368hWbJkyd2Tbft+DcmSJUvunmzb92tIlixZcvdk275fQ7Jk
yZK7J9v2/RqSJUuW3D3Ztu/XkCxZsuTuybZ9v4ZkyZIld0+27fs1JEuWLLl7
sm3fryFZsmTJ3ZNt+34NyZIlS+6ebNv3a0iWLFly92Tbvl9DsmTJkrsn2/b9
GpIlS5bcPdm279eQLFmy5O7Jtn2/hmTJkiV3T7bt+zUkS5YsuXuybd+vIVmy
ZMndk237fg3JkiVL7p5s2/drSJYsWXL3ZNu+X0OyZMmSuyfb9v0akiVLltw9
2bbv15AsWbLk7sm2fb+GZMmSJXdPtu37NSRLliy5e7Jt368hWbJkyd2Tbft+
DcmSJUvunmzb92tIlixZcvfkJwAKs+0A87xs2wEAAAAAAAAAAAAAAABe7D9S
7/rg
    "], {{0, 170}, {500, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{500, 170},
  PlotRange->{{0, 500}, {0, 170}}]], "Output",
 ImageSize->{504, 170},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->233272664]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "OpacityOn",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "For the color of the regions represented by the best basis tree of a \
2-dimensional packet transform with ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Show3D"]],"paclet:WaveletWare/ref/Show3D"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " set to ",
 ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OpacityOn"]],"paclet:WaveletWare/ref/OpacityOn"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " sets the ",
 ButtonBox["Opacity",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Opacity"],
 " of the color.  The default value is 0.75.  Any value in the interval [0,1] \
can be entered.  ",
 ButtonBox["Opacity",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Opacity"],
 " set to 0 gives perfect transparency."
}], "ExampleText",
 CellID->9786578],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", 
    RowBox[{"3", ",", 
     RowBox[{"InputDimension", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"ColorOn", "\[Rule]", "Red"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", 
    RowBox[{"3", ",", 
     RowBox[{"InputDimension", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"ColorOn", "\[Rule]", "Red"}], ",", 
   RowBox[{"OpacityOn", "\[Rule]", ".3"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->316704057],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 120}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 120},
  PlotRange->{{0, 240}, {0, 120}}]], "Output",
 ImageSize->{244, 120},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->205571922],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
kkgiiST6U/3/DRVogg==
    "], {{0, 120}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 120},
  PlotRange->{{0, 240}, {0, 120}}]], "Output",
 ImageSize->{244, 120},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->563219900]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "OpacityOff",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "For the color of the regions not represented by the best basis tree of a \
2-dimensional packet transform with ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Show3D"]],"paclet:WaveletWare/ref/Show3D"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " set to ",
 ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OpacityOff"]],"paclet:WaveletWare/ref/OpacityOff"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " sets the ",
 ButtonBox["Opacity",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Opacity"],
 " of the color.  The default value is 0.3.  Any value in the interval [0,1] \
can be entered.  ",
 ButtonBox["Opacity",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Opacity"],
 " set to 0 gives perfect transparency."
}], "ExampleText",
 CellID->529316873],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", 
    RowBox[{"3", ",", 
     RowBox[{"InputDimension", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"ColorOn", "\[Rule]", "Blue"}], ",", 
   RowBox[{"ColorOff", "\[Rule]", "Orange"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", 
    RowBox[{"3", ",", 
     RowBox[{"InputDimension", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"ColorOn", "\[Rule]", "Blue"}], ",", 
   RowBox[{"ColorOff", "\[Rule]", "Orange"}], ",", 
   RowBox[{"OpacityOff", "\[Rule]", ".7"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->104738706],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {InsetBox[
         GraphicsBox[
          {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
           Large]}], RectangleBox[{0, 0}, {8, 8}]}], {189., -194.4}, 
         ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
         GraphicsBox[{
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}, {4, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}, {4, 8}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}, {8, 4}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}, {8, 8}]}}], {189., -583.2}, 
         ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}, {2, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}, {2, 4}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}, {2, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 6}, {2, 8}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}, {4, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}, {4, 4}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 4}, {4, 6}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 6}, {4, 8}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}, {6, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 2}, {6, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}, {6, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 6}, {6, 8}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 0}, {8, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 2}, {8, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 4}, {8, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 6}, {8, 8}]}}], {189., -972.}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 5}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 6}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 5}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 6}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 7}]}}], {189., -1360.8000000000002}, 
         ImageScaled[{0.5, 0.5}], {360., 359.9999999999998}]}, {}},
      ContentSelectable->True,
      ImageSize->300,
      PlotRangePadding->{6, 5}], {160., -157.5}, 
     ImageScaled[{0.5, 0.5}], {300, 300.}], InsetBox[
     Graphics3DBox[{
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 0}, {1, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 1, 0}, {1, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 0}, {1, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 3, 0}, {1, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 0}, {1, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 5, 0}, {1, 6, 1}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 6, 0}, {1, 7, 1}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 7, 0}, {1, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 0, 0}, {2, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 1, 0}, {2, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 2, 0}, {2, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 3, 0}, {2, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 4, 0}, {2, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 5, 0}, {2, 6, 1}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 6, 0}, {2, 7, 1}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 7, 0}, {2, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 0}, {3, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 1, 0}, {3, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 0}, {3, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 3, 0}, {3, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 4, 0}, {3, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 5, 0}, {3, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 6, 0}, {3, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 7, 0}, {3, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 0, 0}, {4, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 1, 0}, {4, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 2, 0}, {4, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 3, 0}, {4, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 4, 0}, {4, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 5, 0}, {4, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 6, 0}, {4, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 7, 0}, {4, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 0}, {5, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 1, 0}, {5, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 2, 0}, {5, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 3, 0}, {5, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 0}, {5, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 5, 0}, {5, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 6, 0}, {5, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 7, 0}, {5, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 0, 0}, {6, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 1, 0}, {6, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 2, 0}, {6, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 3, 0}, {6, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 4, 0}, {6, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 5, 0}, {6, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 6, 0}, {6, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 7, 0}, {6, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 0, 0}, {7, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 1, 0}, {7, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 2, 0}, {7, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 3, 0}, {7, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 4, 0}, {7, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 5, 0}, {7, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 6, 0}, {7, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 7, 0}, {7, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 0, 0}, {8, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 1, 0}, {8, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 2, 0}, {8, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 3, 0}, {8, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 4, 0}, {8, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 5, 0}, {8, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 6, 0}, {8, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 7, 0}, {8, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 1}, {2, 2, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 1}, {2, 4, 2}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 1}, {2, 6, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 6, 1}, {2, 8, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 1}, {4, 2, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 1}, {4, 4, 2}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 4, 1}, {4, 6, 2}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 6, 1}, {4, 8, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 1}, {6, 2, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 2, 1}, {6, 4, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 1}, {6, 6, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 6, 1}, {6, 8, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 0, 1}, {8, 2, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 2, 1}, {8, 4, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 4, 1}, {8, 6, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 6, 1}, {8, 8, 2}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 2}, {4, 4, 3}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 2}, {4, 8, 3}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 2}, {8, 4, 3}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 2}, {8, 8, 3}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 3}, {8, 8, 4}]}},
      Boxed->False,
      ImageSize->300], {480., -157.5}, ImageScaled[{0.5, 0.5}], {300., 300.},
     ContentSelectable->True]}, 
   StyleBox[{{}, {LineBox[{{0, 0}, {0, -315.}}], 
      LineBox[{{320., 0}, {320., -315.}}], 
      LineBox[{{640., 0}, {640., -315.}}], LineBox[{{0, 0}, {320., 0}}], 
      LineBox[{{320., 0}, {640., 0}}], LineBox[{{0, -315.}, {320., -315.}}], 
      LineBox[{{320., -315.}, {640., -315.}}]}},
    Antialiasing->False]},
  ContentSelectable->True,
  ImageSize->{652., 327.},
  PlotRangePadding->{6, 5}]], "Output",
 ImageSize->{656, 327},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->486150933,ImageCache->GraphicsData["CompressedBitmap", "\<\
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
7kEruLeCzsDJJxFQGZS0EHbVDfYU33e5/KJzabHxtYvxWpVT9FAnvThs76Sw
LEL93W1B7qSfnysSHUReES3qF49VUwetdklHPtuXibecxQwnL0V/+Fz6Y7Vm
OI6AltLl1cj+cIloPF4hz6V/v/qja2nBSh9jp/743gONVn/Q0OZr01GrP352
70o0FyFCqT/+ar8HU8WVeNXYI/gcRyj0dNQVxVKY/uv9a+Af7iqEbx2MUseY
7jZRlKQPHmrdHU/1tD4ounHntZmbP+CMOLa04P1q++1LiDL6iLQ9yrir/6As
0lmGcH4Vhxdq9H8jI8DQUiQb/WdnV8KPTubB16eClP+lon+1S8sfrl4FF9t5
u+mEls9fpjdq5ub322LH4YEWNUL3frV896Khwr1klqrlA7Llf3JrEP7LPkT+
niIpyIT7wQDvyZd5lY47tT5+RrI4sC5Fy3tdWj5HtvyFWPcN+Z02qaRVHKAK
5uqc9xf4Hamdf0HqIJ2rNb4aw1KN75dlix8eDcJ397G/sRof1XFuauJVaqoT
v4HbPeTW7lwxvCyXyV1q3+XJSOJn0DelLEV0Stp1X+8zPGrWcdb71Ow9S/Px
FHMdlSJProugpTanQUCMu6Zs9u/PSTf/oRI9AclMgbvX4W0U8tT21dz2Qde2
v9IxJmZUxnpCDidztrlxsTLBDkm57t5VBvF+NfeuJbj1VEUdNxHqlQ39y8fW
w4+OheBPZzzwT/eKxv7lhfXRVHybNr7RpdRz8wa4eU9viVrN+3hsVI2PeHzL
r5Lu5DY26DF89eIsHOtrEWmzRxyrptopw6XtltPeu7X2TubMk9daIm7tTa0N
v3qsDP56LgTfmfbAP3+olNVLaJlEN3GT++GNkzXs0rjJq4rhQgtNCOrxLrOW
uVM6ENXUz6BAnML8qn5dEQ1Nq1aX/oTbKdOlBZedcu3RPEtSh56q1BFOGGBA
9Qi/fLwcvnc0wusE/uk8l6v8N0R4q3QgenMfwva8Fz2EJgKTOIkltaqPW5Vm
nJFLJa5pncj7mtD2aq3r4rdVuHQWIuQITq7LzDEOl2eK4QdHQ/DupAd+dm4V
6xKvxJpa90aw5joffmuq+P3F2Xr4nZFV+MrkrqFHa1l67tk7l9yyy97laLtV
tnNr437NeejOGtvXU5B6GEXFRpsYHDTgrUkDvj2FfxJbktygpNWp8TRc26XG
+/GDjfCdM/XwZG8h3N0SpaGQJZk/PoaXHpmFswP10LahCPJorbjXow6oJKdI
zUl7N2FTFqWnJQdc3DCdRfXc/XE37JbW682oSt6fxduLAx54ZcR0ZiWJ+Alt
TO32n8cL4d72bAxUZjIB4NZkO+pKUeoG403mszUZEYgmKLfBet/bbVC2m9OH
6u3mFr5y5cwNbeqONUXHkUOodlJm+uaJCngMkykM/lY2lspcl9FYJelprCEX
l0iNRQeeWS4xVcAx4Wv7s9lU/+qO9dQgqm3+6/kbs70eR5BI0jbKleltsz49
bTOyBFeWJFZky7Yhll6djrKxITctSewL35msfuJslhuInRXpaZbRFH7JLePU
fFOWNLG/f7QeXuj3kP/xNDts6ZVjFdwmui25VTZ2LL9hatLTMGNLcDxuOWGm
S6s0aFakvMtiVvTvbJX69LTK+NI8jDOBo4JohkvDbHKE9iWbkA/euTYPLzw8
Cyf21Kv2EN9VhnStMZrS0xaTi3oU9wJl1KUhqhy+RNlNPFanshtfQgwqygzK
1nAPQFvT0yRTi3oT98phRDbJTy/Us8KhJtnITWLajAbdiDMiu9nLMiJyLD0N
Mp3CiyxS0AvJNvm7h+s5IlOblLlI4UXs5d/RJm7lhPehTWaW5kPcnGvQpU3W
LtN0ujXnSg1DzjWFRFH+hBpmR3oaZt8SHIozRyDPGnBplVU3bj3dKaJNigah
aLM7PQ2yfwnuxM3D+l0apNBFySrTSaVkU7XKIjG4Pz2tcmBRn+Iu8X0urZK3
RA3rUiSmAOxojGQBeDg9DXEwtSPJT63qDZfmyFqCfHVLBbtdRElb9eJheCw9
DXM4hSPJT1228bq0SnSZSWD3MsXJVHpaZXZRbxJyCzrUILbmCN64zXQvPwjv
S09jHFnUiQRZxTvqKnpDmEkC72LGsn35gfdQehpjbimOJJrgVJ8dENM6qE5J
Mzp1+0gRa8k0krXBEmLtXHra4NiiPiNok+40EZ2OLHioI6roTwL/9uXrilvT
c63HU3iCfMeyUfQGKWXk9hThMNWlnUzPpd26qF374MJAKTP84ECF62W4R7CE
Svkd6bmC+dTGmCf757EhcRF4AZioLC/8nknPFZxIYUq58uuf3xP/+rFlxslz
6fn6J12+vrKOHPn179kV//pbHb7sBmq996XnCk7JK9B3tFdGkO1yBY3L98YP
pecKTmtGoF+BNIJMl4uoW/5FPJqei7hduwh1MopmCxkuF1HtEiuWeBGX0nMR
d6awhqjLFVQssT6pOdKr6fnmd6WwgojLN1+/TC96LT1f/0xqEwi5XEHJMq/g
6fRcwd2p+Q+6XMEqeQXKiN2uwM2RfiQ9V3BPCvgDLl+/cPk+6Jn0XMG5FEbg
4ysw4S8/Ng8HNgVZ3uE3z1v+RfxBei7i3tSmYMie+PZvzcLEBg9JVAxzy76I
59JzEedTW4PX5SIyHPZMs2/lBSQrNf1Rer68ECohN0Og72371qFleqHn0/PV
7+f7oJsF6F/bt8xv/UJ6vvUDfJ+RgPy26iIYKuNvTF/4hr/uF9LzdR+UjeyE
m7ZPalsTVF/N6cL12sbL6flmD8vnNHJTWv+r6fka4jnhh+nP6X/ya+n5k3yf
pjGsDz77g8/+4LM/+OwPPvuDz/7//rOTTtH/j/GJSd/zwYd98GHL/DC//JF+
g3eP0V1APAPWv6fevyc8t/w/PXHzVg==\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {InsetBox[
         GraphicsBox[
          {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
           Large]}], RectangleBox[{0, 0}, {8, 8}]}], {189., -194.4}, 
         ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
         GraphicsBox[{
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}, {4, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}, {4, 8}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}, {8, 4}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}, {8, 8}]}}], {189., -583.2}, 
         ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}, {2, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}, {2, 4}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}, {2, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 6}, {2, 8}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}, {4, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}, {4, 4}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 4}, {4, 6}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 6}, {4, 8}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}, {6, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 2}, {6, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}, {6, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 6}, {6, 8}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 0}, {8, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 2}, {8, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 4}, {8, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 6}, {8, 8}]}}], {189., -972.}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 5}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 6}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 5}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 6}]}, 
           {RGBColor[0., 0., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 7}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 0}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 1}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 2}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 3}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 4}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 5}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 6}]}, 
           {RGBColor[1., 0.5, 0.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 7}]}}], {189., -1360.8000000000002}, 
         ImageScaled[{0.5, 0.5}], {360., 359.9999999999998}]}, {}},
      ContentSelectable->True,
      ImageSize->300,
      PlotRangePadding->{6, 5}], {160., -157.5}, 
     ImageScaled[{0.5, 0.5}], {300, 300.}], InsetBox[
     Graphics3DBox[{
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 0}, {1, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 1, 0}, {1, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 0}, {1, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 3, 0}, {1, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 0}, {1, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 5, 0}, {1, 6, 1}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 6, 0}, {1, 7, 1}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 7, 0}, {1, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 0, 0}, {2, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 1, 0}, {2, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 2, 0}, {2, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 3, 0}, {2, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 4, 0}, {2, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 5, 0}, {2, 6, 1}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 6, 0}, {2, 7, 1}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 7, 0}, {2, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 0}, {3, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 1, 0}, {3, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 0}, {3, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 3, 0}, {3, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 4, 0}, {3, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 5, 0}, {3, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 6, 0}, {3, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 7, 0}, {3, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 0, 0}, {4, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 1, 0}, {4, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 2, 0}, {4, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 3, 0}, {4, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 4, 0}, {4, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 5, 0}, {4, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 6, 0}, {4, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 7, 0}, {4, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 0}, {5, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 1, 0}, {5, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 2, 0}, {5, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 3, 0}, {5, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 0}, {5, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 5, 0}, {5, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 6, 0}, {5, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 7, 0}, {5, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 0, 0}, {6, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 1, 0}, {6, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 2, 0}, {6, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 3, 0}, {6, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 4, 0}, {6, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 5, 0}, {6, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 6, 0}, {6, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 7, 0}, {6, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 0, 0}, {7, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 1, 0}, {7, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 2, 0}, {7, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 3, 0}, {7, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 4, 0}, {7, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 5, 0}, {7, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 6, 0}, {7, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 7, 0}, {7, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 0, 0}, {8, 1, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 1, 0}, {8, 2, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 2, 0}, {8, 3, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 3, 0}, {8, 4, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 4, 0}, {8, 5, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 5, 0}, {8, 6, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 6, 0}, {8, 7, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 7, 0}, {8, 8, 1}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 1}, {2, 2, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 1}, {2, 4, 2}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 1}, {2, 6, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 6, 1}, {2, 8, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 1}, {4, 2, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 1}, {4, 4, 2}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 4, 1}, {4, 6, 2}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 6, 1}, {4, 8, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 1}, {6, 2, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 2, 1}, {6, 4, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 1}, {6, 6, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 6, 1}, {6, 8, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 0, 1}, {8, 2, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 2, 1}, {8, 4, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 4, 1}, {8, 6, 2}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 6, 1}, {8, 8, 2}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 2}, {4, 4, 3}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 2}, {4, 8, 3}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 2}, {8, 4, 3}]}, 
       {RGBColor[0., 0., 1.], Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 2}, {8, 8, 3}]}, 
       {RGBColor[1., 0.5, 0.], Opacity[0.7], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 3}, {8, 8, 4}]}},
      Boxed->False,
      ImageSize->300], {480., -157.5}, ImageScaled[{0.5, 0.5}], {300., 300.},
     ContentSelectable->True]}, 
   StyleBox[{{}, {LineBox[{{0, 0}, {0, -315.}}], 
      LineBox[{{320., 0}, {320., -315.}}], 
      LineBox[{{640., 0}, {640., -315.}}], LineBox[{{0, 0}, {320., 0}}], 
      LineBox[{{320., 0}, {640., 0}}], LineBox[{{0, -315.}, {320., -315.}}], 
      LineBox[{{320., -315.}, {640., -315.}}]}},
    Antialiasing->False]},
  ContentSelectable->True,
  ImageSize->{652., 327.},
  PlotRangePadding->{6, 5}]], "Output",
 ImageSize->{656, 327},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->84952644,ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQeYXVd96LvPrmeffqZp+ozajEa9WcWyJUuyZbnKalazZHWryx3jKneD
CwSDjcGFXMCUJB+Ea0qCgRBIuyQhyYMEEgKEBBLIy+W9++773uWG3PX+//8q
e+191t5zNGg0+r5rfd85mjltzl7/3/r3tdZ1++48cujkvjuPHtg3eOXt+249
cvTAHYPrTt8ODzk5y7KfsazclYMW/swsS95F/57DO/2Rc/iAz3+jPwh3D+Nd
wB/x6D+HaV+G/7DybJ5w3/qwtz5sYj/sPry/HB968ML+RBsfghl5xkr8FBge
a/bZt77hW9/wrW/41jd8SyP+byrnt77hW9/wQviGb+mbt77hW9/wrW844frm
L/n3/+Y3v3nsXH7sn4vH4HPZa6+9xi677DK4qlqtJh6Tr7vlQh7tb9B9gf38
5z9nX/nKV9jevXvxEug1NddiXo7SU+yGG27A1xy5kK/lT+g+VAKZP38+PY/X
MK2UY5v6ffbQogqbWnX5h8D78XXy/Ycv5Iv7Q3FxaYJa2+myfdND9vylrfAh
v75uEnznGS0+PT+z22IdbTUcmAubxq83KcGX13bAl8aL9NVFblrosGkditQL
WphfPQthBonrvP/aGjtymctaihaO0QV9nV/R5InXKOWJ14jyvGlqyJ5aXid5
hnSdgbrOhzfU2Xt31diVs3IK3kMX8sW+qQlV2AMSKsLb7nOhIrwo1BJdbD52
sb95dBJ74NpQh/jgGK431V797ijCQOCeW8GFURHf79DsCr1m9XBI3+9jhzt0
+M7p9/v8WYxfnb6fw95+UZ0+Y1a3D4KBbwh/HqFZPSNH74VrPXAhM/PZFJlI
hafLpNVwzY645rddFbL+FsXN/gv5mj+TIWdkEV+L8r5lmm91ZFzzq3tb2eZF
Oea7xOIFfc2fovtyTOHr829uC1f4x2aX6bFJgcV29ebYO5bVrHbDGLhiDN61
vcIumW5J1vddyGPwW3RfMxr37jDH1vco445XrK63v2SxE0MW29GTw7nfljoc
Hqmn29cF+lSw9l7IY/JJbS6YHAHJBeo8VxhIeeGDZYvdOy/H9g7g+ASpOsIz
z5cLelw+LsalCVbgk5LjkmNnFtrsjlkWu7HLYo9dVDGOi2+eQzePYVxSbdpH
R5Gv7uiFwubq1/HwIps9tDDHTgwr/lsyLkXnH/7UOb2UD2eIJOnLFRPfES4F
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
t90=\
\>"]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Show3D",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "For best basis trees of 2-dimensional packet transforms, a graphics row \
with 2- and 3-dimensional representations of the tree are plotted by default. \
 Setting ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Show3D"]],"paclet:WaveletWare/ref/Show3D"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " to ",
 ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"],
 " just gives the 2-dimensional plot and it is output as a ",
 ButtonBox["GraphicsRow.",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GraphicsRow"]
}], "ExampleText",
 CellID->238949960],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", 
    RowBox[{"3", ",", 
     RowBox[{"InputDimension", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{
   RowBox[{"WaveletTree", "[", 
    RowBox[{"3", ",", 
     RowBox[{"InputDimension", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"Show3D", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->141394590],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {InsetBox[
         GraphicsBox[
          {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
           Large]}], RectangleBox[{0, 0}, {8, 8}]}], {189., -194.4}, 
         ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
         GraphicsBox[{
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 0}, {4, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}, {4, 8}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{4, 0}, {8, 4}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{4, 4}, {8, 8}]}}], {189., -583.2}, 
         ImageScaled[{0.5, 0.5}], {360., 360.00000000000006}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}, {2, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}, {2, 4}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 4}, {2, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 6}, {2, 8}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}, {4, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}, {4, 4}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{2, 4}, {4, 6}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{2, 6}, {4, 8}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}, {6, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 2}, {6, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}, {6, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 6}, {6, 8}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 0}, {8, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 2}, {8, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 4}, {8, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 6}, {8, 8}]}}], {189., -972.}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
         GraphicsBox[{
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{0, 5}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 6}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{0, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{1, 5}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{1, 6}]}, 
           {RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
             EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
            RectangleBox[{1, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{2, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{3, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{4, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{5, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{6, 7}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 0}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 1}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 2}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 3}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 4}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 5}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 6}]}, 
           {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[
            Large]}], RectangleBox[{7, 7}]}}], {189., -1360.8000000000002}, 
         ImageScaled[{0.5, 0.5}], {360., 359.9999999999998}]}, {}},
      ContentSelectable->True,
      ImageSize->300,
      PlotRangePadding->{6, 5}], {160., -157.5}, 
     ImageScaled[{0.5, 0.5}], {300, 300.}], InsetBox[
     Graphics3DBox[{
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 0}, {1, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 1, 0}, {1, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 0}, {1, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 3, 0}, {1, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 0}, {1, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 5, 0}, {1, 6, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 6, 0}, {1, 7, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 7, 0}, {1, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 0, 0}, {2, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 1, 0}, {2, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 2, 0}, {2, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 3, 0}, {2, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 4, 0}, {2, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{1, 5, 0}, {2, 6, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{1, 6, 0}, {2, 7, 1}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{1, 7, 0}, {2, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 0}, {3, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 1, 0}, {3, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 0}, {3, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 3, 0}, {3, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 4, 0}, {3, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 5, 0}, {3, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 6, 0}, {3, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 7, 0}, {3, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 0, 0}, {4, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 1, 0}, {4, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 2, 0}, {4, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 3, 0}, {4, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 4, 0}, {4, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 5, 0}, {4, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 6, 0}, {4, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{3, 7, 0}, {4, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 0}, {5, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 1, 0}, {5, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 2, 0}, {5, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 3, 0}, {5, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 0}, {5, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 5, 0}, {5, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 6, 0}, {5, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 7, 0}, {5, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 0, 0}, {6, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 1, 0}, {6, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 2, 0}, {6, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 3, 0}, {6, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 4, 0}, {6, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 5, 0}, {6, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 6, 0}, {6, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{5, 7, 0}, {6, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 0, 0}, {7, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 1, 0}, {7, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 2, 0}, {7, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 3, 0}, {7, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 4, 0}, {7, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 5, 0}, {7, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 6, 0}, {7, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 7, 0}, {7, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 0, 0}, {8, 1, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 1, 0}, {8, 2, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 2, 0}, {8, 3, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 3, 0}, {8, 4, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 4, 0}, {8, 5, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 5, 0}, {8, 6, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 6, 0}, {8, 7, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{7, 7, 0}, {8, 8, 1}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 1}, {2, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 2, 1}, {2, 4, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 4, 1}, {2, 6, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 6, 1}, {2, 8, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 0, 1}, {4, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{2, 2, 1}, {4, 4, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{2, 4, 1}, {4, 6, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{2, 6, 1}, {4, 8, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 0, 1}, {6, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 2, 1}, {6, 4, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 4, 1}, {6, 6, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{4, 6, 1}, {6, 8, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 0, 1}, {8, 2, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 2, 1}, {8, 4, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 4, 1}, {8, 6, 2}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{6, 6, 1}, {8, 8, 2}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{0, 0, 2}, {4, 4, 3}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 4, 2}, {4, 8, 3}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{4, 0, 2}, {8, 4, 3}]}, 
       {RGBColor[
        0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
        Opacity[0.75], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
        CuboidBox[{4, 4, 2}, {8, 8, 3}]}, 
       {RGBColor[1., 1., 1.], Opacity[0.3], EdgeForm[{RGBColor[0., 0., 0.], 
        Thickness[Large]}], CuboidBox[{0, 0, 3}, {8, 8, 4}]}},
      Boxed->False,
      ImageSize->300], {480., -157.5}, ImageScaled[{0.5, 0.5}], {300., 300.},
     ContentSelectable->True]}, 
   StyleBox[{{}, {LineBox[{{0, 0}, {0, -315.}}], 
      LineBox[{{320., 0}, {320., -315.}}], 
      LineBox[{{640., 0}, {640., -315.}}], LineBox[{{0, 0}, {320., 0}}], 
      LineBox[{{320., 0}, {640., 0}}], LineBox[{{0, -315.}, {320., -315.}}], 
      LineBox[{{320., -315.}, {640., -315.}}]}},
    Antialiasing->False]},
  ContentSelectable->True,
  ImageSize->{652., 327.},
  PlotRangePadding->{6, 5}]], "Output",
 ImageSize->{656, 327},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->158898566,ImageCache->GraphicsData["CompressedBitmap", "\<\
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
OVn8EqoRGtUwfjB0kW1FcKBysnHpCLbbyWt0OKOjSfz7yyM5WUSvT/bg6L6T
UD5HbNdVXlNMWESgrRQkclOhupS114YKa7mvnwrvGCr0sMJtSaIWJKaiWxTL
JitMbkoiUzcNA+j82amMwo6FC1H/a1fhUyMRxAPfiAikganoWr08yC2TTEQF
hRpkMyjQvn1kH9mMUIs3hXTg4CEfOJcoQijqON1zFLKLqyEsIpq8qoBkzK2q
h5yiCkjLLYXZGUWQnDVH73UkG3+Oca9UJ1hLHZypE6zmZs15V3BxWnAhLaod
mnaLE8Llin6dxQb2d/KSZ/PvSvLKx5Rh2nHjUtVrGjfPhgbdNjs5FDLanzu1
DUc7l69ghtWGI92DKkAPqjqnUKfEa7+bw2MDidsm3BCQeEw5KArlJSDC2ohO
kVXZ5uyqYmNq1CScrVIUG/hkBIdThwM/DOKB9+mAqCwsQaEWIka793PcgY5V
YEAmsUNFgNDNmpUtLavkVWs7KJKyiiGzYC5vOiVwLI0jfPZ+1qv64mq+1lvh
Y4p8GVqmILOWNDsFXnz+B9c4iHgD1ow69RUIKcJIDswDrUBkJQpUKCjW6zwV
Lj4bXNwWXGQlnVseV2TF5cnIZVNRh1qU9m/ME3KcFBELmTMToTgliyuBKCVU
mz9H/FxAalewFOqBtV1s7hk3NvcnreTaN76NBt5iogoxqJaZKFFJQ3KoKAtF
pXCrKqu4GOPg6hVeG1icGiyH8D7CxKElrW4f2ct+FkUf6GdhiDmWFKck5Zo0
JXQbGuiFBYtXsPszEee7otIqjYw5tKuVialraDZ2vAboZeHTusHq5dRUd6qV
3jntmzEWvz1KnEYmKy+Her8GRkRla9WGbP8Sd/C4SxQyOJelduHGmey0RKF6
mShc9G7iOjJqsYK6Nvbv2mquj7ZDJsrU0mLR3FrYuWwxrJhXYdRtKIcrOjTC
eLtUO1eSmg0V2QUOqMjKx1csz8yD0vRc/J6Pn6AqhwKOqmykBW9oefBa1RVQ
EF6TW2CU6gXYguUNSFCMIMio8Ms1lS5ZA3Ft8ZrsBuxEcrZSu/7FC+3ocTE9
XhWdEDd8IxND5uXm4b2oGSLGOyY0IVtCxKADJlNbIRiinIKBU8egpLKBw5TI
mImQVVgOFTWNbEPEvvBFDtqIi59PbwKjd92gdZB/+u6l19IJV2tjoLcxDdBG
+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
Cce9gZ06HA4LHE8uCZPy/YPj8If3TzoVHPf8cDjHgYPZIDsh625I3F7pa9F9
1pIEuzyAS2GCjIpSnyMGJqrsbWrcFOjv7WaT4mAoRB0Pmh7+PnS2F8739eBj
jkFfT7eRgqbUWGrmHMhEm5LNWBAcHgOOFAxTVStXdNhU+uyHLz5HLkSRTnxC
Ci/04AjT/gVqM75+wx5OpXUd6ONX4ahcdteKfxucxPJXr6kNAxUPzJwYB4XJ
mXw6Ucw4kLglJFqmGcUoYhyrbaHvZJMyLL2m9GClPr8AVlVWU31/qORi3zLR
lo12n1lLoF/FhScQF/iRyZbQ/bRnYWV1DdTk50Nc7ATwuAOiEcpoOBkNwuJO
/44gwYXL4OKXj8+Qm+VhHjxcERCw/Mw9pvzsa7EyOS4alFDW0XCNg4YeynA6
AfUg3oZA5kN8njk5STwOmRmpMHDqqMBj8AzbDdp4evb0CTjTe8xBXUzEaTMe
6D3WDaWVjazzaLQTCAdhIijxskkhSiZPmQoZeaVcNSoPNMM3RaiEwl+/fQE/
IS6fPhS9V8+ePAWJaXmckCaPLxFDXmLlo7tfBjlk3ahKQ9PLqr6rb5Ebf1cF
muCpo2/6tERiZsI4yLhskAllZKJhbhoikpI5pqW2QoSOvddaipp6hra3LCQb
Iu2J29Q49ADF/qtWvNKuFCZkmPhxvCE/Uy38BPs8kDhrCqxqKoWRo5simR8f
3B1oY37uIi8qWfbehXb450/Pok057mZ2XLKiRpRzBnCqVMWZynZJbynYErAQ
Lp/fOOTS9/pIUtw2AYtHFupopIjX5dxDF1w5sdkIZNaiVysoOQ5nTh5lSvDB
dBjGmZPHYKD3BP7v7KkefKH2ne3shJHCZ83O1OxKKMcuREx0dCwfyhSHfr06
zYz2Kajiauqc6uRiUTc8vn4djhw4YliSzLTsIJdNa/AJcbNUp9RZb9PIKFhC
vCEwe+IsXp9Pmzqbjcx4xDi0RJo0KNITi5BNeGX360n+JrwKyukTJjIxG2rr
YNeihWrXv0P2jVIAcc/55gUMkM9ieBAgfAsdvO25k2tcliugVNscVV5GJIlV
Ta9eGw3r5tVCelyiZKsCX7iNrVMAflRCnvBJQnzWLa6EwzuWwOWeVtqyBkOH
18Ht09sFTp4xOL283w0/v9cjXDI3YiQKAQilF2IZBj9PoMoyf9ThtxljIn+n
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
xUNf4buPb6cmVZnKyVJRtC3goIzTHodUeaJKlUeTKvqLh6XALtbs0ILoQhYy
CRmJGOzfuhyO7sqF1/bRviQSML/NIHHnE9GMzqPFHFr+NEr69BFNli6QaJ2X
wUVDlqpUMlN8Q9tzZnBaDaWKP92UUb35JMs9VOezbTE3mXQcJu4SYhayzBI9
1q3Jg3ZdRPK17TMd2dcaOISakQ0aMtLHOzS80LOfWKGVwhVg2Qqwv9UWXTfp
b8HCpWushYGHJFgBa9/rgB5DoPOTnaHbkx1g6cSJsGNZBt6qELEs6lLrFCt6
1U+v0HIfisfG+S9B4ZwZsHnhHNizaimUrVwCu7MWQ8mSubAzcz7sXr4IyrII
IPwKY5td+P3OzAWwZeFsOhYeXbWxvOi6kg5VmDUNihbN5WstHjcSuj/Thvse
CsFIsU5+y180HqoQUdq3QL3aac8nOTE0e6d2ZnK91VunNjIlVw7ku+kb19P8
MuXxaQMFNaY6ti0D376Mf+VESQbXPp7elcWVv5Sf2r9xHhTnTocd+TNEY1J8
78mdyxGUDJSrDK54PFa8VEkKvLxjGRzl3iaL+X/6XpcaKrQ5tGUh2zjpyeGt
ochwEizIwhNk4Xlp/ACb8JBlOo6WCUOXZOnInZVyQ4LBXVE4UbvasNjg0aVF
LN2yvCRbUsJfofSSlKACQCmZDgtQSiajdDil5FRppmpxH+vkcOrpuEP20kKB
QeJWoo598ulOYh9Tn+fZBJEpGpw2Su5pCqJXN5pb1HfuMYAboz7Zrht7c0MG
DYT337ojJMhvc+TK951WKdyHJDzhtlg7t1ZAeclhPgilQ8s2sGjsWBKgZiwe
QUs8CHM6UVehT6JRmrnAA7uWkXNfyi/NY4nYOH+Wm96P47UJf7NoUTrswB8X
LU7HIH8s9Gz/DLRs0th24Funp1tB9rwXqJmhL+I8gtUopTRZLblGRTn8lyqz
oRpjVm6Zg/qWvid+TqIgHC9Zwsu5JFtXkaeL+3Jk189CuHKwAC5iPHH5ADlA
6+Da4bX4NbVeL+Dvq6tQ1s6Vr0Q8uSQGf5X+zBnE9Pj2DK4pPro1g2XsYkUO
3sWJ4qWoEl5hGVzGckFd48+XZ8PJHZksX7sKXmL8CMOF04fD8V05nONNZTHw
WWJA8QnVAxP2UWvbg/TMHliq5XcFDYHKyrmjbfzPmzIY8haOZQuB/FtduvXD
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
QwbxpKgm+j5Dc/K4U9JTo0T3JKji9rtv7jcz1P4QJRRuoPfQWIar//BZtRWu
vn+hmF2AhkyJB/7llxeZEOJAl3dNqTdhEPyRIFDAeXe/h4nw4hzv5ULYe9d2
wpfXy7zaNN+7WsoTnMzPPvisuoTL6fVj8mzSXn1gjZpfMhGHCnkxZJVsWJjv
6qWpfJpbo8r3Raj87z/+CXqRQgnQHHdqJ9JkhWuLfYa23nGf3t6a+le93UaP
GsHmv5mj+oaS+mQCivLn6XOrh5Kk+VEJyLn1w1+/PCfMOkq35po1l/P5H99d
t83pmycK4fNruz3w+VVqW0DZqo8ubKVsPXpoNHF+Lth6/9xWXve5KlVPWeFs
6zg5jIqlaKICEtNmLcPjtHWPorjD6Tuz4m4o5+xE+S7dZHv/HnPWR5sz3WRf
OHPSZUqTy/lyqQnTozvS3jRhDaQw/uuDap4wFD6MrmmWPDxL+BV/57S8dA2K
sGl5zW2YthRN3mja3n11My8GXuTYXyShbr68Ee6eLoKzlYXhqrmNCxPU9MlF
Npq+Lg6NStNHXdVjaNRmcuamjR/LIyVbf3q0mZP9muM/c301ZapMLvUbd5hc
k7+lT957l3ZzHKYmT9lbbfJ4wtTEaf/jB4qcVLfhtSR+DpkmmqbZNsmJPMle
p2yqJVryr2l+v3n7BPz+o3Pwz1/dgP/xzR340xevQ1HOHH3OwzKrTXrH2qla
fd6Vqn0khjlVsbmjr3GDeEPQT4MgqkUVfpfKHSu/q7H0uyjo+ujaPgsCcrTR
pCYzB14nB2458f/+6+v4uEEPVwtHmCSn182C7FEzK3VuTSLsZRH+EKmk6f3D
Z5f8NL9kGgwzHDTMcLt6aGWa3selbN85/yprZWlJPYZAqj7TGrWn0ABNA5ut
pr0C3zR/335wxvKdpUuUJK1mFDl288zZxVRY0kCEmH6Ck6XE0xtLPH0m8XQl
xJjAgGEC2xgm0KSXNZPaxmxR3YaTon7QuXs+hvVsZihjoLmjfJjm8ehhj/Jm
E6UO/mf0cGjuyNuhSSKhowkjwfvfv36TRbGlNKX6pNGOgQ/OFbHU1UHSUmNM
lN8wUU84DKjSpeGJMivSdjxbQacV5SMPKOdJzg9OVR1nip8HGX4wsHaG8vYb
563ElNPLoUm6cniNbZISeJJ88I8fn+BJYndUTJDLJF0tDXGH6mpegwQ1jjEx
PsPEtNIkyGHgYqrATnJiDBaO1ybkAes/1MQMqp3x0lfSaWIefHDemhhauryN
o6Um5i9fXkC5Ee4nTcxXN3fDv9w/zxNynWflUWms/u3BFfjjp6+gcttJ0+E1
i0SLKCN/bEeWFcnpI9+i7rrrOR70gNPu2MKAH2rEh9TC1ujrzHZbY/b2gzIj
F5aDixFKSnkIf7l3Br7/yRF4+9UtcOvkhljMtzKM/PI5o+FcJUXUkSPfpJ7K
qCcPv99mOubOX6HW4H6okU+r0VKYs2OxRj4gXbTffXiM91H+y/1zFuZNZWyl
Y06jjqhHU/9PxRhxt2HEG8oRPxHpRsfUMv2kH63UPyUpW7Xu9IOCPjS2zm8a
2zY30gZdrVOpQfdL7fLrd6vg/o1dlnZxqvsGsZFXcaqO/NM8ASHTBHBqkBYR
ZAdeV3IURTOlhtzDQIm7ruJ9/qAqIk79gcZ/WO1UO9lcRybI1cjg19KDVvzQ
7nql2f3mrUqh3b+8KAOR61aO1wS926FrFPg08B154IPGgaddnbzQW74q5FAx
u9bMqSlhMFSyrit3FUX8UGM9ohZKPVYKx+SBumX08B+/uwPfY+RAFdF//uIc
jzRSnhQLbq8NblQsXXl4Azy8WXPHWsN7tiJPLYS4fPVPgQ7nMfbQ13D3/ClY
9NIMefS6OKtNjVOyYezqM94jtfGOpsqjZ10STeNNo42P2/D13Ur47Eox/PX+
BdYpoXoS3YOH3A/vni+H6WP7ywNURsHJ0mU03O56Zi6HS+2hhvrwru0wbdwI
6NqpPS1Cq1GXyoTHKcUwgvWOt0ZpaiWqWo+V7kiIWD1Aj5Epf/BWFdx7fSdS
fp4I99eJ8L5SgejDTcflVWyYp7uAUZRErUbVx6NKVWSkT4lr2vPxg0azo7XR
NShtZTSdyQi5PNNI1vvoKXxhNE9z5c5Hl7bBX74455FE08DWhej+PMQeTvj9
/OYxOLBtJb4zulYYpg0qvXZi747aDmq9exsNsb4yDe8YTW/oehqH1tU09vJI
I6k6nF7ge+dEgcQfPzvNg6lIdXp5GqoDpJf3Dx+eg89ePwy71y2G3IUTa3Qc
FKT4NVw7dQTylqRDvx5doXGDJIJEnXhJCpHGk1o24Vi2iM9QjjWoYDr56tSJ
w65Y8bzyLfTENzWJv3IoD24cL3TGI5H8Ce+Yxu303nwoWDoVFk4bGs34m4Zs
6PN9odUjzcJD5rMNGSGI4ie7X/3g4zZOjptTf+rjZjJdjWSBhlagYxXiOKII
NU5KTn96YS9szZ1Nht+Kw2LJaz0G64n4DNZ4frarQxosOl7NUoexjI0X3jqz
nWX1q9tHaEDU2Pzy7qk6yd4wh4GIMjZKl+lj0yY+YzNRE8BouiyKnWggx4ZY
uvXKFhY25KZPFPlCcxotc+IcljrYzXbxGZZJ2rA49ZIp5tR0U6oUsT98eQNj
DtY/rp4OWbpxcgePiS5LppzG0PoPTKf4DMxkOTCxFI8pGEwxjEo3TYqUdqlJ
iv7GUekan1GZUjsN4wzeKAGabBiYzg7TXmsR8sEHr1+AS8cPQubcGWo8xGeV
Jl0bjB7xGYupNWoUc2oyyTAQHRy6RMlN2FbHkhtfhA1q0bSxHA2zAeodnyGZ
VqM2MecME+WQ/NMXV9nDoSF5hofEaxMaVCNOi2ySl3pY5P7xGZDpMbRIDSm9
kByTf7x3hS0yjUlrgytcg7z8DWNiSiX8AGMyo3Y6xKRcg4YxebyeopOmKVca
GFKuMVwUpU9oYIbGZ2Bm1UKhOGME0qwBw6g8WnfpSYthbWIMCFmbkfEZkJdq
oU5MGtZvGJDmBk9WiU4sTzbWqNRgg8fEZ1Rm16hTzC6+zzAqjWvpwxoSxGSA
HYMRzQBPiM9AzImtSJrE9uo9huFIrYX7agoF0wxOSb+e3Ws0w5PjMzBzYyiS
JrHzNm7DqCTVMwhMq6dzMi0+ozJPGxWzNgmZjA4NiG04gnWXmbT6G+FZ8RmM
+XIwoiuRIHvxjryKPhDeKIa3JmEZUn/Dmx6fwVjAzzUokqQIpXqiLJfHgvKU
VNGpy0cMW0uiEW0MamFrF8RnDBZp0mHWGUGb6041JXSAwcYV0xX9UeAfUn+/
IiM+97o4hiZo4tgcitogphs5JIY5jHVry+Jzaxk1yrUPp3AlM7xh1QLjbZgt
WESmfGV87mBJbGFsLOdn68Z8vgm8AQxU6md+c+JzB5kxRKmR/PhrshdaH79/
Pe3k6vh8/GWGj6+ko6H8+PnL062P39uhy+qQ6y2Mzx0sl3egd6xXQtDAcAfd
66+NN8bnDrI0IdDvQApBiuEmutT/JoricxMrtJtQB6JospBsuImOBltRy5so
js9NrIohDUmGO2hXy/ykpkhL4/PJs2NIQaLhk7eppxYti8/Hz4ktAiHDHTxR
zzuoiM8d5MbmP2i4g0flHSghNt2BSZFWxecO8mPAHzB8/Ob110GH43MHq2MI
gY/vwAtf3vsIZr84gt07/OSN638Tx+NzEwWxRcEjZ+LTD9+FF8cOJBcVzVy9
b+JUfG5ijXYTBmlwG24i2SHPVH8rbyBaqum1+Hx44aiETIJAn9v2qUP11ELn
4vPR1/Fz0CQB+sf21fNTX4rPp17Pz8kRyA8eNADGD+/DYRh+4Dp/3Kvx+bgb
5CA74aYmSf26d1AfzanC9dzG9fh8sk3yNY3cmHHprfh8DPGa0MP05/Q/+VZ8
/iQ/x2kN68dr/3jtH6/947V/vPaP1/7//tpRy/P/37hi1N/58WI/XqyeF/PL
b+kn+LSVngLiFbD+lf9wL7j+0/8FK9cfIA==\
\>"]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztlkGKVDEURYNOHLoFd+FIcOi0JQvoxrJxUkK1IO7aHXxLgiBUvVTy6v68
n885UE13uMm7CYfufvf0/eHrq5TSy5vzl4fHnx9Pp8dfn9+ef8jHl2/Px8OX
T8cfh+fD6f3T6/Pih/Pn9/nz9/sFAAAAYH3SDFB7JDN2Tv9qR7doYh9iTFo7
uk4r/7e99Vs8DKuetnY5Leu4s3Zjn67T2t+hpUxlsfHAm4u+vfi84HM1ic9C
8NkxxTfUSuKzEHx2TPENtZL4LASfHVN8Q60kPgvBZ8cU31ArmSah97IhWPW0
tctp+Hw1uZ6BWnovG4JVT1u7nIbPV5NXy1QWGw+8uejbi88LPleT+CwEnx1T
fEOtJD4LwWfHFN9QK4nPQnbp88aZsXPC54vT8LkwY+eEzxenDfO5cbt7ivut
ribvWRy/F58XfK4m8VkIPjumuN8Kn9cGnx1T3G+Fz2uDz44p7rfC57XBZ8cU
91tVbNk+vZcNwaqnrV1OU4h8w7TGQV2xxtu1v8PVxe3Te9kQrHra2uU0hcg3
TGsc1BVrvF37OwgXx+/F5wWfq0l8FoLPjinut8LntcFnxxT3W+Hz2uCzY4r7
rfB5bepibJx91I6u00pdmI1g1Yt7tg72UTu6Tit1YTaCVa+sK/416Pj73ntg
+3W2ELOS9yyO34vPGZ+rSXwWgs/DYlYSn4Xg87CYlcRnIfg8LGYl0yT0XjYE
q15Z1+qnOi3jcwS9lw3BqlfWtfqpTst79Nm3OH4vPmd8ribxWQg+D4tZSXwW
gs/DYlYSn4Xg87CYlcRnIbv0eePM2Dnh84V+qtMyPkdQF2YjWPXKulY/1WmZ
/zfi9uJzxudqEp+F4POwmJXEZyH4PCxmJfFZCD4Pi1nJNAm9lw3BqlfWtfqp
Tsv4HEHvZUOw6pV1rX6q0/IeffYtjt+Lzxmfq0l8FoLPw2JWEp+F4POwmJXE
ZyH4PCxmJWf0eeMsF0Q3amIftaPrtDJR232IMWnt6DqtXL42AAAAAABU+AOv
550j
    "], {{0, 62}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 62},
  PlotRange->{{0, 240}, {0, 62}}]], "Output",
 ImageSize->{244, 62},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->371595020]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WPT"]],"paclet:WaveletWare/ref/WPT"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WPTFull"]],"paclet:WaveletWare/ref/WPTFull"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BestBasisTree"]],"paclet:WaveletWare/ref/BestBasisTree"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FBITree"]],"paclet:WaveletWare/ref/FBITree"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WaveletTree"]],"paclet:WaveletWare/ref/WaveletTree"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["Computing and Plotting Wavelet Packet Transformations"]],
   "paclet:WaveletWare/tutorial/Computing and Plotting Wavelet Packet \
Transforms"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->53908289],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["Data Structures in the WaveletWare Package"]],
   "paclet:WaveletWare/tutorial/Data Structures in the WaveletWare Package"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->829501916],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Links"
}], "RelatedLinksSection",
 WholeCellGroupOpener->True,
 CellID->1584193535],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 "Wavelet packet transform are described in Chapter 9 of the book  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Wavelet Theory: An Elementary Approach with Applications"]],
    "http://www.wiley.com/WileyCDA/WileyTitle/productCd-0470388404.html"},
   "WebLink",
   BaseStyle->{"RelatedDemonstrations"}]]],
 ", David Ruch and Patrick Van Fleet, Wiley, 2009."
}], "RelatedDemonstrations",
 CellID->24771052]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ShowBestBasis",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:WaveletWare/guide/WaveletWare", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 8, 25, 9, 52, 29.1213084}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "WaveletWare`PlottingFunctions`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Wavelet Ware Package Symbol", "language" -> "en", "paclet" -> 
    "WaveletWare Package", "status" -> "None", "summary" -> 
    "ShowBestBasis[tree,opts] gives a graphical representation of the best \
basis generated by BestBasisTree.", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "ShowBestBasis", "titlemodifier" -> "", "windowtitle" -> 
    "ShowBestBasis", "type" -> "Symbol", "uri" -> 
    "WaveletWare/ref/ShowBestBasis"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[11991, 342, 388, 15, 30, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->146040506]},
 "RasterizedOutput"->{
  Cell[70116, 1399, 1301, 29, 103, "Output",
   CellTags->"RasterizedOutput",
   CellID->70663134],
  Cell[72645, 1484, 1264, 29, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->1664002],
  Cell[128316, 2464, 1302, 29, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->291060131],
  Cell[130543, 2530, 1298, 29, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->490461546],
  Cell[298197, 5348, 2103, 42, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->222674368],
  Cell[301266, 5432, 2293, 45, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->56031334],
  Cell[304649, 5525, 1302, 29, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->111910894],
  Cell[305954, 5556, 2547, 50, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->233272664],
  Cell[310224, 5669, 18037, 304, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->205571922],
  Cell[328264, 5975, 20375, 342, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->563219900],
  Cell[574911, 10046, 1567, 34, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->371595020]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 581970, 10265},
 {"RasterizedOutput", 582114, 10269}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[585, 21, 4222, 102, 48, "AnchorBarGrid",
 CellID->1],
Cell[4810, 125, 290, 11, 44, "ObjectNameGrid"],
Cell[CellGroupData[{
Cell[5125, 140, 535, 16, 82, "Usage"],
Cell[CellGroupData[{
Cell[5685, 160, 738, 24, 31, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->150541162],
Cell[6426, 186, 31, 0, 70, "SectionHeaderSpacer"],
Cell[6460, 188, 53, 0, 70, "Notes"],
Cell[6516, 190, 5154, 135, 70, "3ColumnTableMod"],
Cell[11673, 327, 235, 7, 70, "Notes",
 CellID->293869076],
Cell[11911, 336, 31, 0, 70, "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11991, 342, 388, 15, 30, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->146040506],
Cell[CellGroupData[{
Cell[12404, 361, 195, 6, 25, "ExampleSection",
 CellID->118678629],
Cell[12602, 369, 65, 1, 31, "MathCaption",
 CellID->16454449],
Cell[12670, 372, 126, 4, 42, "Input",
 InitializationCell->True,
 CellID->861618089],
Cell[12799, 378, 118, 3, 33, "ExampleText",
 CellID->119048367],
Cell[CellGroupData[{
Cell[12942, 385, 508, 15, 43, "Input",
 CellID->666294323],
Cell[13453, 402, 2221, 45, 146, "Output",
 CellID->472063459]
}, Open  ]],
Cell[CellGroupData[{
Cell[15711, 452, 125, 3, 8, "ExampleDelimiter",
 CellID->577038930],
Cell[15839, 457, 118, 3, 33, "ExampleText",
 CellID->140821551],
Cell[CellGroupData[{
Cell[15982, 464, 860, 26, 43, "Input",
 CellID->487720912],
Cell[16845, 492, 52818, 884, 348, 8185, 149, "CachedBoxData", "BoxData", \
"Output",
 CellID->524918352]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69712, 1382, 125, 3, 70, "ExampleDelimiter",
 CellID->296147640],
Cell[69840, 1387, 101, 2, 70, "ExampleText",
 CellID->37007167],
Cell[CellGroupData[{
Cell[69966, 1393, 147, 4, 26, "Input",
 CellID->445641884],
Cell[70116, 1399, 1301, 29, 103, "Output",
 CellTags->"RasterizedOutput",
 CellID->70663134]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71478, 1435, 169, 5, 70, "ExampleSection"],
Cell[CellGroupData[{
Cell[71672, 1444, 174, 5, 70, "ExampleSubsection"],
Cell[71849, 1451, 556, 21, 70, "ExampleText",
 CellID->241937436],
Cell[CellGroupData[{
Cell[72430, 1476, 212, 6, 70, "Input",
 CellID->424650288],
Cell[72645, 1484, 1264, 29, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->1664002]
}, Open  ]],
Cell[CellGroupData[{
Cell[73946, 1518, 126, 3, 70, "ExampleDelimiter",
 CellID->1016434212],
Cell[74075, 1523, 286, 8, 70, "ExampleText",
 CellID->500535531],
Cell[CellGroupData[{
Cell[74386, 1535, 908, 27, 70, "Input",
 CellID->445512537],
Cell[75297, 1564, 51973, 855, 348, 6665, 109, "CachedBoxData", "BoxData", \
"Output",
 CellID->661248713]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[127331, 2426, 175, 5, 70, "ExampleSubsection"],
Cell[127509, 2433, 480, 17, 70, "ExampleText",
 CellID->663898582],
Cell[CellGroupData[{
Cell[128014, 2454, 299, 8, 70, "Input",
 CellID->61090499],
Cell[128316, 2464, 1302, 29, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->291060131]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[129667, 2499, 180, 5, 70, "ExampleSubsection"],
Cell[129850, 2506, 312, 9, 70, "ExampleText",
 CellID->236082919],
Cell[CellGroupData[{
Cell[130187, 2519, 353, 9, 70, "Input",
 CellID->22929764],
Cell[130543, 2530, 1298, 29, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->490461546]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[131890, 2565, 172, 5, 70, "ExampleSubsection"],
Cell[132065, 2572, 719, 25, 70, "ExampleText",
 CellID->461822369],
Cell[CellGroupData[{
Cell[132809, 2601, 328, 9, 70, "Input",
 CellID->817396744],
Cell[133140, 2612, 80829, 1320, 348, 24980, 401, "CachedBoxData", "BoxData", \
"Output",
 CellID->121906110]
}, Open  ]],
Cell[CellGroupData[{
Cell[214006, 3937, 125, 3, 70, "ExampleDelimiter",
 CellID->431711776],
Cell[214134, 3942, 93, 1, 70, "ExampleText",
 CellID->231255239],
Cell[CellGroupData[{
Cell[214252, 3947, 383, 11, 70, "Input",
 CellID->116528545],
Cell[214638, 3960, 82815, 1353, 348, 25173, 405, "CachedBoxData", "BoxData", \
"Output",
 CellID->110351329]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[297514, 5320, 176, 5, 70, "ExampleSubsection"],
Cell[297693, 5327, 221, 7, 70, "ExampleText",
 CellID->635982090],
Cell[CellGroupData[{
Cell[297939, 5338, 255, 8, 70, "Input",
 CellID->165036999],
Cell[298197, 5348, 2103, 42, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->222674368]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[300349, 5396, 177, 5, 70, "ExampleSubsection"],
Cell[300529, 5403, 339, 13, 70, "ExampleText",
 CellID->143142519],
Cell[CellGroupData[{
Cell[300893, 5420, 370, 10, 70, "Input",
 CellID->461466800],
Cell[301266, 5432, 2293, 45, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->56031334]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[303608, 5483, 176, 5, 70, "ExampleSubsection"],
Cell[303787, 5490, 516, 21, 70, "ExampleText",
 CellID->424863658],
Cell[CellGroupData[{
Cell[304328, 5515, 318, 8, 70, "Input",
 CellID->211279798],
Cell[304649, 5525, 1302, 29, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->111910894],
Cell[305954, 5556, 2547, 50, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->233272664]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[308550, 5612, 176, 5, 70, "ExampleSubsection"],
Cell[308729, 5619, 900, 29, 70, "ExampleText",
 CellID->9786578],
Cell[CellGroupData[{
Cell[309654, 5652, 567, 15, 70, "Input",
 CellID->316704057],
Cell[310224, 5669, 18037, 304, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->205571922],
Cell[328264, 5975, 20375, 342, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->563219900]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[348688, 6323, 177, 5, 70, "ExampleSubsection"],
Cell[348868, 6330, 907, 29, 70, "ExampleText",
 CellID->529316873],
Cell[CellGroupData[{
Cell[349800, 6363, 774, 19, 70, "Input",
 CellID->104738706],
Cell[350577, 6384, 79537, 1282, 348, 23928, 367, "CachedBoxData", "BoxData", \
"Output",
 CellID->486150933],
Cell[430117, 7668, 61391, 985, 348, 23928, 367, "CachedBoxData", "BoxData", \
"Output",
 CellID->84952644]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[491557, 8659, 173, 5, 70, "ExampleSubsection"],
Cell[491733, 8666, 617, 18, 70, "ExampleText",
 CellID->238949960],
Cell[CellGroupData[{
Cell[492375, 8688, 521, 14, 70, "Input",
 CellID->141394590],
Cell[492899, 8704, 82009, 1340, 348, 25298, 407, "CachedBoxData", "BoxData", \
"Output",
 CellID->158898566],
Cell[574911, 10046, 1567, 34, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->371595020]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[576517, 10085, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[576585, 10090, 270, 12, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[576858, 10104, 1482, 43, 70, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[578377, 10152, 272, 12, 70, "TutorialsSection",
 CellID->250839057],
Cell[578652, 10166, 31, 0, 70, "SectionHeaderSpacer"],
Cell[578686, 10168, 264, 7, 70, "Tutorials",
 CellID->53908289],
Cell[578953, 10177, 246, 6, 70, "Tutorials",
 CellID->829501916],
Cell[579202, 10185, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579270, 10190, 280, 12, 70, "RelatedLinksSection",
 CellID->1584193535],
Cell[579553, 10204, 31, 0, 70, "SectionHeaderSpacer"],
Cell[579587, 10206, 430, 10, 70, "RelatedDemonstrations",
 CellID->24771052]
}, Open  ]],
Cell[580032, 10219, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

