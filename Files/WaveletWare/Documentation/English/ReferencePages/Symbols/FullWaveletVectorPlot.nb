(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    370528,       8451]
NotebookOptionsPosition[    355293,       7959]
NotebookOutlinePosition[    359759,       8083]
CellTagsIndexPosition[    359635,       8077]
WindowTitle->FullWaveletVectorPlot
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["WAVELET WARE PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"Computing and Plotting Wavelet Packet \
Transformations\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/tutorial/Computing and Plotting Wavelet Packet \
Transforms"], "\<\"Computing and Plotting Wavelet Transformations\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/tutorial/Computing and Plotting Wavelet \
Transformations"], "\<\"Data Structures in the WaveletWare Package\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/tutorial/Data Structures in the WaveletWare \
Package"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WTFull\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/WTFull"], "\<\"WPTFull\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/WPTFull"], "\<\"WaveletVectorPlot\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/WaveletVectorPlot"], \
"\<\"WaveletRegionPlot\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/WaveletRegionPlot"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"List of Options and Values\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Options and Values"], "\<\"List of \
Functions - Categorical\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Categorical"], "\<\"List \
of Functions - Alphabetical\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Alphabetical"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"WaveletWare/ref/FullWaveletVectorPlot\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WaveletWare/ref/FullWaveletVectorPlot"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/WaveletWare/ref/\
FullWaveletVectorPlot.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$47294], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "WaveletWare/ref/FullWaveletVectorPlot", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["FullWaveletVectorPlot", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     "FullWaveletVectorPlot[data,opts]",
     "\[LineSeparator]creates a list of plots of the data generated by ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WTFull"]],"paclet:WaveletWare/ref/WTFull"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " ",
     "or",
     " ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WPTFull"]],"paclet:WaveletWare/ref/WPTFull"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6]]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->38043759],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PacketPlot",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/PacketPlot"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PacketPlot"]],"paclet:WaveletWare/ref/PacketPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["FullWaveletVectorPlot"]],
        "paclet:WaveletWare/ref/FullWaveletVectorPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["FullWaveletPlot"]],
        "paclet:WaveletWare/ref/FullWaveletPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " that indicates whether or not the input data was generated by a \
wavelet packet transform."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Iteration",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/Iteration"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Iteration"]],"paclet:WaveletWare/ref/Iteration"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletPlot"]],"paclet:WaveletWare/ref/WaveletPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletVectorPlot"]],
        "paclet:WaveletWare/ref/WaveletVectorPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["FullWaveletPlot"]],
        "paclet:WaveletWare/ref/FullWaveletPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     ", ",
     StyleBox["FullWaveletVectorPlot",
      FontSize->11],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletVectorPlay"]],
        "paclet:WaveletWare/ref/WaveletVectorPlay"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " that can be used to designate as output a particular region of the \
input data."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["DivideLines",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/DivideLines"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DivideLines"]],"paclet:WaveletWare/ref/DivideLines"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletPlot"]],"paclet:WaveletWare/ref/WaveletPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["FullWaveletPlot"]],
        "paclet:WaveletWare/ref/FullWaveletPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletVectorPlot"]],
        "paclet:WaveletWare/ref/WaveletVectorPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " and ",
     StyleBox["FullWaveletVectorPlot",
      FontSize->11],
     " that indicates whether or not different portions of the transform \
should be separated by dividing lines."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["DivideLinesColor",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/DivideLinesColor"], 
    RowBox[{"GrayLevel", "[", "0.5", "]"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DivideLinesColor"]],
        "paclet:WaveletWare/ref/DivideLinesColor"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletPlot"]],"paclet:WaveletWare/ref/WaveletPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["FullWaveletPlot"]],
        "paclet:WaveletWare/ref/FullWaveletPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletVectorPlot"]],
        "paclet:WaveletWare/ref/WaveletVectorPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " and ",
     StyleBox["FullWaveletVectorPlot",
      FontSize->11],
     " that indicates the color of divide lines."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Colors",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/Colors"], 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0, 1, 0.72], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0., 1., 0.48],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0, 1, 0.72]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 1, 0.72]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0, 1, 0.72],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.06, 1, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.06, 1., 0.6000000000000001],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.06, 1, 0.9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 1, 0.9]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.06, 1, 0.9],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.17, 1, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.17, 1., 0.2666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.17, 1, 0.4]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.17, 1, 0.4]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.17, 1, 0.4],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.11, 1, 0.72], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.11, 1., 0.48],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.11, 1, 0.72]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.11, 1, 0.72]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.11, 1, 0.72],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.06, 1, 0.72], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.060000000000000005`, 1., 0.48],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.06, 1, 0.72]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 1, 0.72]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.06, 1, 0.72],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.12, 1, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.12, 1., 0.6000000000000001],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.12, 1, 0.9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.12, 1, 0.9]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.12, 1, 0.9],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.5, 0.5, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.5, 0.5, 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.5, 0.5, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.5, 0.5, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.5, 0.5, 0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.17, 1, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.17, 1., 0.4],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.17, 1, 0.6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.17, 1, 0.6]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.17, 1, 0.6],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0., 0.6, 0.4],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0, 0.6, 0.6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.6, 0.6]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0, 0.6, 0.6],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.08, 1, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.07999999999999999, 1., 0.5333333333333334],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.08, 1, 0.8]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 0.8]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.08, 1, 0.8],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.11, 0.38, 0.64], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.11000000000000004`, 0.38, 0.4266666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.11, 0.38, 0.64]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            Hue[0.11, 0.38, 0.64]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.11, 0.38, 0.64],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.08, 0.29, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.08, 0.2900000000000001, 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.08, 0.29, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 0.29, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.08, 0.29, 0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.08, 0.25, 0.64], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->Hue[
           0.07999999999999993, 0.25000000000000006`, 0.4266666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.08, 0.25, 0.64]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            Hue[0.08, 0.25, 0.64]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.08, 0.25, 0.64],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.08, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.07999999999999999, 0.6, 0.4],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.08, 0.6, 0.6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 0.6, 0.6]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.08, 0.6, 0.6],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.11, 0.33, 0.72], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.11000000000000004`, 0.32999999999999996`, 0.48],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.11, 0.33, 0.72]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            Hue[0.11, 0.33, 0.72]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.11, 0.33, 0.72],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.11, 0.43, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.10999999999999999`, 0.43, 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.11, 0.43, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.11, 0.43, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.11, 0.43, 0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.13, 0.44, 0.72], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.13000000000000003`, 0.4399999999999999, 0.48],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.13, 0.44, 0.72]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            Hue[0.13, 0.44, 0.72]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.13, 0.44, 0.72],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.08, 0.5, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.08000000000000003, 0.5, 0.4],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.08, 0.5, 0.6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 0.5, 0.6]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.08, 0.5, 0.6],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.06, 0.25, 0.7], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->Hue[
           0.06000000000000003, 0.25000000000000006`, 0.4666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.06, 0.25, 0.7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 0.25, 0.7]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.06, 0.25, 0.7],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.11, 0.7, 0.55], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.11, 0.7, 0.3666666666666667],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.11, 0.7, 0.55]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.11, 0.7, 0.55]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.11, 0.7, 0.55],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.11, 0.38, 0.64], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.11000000000000004`, 0.38, 0.4266666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.11, 0.38, 0.64]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            Hue[0.11, 0.38, 0.64]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.11, 0.38, 0.64],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.08, 0.29, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.08, 0.2900000000000001, 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.08, 0.29, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 0.29, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.08, 0.29, 0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.08, 0.25, 0.64], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->Hue[
           0.07999999999999993, 0.25000000000000006`, 0.4266666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.08, 0.25, 0.64]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            Hue[0.08, 0.25, 0.64]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.08, 0.25, 0.64],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.08, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.07999999999999999, 0.6, 0.4],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.08, 0.6, 0.6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 0.6, 0.6]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.08, 0.6, 0.6],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.11, 0.33, 0.72], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.11000000000000004`, 0.32999999999999996`, 0.48],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.11, 0.33, 0.72]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            Hue[0.11, 0.33, 0.72]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.11, 0.33, 0.72],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.11, 0.43, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.10999999999999999`, 0.43, 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.11, 0.43, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.11, 0.43, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.11, 0.43, 0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.13, 0.44, 0.72], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.13000000000000003`, 0.4399999999999999, 0.48],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.13, 0.44, 0.72]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            Hue[0.13, 0.44, 0.72]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.13, 0.44, 0.72],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.08, 0.5, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.08000000000000003, 0.5, 0.4],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.08, 0.5, 0.6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 0.5, 0.6]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.08, 0.5, 0.6],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.06, 0.25, 0.7], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->Hue[
           0.06000000000000003, 0.25000000000000006`, 0.4666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.06, 0.25, 0.7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 0.25, 0.7]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.06, 0.25, 0.7],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {Hue[0.11, 0.7, 0.55], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->Hue[0.11, 0.7, 0.3666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "Hue[0.11, 0.7, 0.55]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.11, 0.7, 0.55]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["HueColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       Hue[0.11, 0.7, 0.55],
       Editable->False,
       Selectable->False]}], "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Colors"]],"paclet:WaveletWare/ref/Colors"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletRegionPlot"]],
        "paclet:WaveletWare/ref/WaveletRegionPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletVectorPlot"]],
        "paclet:WaveletWare/ref/WaveletVectorPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " and ",
     StyleBox["FullWaveletVectorPlot",
      FontSize->11],
     ".  It is a list of default colors for the iterations to be plotted."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
ImageSize is an option that specifies the overall size of an image to display \
for an object. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Dimming",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/Dimming"], 
    RowBox[{"GrayLevel", "[", "0.8", "]"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Dimming"]],"paclet:WaveletWare/ref/Dimming"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletPlot"]],"paclet:WaveletWare/ref/WaveletPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletVectorPlot"]],
        "paclet:WaveletWare/ref/WaveletVectorPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     ".  It sets the brightness of those portions of the transform not to be \
plotted."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Background",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Background"], 
    ButtonBox["White",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/White"], Cell["\<\
Background is an option that specifies what background color to use. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Joined",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Joined"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Joined is an option for ListPlot and related functions that specifies whether \
points in each dataset should be joined into a line, or should be plotted as \
separate points. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PointSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PointSize"], "0.01", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"PointSize", "[", 
       StyleBox["d", "TI"], "]"}]], "InlineFormula"],
     " ",
     "is a graphics directive which specifies that points which follow are to \
be shown if possible as circular regions with diameter ",
     Cell[BoxData[
      StyleBox["d", "TI"]], "InlineFormula"],
     ".",
     " The diameter ",
     Cell[BoxData[
      StyleBox["d", "TI"]], "InlineFormula"],
     " ",
     "is given as a fraction of the total width of the plot. "
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Ticks",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Ticks"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
Ticks is an option for graphics functions that specifies tick marks for axes. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PresentationStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/PresentationStyle"], 
    RowBox[{"{", "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PresentationStyle"]],
        "paclet:WaveletWare/ref/PresentationStyle"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData[
      StyleBox["FullWaveletVectorPlot",
       FontFamily->"Courier New",
       FontSize->11]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["FullWaveletPlot"]],
        "paclet:WaveletWare/ref/FullWaveletPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WaveletRegionPlot"]],
        "paclet:WaveletWare/ref/WaveletRegionPlot"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " that indicates how the plots should be displayed."
    }], "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, {None}},
    "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, True, True, True, True, True, 
      True}}}}],

Cell[TextData[{
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command that generates the list of colors for the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Colors"]],"paclet:WaveletWare/ref/Colors"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " option is \[LineSeparator]\[LineSeparator]\t\
Join[ColorData[85,\"ColorList\"],ColorData[84,\"ColorList\"],ColorData[84,\"\
ColorList\"]]"
}], "Notes",
 CellID->365985968],

Cell[TextData[{
 "The options ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["PacketPlot"]],"paclet:WaveletWare/ref/PacketPlot"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NumIterations"]],"paclet:WaveletWare/ref/NumIterations"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Iteration"]],"paclet:WaveletWare/ref/Iteration"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DivideLines"]],"paclet:WaveletWare/ref/DivideLines"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DivideLinesColor"]],"paclet:WaveletWare/ref/DivideLinesColor"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Colors"]],"paclet:WaveletWare/ref/Colors"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Dimming"]],"paclet:WaveletWare/ref/Dimming"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["PresentationStyle"]],
    "paclet:WaveletWare/ref/PresentationStyle"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " are part of the WaveletWare package.  The remaining options (",
 ButtonBox["ImageSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ImageSize"],
 ", ",
 ButtonBox["Background",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Background"],
 ", ",
 ButtonBox["Joined",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Joined"],
 ", ",
 ButtonBox["PointSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PointSize"],
 " and ",
 ButtonBox["Ticks",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Ticks"],
 ") are associated with the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function ",
 ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"],
 "."
}], "Notes",
 CellID->21739270],

Cell[TextData[{
 "The input data ",
 Cell[BoxData[
  StyleBox["v", "TI"]], "InlineFormula"],
 " should be a list of vectors created by ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WTFull"]],"paclet:WaveletWare/ref/WTFull"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WPTFull"]],"paclet:WaveletWare/ref/WPTFull"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 "."
}], "Notes",
 CellID->413061724],

Cell[TextData[{
 "The value of ",
 Cell[BoxData[
  StyleBox["iter", "TI"]], "InlineFormula"],
 " can be set to ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 " or {}.  In these cases, all or none of regions of the wavelet (packet) \
transform are plotted."
}], "Notes",
 CellID->684988011],

Cell[TextData[{
 "The elements of ",
 Cell[BoxData[
  StyleBox["iter", "TI"]], "InlineFormula"],
 " are of the form ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    StyleBox["i", "TI"], ",", 
    StyleBox["j", "TI"], 
    StyleBox[",", "TI"], 
    StyleBox["k", "TI"]}], "}"}]], "InlineFormula"],
 ", where ",
 Cell[BoxData[
  StyleBox["i", "TI"]], "InlineFormula"],
 " is the iteration level number 0,...,",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NumIterations"]],"paclet:WaveletWare/ref/NumIterations"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  StyleBox["j", "TI"]], "InlineFormula"],
 " is the iteration within ",
 Cell[BoxData[
  StyleBox["i", "TI"]], "InlineFormula"],
 ", and ",
 Cell[BoxData[
  StyleBox["j", "TI"]], "InlineFormula"],
 " is the region of iteration ",
 Cell[BoxData[
  StyleBox["i", "TI"]], "InlineFormula"],
 " to be plotted.  For example, if FullWaveletVectorPlot is called with ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NumIterations"]],"paclet:WaveletWare/ref/NumIterations"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " set to 2, then the value {{2,1,2}} for Iteration, selects the 3rd list \
from ",
 Cell[BoxData[
  StyleBox["v", "TI"]], "InlineFormula"],
 " and then the highpass part (",
 Cell[BoxData[
  StyleBox["j", "TI"]], "InlineFormula"],
 "=2) of the first iteration (",
 Cell[BoxData[
  StyleBox["i", "TI"]], "InlineFormula"],
 "=1) of that transform."
}], "Notes",
 CellID->328465098],

Cell[TextData[{
 StyleBox["FullWaveletVectorPlot",
  FontFamily->"Courier New",
  FontSize->12],
 " calls ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WaveletVectorPlot"]],
    "paclet:WaveletWare/ref/WaveletVectorPlot"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "InlineFormula"],
 " times (where ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "InlineFormula"],
 " is the length of ",
 Cell[BoxData[
  StyleBox["v", "TI"]], "InlineFormula"],
 ") times to create the requested plots."
}], "Notes",
 CellID->402927380],

Cell["", "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(22)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->526882761],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->31044308],

Cell["This loads the package:", "MathCaption",
 CellID->16454449],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->861618089],

Cell[TextData[{
 "Plot all the iterations of a wavelet transform up through ",
 Cell[BoxData[
  StyleBox["iterations", "TI"]], "InlineFormula"],
 "=3."
}], "ExampleText",
 CellID->309152431],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->348702779],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnc+uJDmVh3OGzSzZ1ZpdP8LoSkgwK2rDohFSM0ICGjoRQuqWmm4BEqOp
W09wW0hILHLJph8g1RveAOlKbGtPbeYdYiIzMn0djgiH/xyfc2z/PiVNVv6x
4/ie+MJ2RDq+8/FnHx7//XA4/O4/xv98+Ivff//zz3/xxx99e/zHjz/93W9+
/eknv3r96Ref/PqTz//z42+NL/7f+L+v/+1wuDwfAAAAAAAAAAAA4OV4PEpv
AgAACHC8Ir0VoFnenx+nHDuenu3XkXVv3ryR3oS+GFPx8fzefgVJCAryfDLS
s55eQOLBfqwtMObf8Qj7ATbGo+3pdELfbxXYj68Fpm7f8wn2A2xcjrd36V1M
OO/7dT7rAvtxtcB92LFmv4Qk/OZwWH1QbjKon5nx5rnXs/cmYD+eFniZeb6S
k4Rb3oMAwQrWZN+y77f6jX99eLAfDNsoBezH3QJ5I1+P6CBAsIo58gYmHuzX
D5Xaz/8uBAh2WZ1vsaXXvABhP/EWCLdfiNkgQBDIauI5xoP92ka8BQJPeYQ7
DfYDIfg7fluvtIT4vi+OeAsE9v2inAYBgl1C7Dc03f0T3/fFEW8B2o5f2udB
hywHHauig/0aRrwFdu2XpjIIEPhZVd+W/ZoUoPi+L454CxSyn/li6naBxgm0
39Bu90983xdHvAX8Zz1yunDo/gHD6vIaduJ5FAf7tYp4C/j7fpkGgwDBhYDl
NXbt154Axfd9ccRboFDHj6oEUD0By2v4/Qb7tYp4CxS134DZv97xLa9hnu/K
DfZrEvEW2LIfVbcN3b+e8S+vYab+YL8+EW+BrbMehNaC/QBJ368xAYrv++Jw
tYB1EJ5nob/vR1I3un/AY79As8F+7cHUApG3V6D1FewHloQPeydgv/bgb4GQ
RSbJZQUBAgen77f7edivPfjX99u9uUwJU7Vqv1bjYgD2g/04W8C+xYxheV+P
Qnt0Y5bAwv6ZpNmvJQHCfpxnPRbmu7DV9yPfgmb8sOW9ZgLkYTrmRjmNx35s
S+vDfjwt8Hw62njualRuF25DDh7LQYBRRJ3ymID9GkO8BVbtV6iu2s2w6zcI
MByd9uO8sYj4vi+OeAvw269eM4RsPwQ4x3ehqRn5BpbFZj+eGsX3fXHEW8A+
5cGw29arhfDGCekfUm+dVvYuNE2wXzkdMd9YRHzfF0e8BZZne4tWV2m/KLZH
5/lwpS2Qz/JC0wS3MNtvWSPhBojv++KItwBnx4+tFnJiNxv2c1m70DTBJAz2
878I+xEi3gLM9hsqHPqltcyuAIm2rgICLzQNoZz9tjqizuuwHyHiLeDYj6HG
6jo/yRuM7p//QlNVfb/d5VXJN0B83xdHvAWm4y/z/ljRvp/TMuj++S80hf1I
yqkX8RaY+n7MO2NF+37mccF/aXT21lWMueIl6lvlTsLu2o/8IkDxfV8c8RYQ
tJ/+3T9/O/32098C5Ujr+w1lun9+pxWa+hPf98URbwH+Ye9EFfs+Sct0Pvjd
IqHjN1HOfiEfQN+PEPEWMPZjrlf/vk91UMDgdxXYT3zfF0e8BcxZD+Z69Q/9
CLfQLsc8198CRUm43GVC0H62APMrFd/3xRFvAam+36C+80O4ebboVk3YIXr6
foHdOdiPHPEWEOn4TWje98k7Zhj8OmTaj1CAgaWRD34J9/1fHQ/jg6o0trpg
P9ra0wZTS8g3bDVYJYNfqkYLZ1RH8sh3oO7+xdqPagNgP1n7jftdgv08Sbv1
lue+mQm7QMIGRJW2K6WEDfCc+yBsT/9bhF/JZLJfztdhvwaga4Hz8XA4PDy9
C/v0EYA1iLJxBzb7eWo5Wktshdtva+ovIRyer6SVxpMJVLWcj8ez6AakoWTo
51BokxQOfqVq99tv6y3zerh80uznKS3Wfluvj4PH8a1pFLl8bL3F8xXODdj6
60Rxfgrt9TnI2m/QN/NfTggKL/zjt1/53iuokpykqt1+egRYdGO0/epNsOUz
E49q6i+qHKqpv3K/Vq4Lqnk/2I8KBvspGfzKtjzsh3O+GuynRICy2zDBIAQ9
g19x++UknqD98q95hv0mNNiPZAOurNzA677C28vSbstX0nbDsTJTREgtITib
8RKPdWsekops7iV89NWrQ7FaZivLs9S4g4a+X8IIVKf9KqUp+y1v4DX+37T3
eJ6k2e+6c94KCKtlF3czUsOJ4/rFr8d6P3h9/Ohhp/C0Wm4is4IpXWMApPZL
POymGWw67E7fTTtq7NqP97DrK7PMYfdW2tgCJDWqsJ/FdAMvq3t2a4TlKxNx
9ptKeT5NRYXX4sex3yWE031t4msZVBWtxDLWPrro9QcFanl/Pj/bd1SbSrtG
+sHb4+vV8gni2oPEfjd3pR6nUux3P+xevvuT18df7h0+tjd+036Mh93QYx/d
Ydcu7c0fPqOo8d3TU9rlfmXsd//zWTcxvD1dvjIR0/27l27ZL7AWP84G2Pfi
MTInqWgloMsw9OHr6waUqWVmv/HZNdhXW+XTxOVlOqrklLDqrqjDbrT95ofd
f/70o//56avdWlY322M/5sOuvbcyHHbt0v70xW/za3z3dEzs+RU46+FII6rv
F2I/a5Bz6x+T/NWWGzDb7a8JXyIJzV1/vnn18OXx9elqvwI9sVkSfvnwaur7
bZWvv+83rLor8rAbaT/3sDva788/OezWsrXZW/bjPuze/9I8h1376Wi/3Bov
P3EL/oXbAlL1LW7gFdOXTpj6I5z3W6nd2u9vf4kCAxDbM2+v9iszC2fl0ljI
1M8cx9qFhjwBkNsv4bAbZb/lYTen7zds24/5sGueMRx2S/T9lIx879OVs+nn
8FnN6HMfxn4Us7WrVZuEJ6xowcte9faDWwuUqeUll06v98vfrPH6g/Lg31Wu
nI+YIB35phx20y85vide2rzfrv34D7umT1v8sJsz77edeOezvP0yEf/Jg/g1
hzybkVvLu6eH8MHGcgL/DmHfL+2wm37JirHfh4e//yz6OLVvP/bDrvm7lD7s
Puec891OPG3nfNPo8AdfDhXY73oMTlhTw5nHobJf5kV3zBtgfwXX+0W2wGbi
Vf1bD4Psb76YK12ldAtkln89/CbNMi9mcUiyTtZ+CYXYn4f9wlvAn3h79vNN
vwRuAA/8IlIy7DVotp+f2XkBK83s8xEG88GcGmG/qmH6rUfJ6Rda+F2kSn1D
4RZgD3ZxPuKObN+PapUV2C8H/l+6kU+/0AL7lWsB/rZdPR8xocF+/BsA+9lw
26/M9AstnHuotmHvRDP280Ay4ZzchaO1X+wqMdNz2K+E/finX2jh3En12MCm
UAuoCpYq5WTtF1WUo0rYj6wFds7GlZ1+IYdnP1XVF3Ig3zBtwXZrP/NP2I+n
BUpPv5BTx3W/JSHfNm2RCtqP6pRH7AbAfg7iLQD7Fa0iGdoWUOh5qvmWZPvl
Vx1bGuznIN4COu3HgEIhODRvP5JylNgvpEDYz0G8BbSd8mBDoRAcCLdQYaSC
WUdrv8ACl5IU3/fFEW+BPtU3qBTCEpKN1OB5a0WRG4KHXUH72a+I7/viiLdA
n/bTIIQQSLZTPtLn03GxZkeffT/7FfF9XxzxFoD9NJO/nfKRzleDN8h2/GA/
DYi3QM/2k96KIHL0Ja++xWrwhmaGvUOAUVc/IL7viyPeAh2e9VDghDhqsd/y
R0bL1eDNh6V+ZFTCfrvFrr4rvu+LI94CvalvqNZ+sRusK8ym+367xcJ+q4i3
QLf2k96KOBJUBvutUtR+WyXDfquIt4Ba+/Wwzkk4sZutP0ypKRd++229Jb7v
iyPeArBfLURtuf4wBdVXwn7Dtle3Xhff98URb4Guznrod4IHs/G7219FmC11
/OzCl+XDflswt8DqJfecGyBLFVrwECLAWmLsxH6e3ibsx9oCyi6556cKLfjx
CzC8fygO4aAjeZUVcrbst/ph2I+vBZRdcs9PLVrYZVVx9otVxEiYeNrsZ6rw
TzPCflwtoO6Se34qMsMujuuqU9/Q4sh3gP0iKdECVVxyz09FZgihFu+95N7i
dlrMWVf0hO+ylt3qYD/uFui176fZDy2j6UbSDOqzK4L9doH9eID6RLjcPPp0
2ur7MW8Mm/0C64L9xFtArf0IfYWOnxT2TVQvJuyj7xeI+L4vjngLwH6AitUJ
5xfjzccd/BPOsJ82xFtA7SkPKmVBfZJYk32yfT+eUx5RiO/74oi3gE71TcB+
DWA6hOUmnNOWVhZHfN8XR7wF9NsvU1xQn06Yf+sB+ylEvAXath86fmpB3098
3xdHvAU022+o/q4WYBNy+8XeVkMc8X1fHPEWUHvWwwD7NQlt1iUsLC+O+L4v
jngLKFff0MZdLcAC2sMu7Fcj4i2g335DA3e1AAtK9P2iFpYXR3zfF0e8BZq0
H9SnH/LEg/2qQ7wFqrDfECM05Wue9MbzafVyP2770dZFgvi+L454C+g/6zER
7jSoTxGj+ybtmSd3yBMv9rYa4ojv++KwtYBnmTWeDcgnRIBQny7MjWSc9a2K
9f3Cb6shDuzH1AKallnLwS9AjHk1Mg193YFvkcSLuq2GOLAfTwuoWmYtkzbu
atEk64uKT/n28uxGiTVeohaWFwf242kBVcus5dPAXS06wbqDqjv0Ldf3g/1q
ge2+HnqWWSMB3quErfnmUofd8NtqiAP78c/7NdD3Aw1QLvFgv1rgP+fb5309
gDZqHHHQAvuJt0DnGQikQOKJ7/viiLcAkhCIgMQT3/fFEW8BDECACEg88X1f
HPEW6DwDgRRIPPF9Xxy0AOgT2A/7PloAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAqAU/fgEiIPHAIL3WvWASdpv/SgLPTLnMKJB4/CgMXPbn50hC
fpQEDvv1hsLAYb/eUBJ45ogD9qsOhYHDfr2hJHD0/XpDYeB2En7zX4fpwVY7
kpAfJYGPiffX7353eiR8HfarDoWBm7MeRn2wX9uUD3x2K/PxH2t3F4T9ukNh
4KbvB/t1QtnAb7K722/856Q98+SOOezCfp2gMPBV+7EJEEnIT8nA35/Pz9e7
Sd/sNz67O2/WIRzQ9+sPhYE79rOfMIAk5Kd84DP73ZVnPb0C+/WGwsBhv95g
tp+n72dGvgkChP2qQ2HgzimPAfZrHU77+ef9TN8P9usBhYFPfT/beLBf27Da
L+Ccb1odsF91KAx8y348AkQS8qMkcPT9ekNh4Ev7Lf9ZDiQhP0oCtyf9YL8e
UBi4Pe9nXoT9GkZJ4OZKP9ivEwQDv0+/uDMw6Pv1hpLAYb/ekAvcuvRgDuzX
G0oCz1xYEvarDrnAn0+Pj4/H2Y+QJmC/3lASOPp+vSEW+GXcu7z8/sJy0m+A
/ZpGSeCwX2+oCHzsBlpj4NUBCOzXMEoCx+qmvSHY9zPGQ99PvGpZlASOvl9v
aDjn65z8WLXfwCVAJCE/SgKH/XpDYeCwX28wB+6/1CoZ2K86FAZOaL+En8gh
CfnhDdx3qdXuGi+et2C/6lAY+NZlV7EeS1sZFUnID2/gvkutdke+sF9LKAyc
qu8H+9UCa+DeS612v+35FTDsVx0KA4f9ekPDhQdDwG89/CvAwH7VoTDwEvYL
/yKSkB/mvp/nUiujtVXFwX6NoTDwyX7L16MktlwaOvDrSEJ+pM75Li+1gv26
QmHgJGc9VhdHhf10oiTw3Xk/2K8xFAZO2PdL+CKSkB8lgdvHXPT9ekBh4H77
BXoMfb+KUBJ41Mh3+S7sVx0KA9+y3xDTi4P9KkJJ4Lb9VoH9GkNh4EXtt/t1
JCE/SgLHFS+9oTBwTwam2W+I6f4hCflREvjuyNcP7FcdCgPP7/stRQf7aUZJ
4LjipTcUBk5lv+UrsJ9OlAS+u7op1bzfPz4+jI/kr5OjpP35URg47NcbSgIP
X+EK9msDhYHnz/vBfnWhJHA76zwj39V30xZEtUHi8aMwcPT9ekNJ4LBfbygM
vEn7/etvh/HBU/U3fzyMD5KieCpSkoS7V7zYLHXnRLE6vPUA+/GjMHBP+pW2
X0j5IR6bsAMpZL/VtoL90gg55WE/Z7bfX/56GB8hRdmBhHyLKvG+979vxkds
UQlQVaQk8Ww8SbjVLQy5/aVjv9VaRkGNr0+mch5bryd8xVPU5JPl4xJ4zOue
R2xRniqoisq8oQYVnpGvs9y9eW6+Mrku5DF+Zev1yVTOY+t1z1sJRU0+WT7G
r0S97nnEFuWpgqooJYk3WOMO0DNIPCCCP0nOx8PI8cyRjZ53QwanIX2/5MLT
4Jz3qw4lgfsTL3bkGwvhyDf2W1Tt3/zI9/z09C6/Vi+Z9tv6QMjUH+28Xyw4
6yHL0XvOd3Xka1P6er80+4UA+wXy7nyG/WA/2oqqsJ+fqM/jamcl9GO/3Xen
t5CE/CgJPGT+x+DoDtf71YhO+3nyEPZrDyWBh8/7Lf85YJWDCtFpP8+7MfZ7
f368m/R+A5vTf8///XKPm8evfpBuv7EmU6IpcFnF/C46Lp6qXyK534QsuZYt
QgrMqGL86sv905xyxsDJw0nASbzY3p3151tJvN0AkXj6E68m+1lx356O//fz
h6/Hd8cnU3D2k+tbKUl4ba9bY62W7DzZYLPq1UBSa9msYrfA5Cpu+WTFMC/n
zR8+Iw4nibuwfLf22GL24aS/FxJPf+LVZD+L6c6t43+//PGr67u3P6Z16Hx+
e3x9SrDfVMT9LrF2gcsq7MPQkq2qLxt/ut+F8VpATi2+KKxv01Xx/nx+tu+d
uyznT1/8ljicJPyJ5xDYMzSJtxsgEk9/4lVpP6th3/5wevfWJtb9rN9/9fME
+92LtpLQFLisYn73bJetqi9HsHkRObX4QrH6+9RVzJLQKWdMQvpw4vEnXsq8
n5V4uwEi8fQn3runp9LXOzsDEIdY+zl/Qdq+nzW/c/sDljoEWzMXmbVsBjJ9
6f6Muoo6+n7H7YtePAPh6S3nz+ckHm3fD4kXUwNh4p2PhX/vsTsACT6r+9K0
NwrN+w0vh+DS0y+3vyX19MvKH524CmtPUjzvZ/8zfN5vYb+1xCsx7zcg8UJq
IEy8d08Ph4eSP/igst/z6egcH4di53xfktAqcFmF/y8Xcuotv5a9Gl52W9Iq
nH7ErJy4U2/Xn1yWOAJTjXxXE283QCSe9sQbOH7q5k/CIeCavbSv43o/KeIC
vxx+s46/lp1mGU5lvzSQePxUd73fAPs1R2Tgl85fRt/PvkRuhnHi9M+MkW8K
SDx+dNrPL8AS9jMvIgn5CQ/82u/LnHgZx4qPj85Y68oxZt5vuegB7FcdOu3n
/wDs1xisgVvnYp1rGjDy7Q3Yz3kRSchPucBnV4Ysx7vWKYNhb+Qb80u3FJB4
/MB+zotIQn6Y+37GeP6+H+b9mken/TDv1xXMgZtzvk5ncPew6+Dc4BL2qw5B
+6VdeDDAfs2hJHBP4vlv7zsB+1WH3Mr2vgsP/N+E/RpDSeCeQUfI+V/YrzrC
A6e+q1HohQdRwH41oiTw2Hk/jHxrRyzw1AsP/ITbz/kY7CeIksCT7TcB+1UH
T+A5Fx5EEWK/5cdsHyIJ+VESuCfxMPJtEsG+X+CFB+EEqm/5SfufSEJ+lASe
fNYD9qsUwcBzLjzwz93Ffh32k0VJ4MlXvEzAftWhMHDYrzeUBJ4834K+X6Uo
DBwj395QEjhGvr2hMPDksx6wX6UoCTzNfuYt2K86FAaOvl9vlA98do+GrcV7
0+b9YL96URg4m/3Mh2E/WcoG/rxzU1dD7BUvOOtROwoDZ7Cf/WHHhEhCfkoG
vn9TVwNGvr2hMHAR+5nXkYT8lA/cd1NXA0a+vaEwcIazHgPspwmqwLd/UhTa
94tNPNivahQGjr5fb3D2/fzzflvf3/qlG+xXNQoDL/oLX+fzyxUPkIT8sNov
6Zwv7NckCgPnsd8wF6B5EUnIj5LAExIP9qsahYHz289+EUnIj5LAE1Y3hf2q
RmHgDKc87K/AfuIoCTx55Ds9h/2qQ2HgbH2/VZCE/CgJPGdZ3QH2qxCFgcN+
vaEk8JxldQfYr0IUBg779YaSwGMn/Rxgv+pQGHja+n6wX70oCXzrvh6wX6vw
Bh661MauAGG/llASuJN4gdIzwH7VwRd4zFIbu4V5bkuUCZKQHyWBY+TbG1yB
0yy1YfAs0JcJkpAfJYEvE89Zx8AP7FcdvIGTLbUB+7WE0Oqm7qwL7NcbJQJn
WGoD9msJ1tVN7dSbs0w82K9tpPp+JPN+q4szZ4Ik5IdzddPrnaQfb4fn2VF3
s+8XWBPsVx1i9su+vQLs1wzcK1wdl9MvF3DWozcUBg779Qbn6qYzxm6g9SmM
fHtDYeCx9iO83GVAEkrA3Pczxtvt+8F+baMw8MCfW24tzpwJkpAfodVN3TkX
2K83FAae1vejqh1JyI+SwGG/3lAYeJT9aIe9A5JQAiWBL0ccsF/bKAw8fI0X
2K8NlATu6fuFfB32qw6FgcN+vaEk8NXEg/0aRmHg4YtMkqtvQBJKoCTw1cSD
/RpGYeDJi+uSgCTkR0ngmYkH+1WHwsBhv95QEjjs1xsKA4f9ekNJ4IHzLVvA
ftWhMHDYrzeUBI6+X28oDDzzEJwJkpAfJYHDfr3RbeAAAAAAACCW/wcYHoFU

    "], {{0, 236}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 236},
  PlotRange->{{0, 426}, {0, 236}}]], "Output",
 ImageSize->{430, 236},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->434711]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(20)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True],

Cell[CellGroupData[{

Cell[TextData[{
 "PacketPlot",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["PacketPlot"]],"paclet:WaveletWare/ref/PacketPlot"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " can be used to indicate that the input data is from ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WTFull"]],"paclet:WaveletWare/ref/WTFull"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " (",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["PacketPlot"]],"paclet:WaveletWare/ref/PacketPlot"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " set to ",
 ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"],
 ") or ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WPTFull"]],"paclet:WaveletWare/ref/WPTFull"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " (",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["PacketPlot"]],"paclet:WaveletWare/ref/PacketPlot"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " set to ",
 ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"],
 ")."
}], "ExampleText",
 CellID->1544011],

Cell[TextData[{
 "Plot all the iterations of a wavelet packet transform up through ",
 Cell[BoxData[
  StyleBox["iterations", "TI"]], "InlineFormula"],
 "=3."
}], "ExampleText",
 CellID->285971032],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WPTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"PacketPlot", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->170541033],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
+lW87IZe++guu3Zp7757Q+Hxw+Nj2nK/MvS7//mshxje3i6PTIpJ/+6lW/QL
9OKXcwL2s3gMzEkcrVToMgx9+eP1BMp4mdFvfHet7Iut8mnq5dV0VckpYZVd
UZfdaPrNL7v/+6vP/vVXL3a9rJ62h36VL7t2b61w2bVL+/7t63yPHx6PiZlf
gbseDjSicr8Q+lmDnFt+TPJXW57ArNtfA75EEJqn/vz04uW3x1enK/0KZGKz
IPz25Ysp99sqX37uN6yyK/KyG0k/97I70u/ff3nY9bJ12lv0q33Zvf+l61x2
7bcj/XI9Xn7iFvwLt4VI0bd4gFdMLp0w9Uc477fi3er3t79EgQGIzZn3V/qV
mYWzYmksZMozx7F2oSFPgMjpl3DZjaLf8rKbk/sN2/SrfNk17ypcdkvkfkJG
vvfpytn0c/isZvS9D0M/itnaVdcm4AkdLfTcq95/cmuBMl6eY+n0ar/8TY/X
H5QH/65y5X7EJNKRb8plN33J8T3w0ub9dulX/7Jrctril92ceb/twDuf+emX
KfafPLCvOaxzGrlePjy+DB9sLCfw7yLM/dIuu+lLVgz9Pj3896+jr1P79Kt+
2TV/l9KX3aece77bgSftnm+aFP7gy1ED9LtegxP21HDmcajol7norvIJ2CZY
7xfZApuB1/RvPYx4f/NV2emqSrdAZvnXy2/SLPNiFock6njpl1CI/X3QL7wF
/IG3Rz/f9EvgCdRRfRAJGfYaSaafX7P7AlaY2fcjjMwXczyCfk2r0m89Sk6/
0Ko+i0ShbyjcAtUru7gfcRdv7ke1ywrol6P6v3Qjn36hFehXrgXqt+3q/YhJ
EuhX/wRAP1u16Vdm+oVWNXuotGHvpG7o5xHJhHNyCkdLv9hdYqb3oF8J+tWf
fqFVzU4qhwa2CrWAqMpShRwv/aKKclAJ+pG1wM7duLLTL+Sq009F5UKOyE9M
WmXV0s/8E/Sr0wKlp1/I1ca635IiPzdpNWWkH9Utj9gTAP0csbcA6FfURbJo
W0Ag56nmW5Lpl+86tjTQzxF7C8ikXwUJBIKj7ulHUo4Q+oUUCPo5Ym8Babc8
qkkgEBwRnqHAmjJGHS39AgtcQpK977OLvQV0om8QCYSlSE5SAuetHUVuYrzs
MtLPPsLe99nF3gI66ScBCCEiOU/+mj6djos9O3TmfvYR9r7PLvYWAP0kK/88
+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

    "], {{0, 236}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 236},
  PlotRange->{{0, 426}, {0, 236}}]], "Output",
 ImageSize->{430, 236},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->364842877]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Iteration",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Iteration"]],"paclet:WaveletWare/ref/Iteration"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " can be used to highlight particular regions of the plots.  The default \
value for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Iteration"]],"paclet:WaveletWare/ref/Iteration"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " is ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 " in which case all regions at all levels are plotted.  Otherwise, ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Iteration"]],"paclet:WaveletWare/ref/Iteration"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " must be an empty list {} (nothing is plotted) or a list of ordered triples \
",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    StyleBox["i", "TI"], ",", 
    StyleBox["j", "TI"], ",", 
    StyleBox["k", "TI"]}], "}"}]], "InlineFormula"],
 ".  ",
 Cell[BoxData[
  StyleBox["i", "TI"]], "InlineFormula"],
 " represents the level and within that level, ",
 Cell[BoxData[
  StyleBox["j", "TI"]], "InlineFormula"],
 " represents the iteration and ",
 Cell[BoxData[
  StyleBox["k", "TI"]], "InlineFormula"],
 " the part of the iteration to be plotted.  For wavelet transforms, unless ",
 Cell[BoxData[
  StyleBox["i", "TI"]], "InlineFormula"],
 "=",
 Cell[BoxData[
  StyleBox["j", "TI"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  StyleBox["k", "TI"]], "InlineFormula"],
 " must always be 2; when ",
 Cell[BoxData[
  StyleBox["i", "TI"]], "InlineFormula"],
 "=",
 Cell[BoxData[
  StyleBox["j", "TI"]], "InlineFormula"],
 ", the lowpass region is present so ",
 Cell[BoxData[
  StyleBox["k", "TI"]], "InlineFormula"],
 " can be set to 1."
}], "ExampleText",
 CellID->158293985],

Cell["\<\
Plot the original data and all the highpass portions of the different \
iterations of a wavelet transform.\
\>", "ExampleText",
 CellID->83205555],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"Iteration", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->135251108],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
TEr2XgP7PiMAZYL92PcZAQAAAAAAsMz/AUw2Hkg=
    "], {{0, 242}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 242},
  PlotRange->{{0, 426}, {0, 242}}]], "Output",
 ImageSize->{430, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->352410465]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->9948602],

Cell["\<\
Plot the original data and the lowpass portions of the transform at each \
level.\
\>", "ExampleText",
 CellID->337919390],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "WaveletWare`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"Iteration", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->496000244],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
STwbTxJudQtDbn/p2G/r6xuff7/G1vMJH/EURVUFYVEMgWfeUIMKz8jXWe7e
PDYf2Wqico1GWxRVFYRF9ZN4gzXuAD2DxAMi+JPkfDyMHM8c2eh5NWRwGtL3
Sy48jelY43+Pwn44D0oC9yde7Mg3FsKRb+ynMOEcyPnp6UN+rV4y7bf1hpCp
P9p5v1iQhLIcved8V0e+NqWv90PikVcUG/iH8xn2QxLSVlSF/fxEvT/NfuVQ
0v789GO/3Venl5CE/CgJPGT+x+DoDtf71YhO+3nyEPZrDyWBh8/7Lf8csMpB
hei0n+fVGPt9PD/eTXq/gc1b5++Xe9w8vs2w31iTKdEUuKxifhcdF0/VL5Hc
b0KWXMsWIQVmVDF+9OX+aU45Y+Dk4STgJF5s7876+lYSbzdAJJ7+xKvJflbc
t4eXwB4ur44PpuDsB9eXUpLw2l63xlot2XmwwWbVq4Gk1rJZxW6ByVXc8smK
YV7Ou79/SRxOEndh+W7tscXszUnfFxJPf+LVZD+L6c6t1wPZq+urty/TOnQ+
vz2+eZtgv6mI+11i7QKXVdiHoSVbVV82/nS/C+O1gJxafFFYn6ar4uP5/Gzf
O3dZzrdf/5k4nCT8iecQ2DM0ibcbIBJPf+JVaT+rYd/eXr21iXU/649J9rsX
bSWhKXBZxfzu2S5bVV+OYPMicmrxhWL196mrmCWhU86YhPThxONPvJR5Pyvx
dgNE4ulPvA9PT6Wvd3YGIA6x9nO+Qdq+nzW/c/sCSx2CrZmLzFo2A5k+dH9E
XUUdfb/j9kUvnoHw9JLz9TmJR9v3Q+LF1ECYeOdj4d977A5Ags/qvjTtjULz
fsPLIbj09Mvtu6Sefln50omrsPYkxfN+9p/h834L+60lXol5vwGJF1IDYeJ9
eHo4PJT8wQeV/Z5PR+f4OBQ75/uShFaByyr831zIqbf8WvZqeNltSatw+hGz
cuJOvV1/clniCEw18l1NvN0AkXjaE2/g+KmbPwmHgGv20j6O6/2kiAv8cvjN
Ov5adpplOJX90kDi8VPd9X4D7NcckYFfOn8ZfT/7ErkZxonTnxkj3xSQePzo
tJ9fgCXsZ55EEvITHvi135c58TKOFR8fnbHWlWPMvN9y0QPYrzp02s//Btiv
MVgDt87FOtc0YOTbG7Cf8ySSkJ9ygc+uDFmOd61TBsPeyDfml24pIPH4gf2c
J5GE/DD3/Yzx/H0/zPs1j077Yd6vK5gDN+d8nc7g7mHXwbnBJexXHYL2S7vw
YID9mkNJ4J7E89/edwL2q47YwOku9/NdeOD/JOzXGEoC9ww6Qs7/wn7VER44
9V2NQi88iAL2qxElgcfO+2HkWztigadeeOAn3H7O22A/QZQEnmy/CdivOngC
z7nwIIoQ+y3fZvsQSciPksA9iYeRb5MI9v0CLzwIJ1B9y3fafyIJ+VESePJZ
D9ivUgQDz7nwwD93F/tx2E8WJYEnX/EyAftVh8LAYb/eUBJ48nwL+n6VojBw
jHx7Q0ngGPn2hsLAk896wH6VoiTwNPuZl2C/6lAYOPp+vVE+8Nk9GrYW702b
94P96kVh4Gz2M2+G/WQpG/jzzk1dDbFXvOCsR+0oDJzBfvabHRMiCfkpGfj+
TV0NGPn2hsLARexnnkcS8lM+cN9NXQ0Y+faGwsAZznoMsJ8mqALf/klRaN8v
NvFgv6pRGDj6fr3B2ffzz/ttfX7rl26wX9UoDLzoL3yd9y9XPEAS8sNqv6Rz
vrBfkygMnMd+w1yA5kkkIT9KAk9IPNivahQGzm8/+0kkIT9KAk9Y3RT2qxqF
gTOc8rA/AvuJoyTw5JHv9Bj2qw6FgbP1/VZBEvKjJPCcZXUH2K9CFAYO+/WG
ksBzltUdYL8KURg47NcbSgKPnfRzgP2qQ2Hgaev7wX71oiTwrft6wH6twht4
6FIbuwKE/VpCSeBO4gVKzwD7VQdf4DFLbewW5rktUSZIQn6UBI6Rb29wBU6z
1IbBs0BfJkhCfpQEvkw8Zx0DP7BfdfAGTrbUBuzXEkKrm7qzLrBfb5QInGGp
DdivJVhXN7VTb84y8WC/tpHq+5HM+60uzpwJkpAfztVNr3eSfrwdnmdH3c2+
X2BNsF91iNkv+/YKsF8zcK9wdVxOv1zAWY/eUBg47NcbnKubzhi7gda7MPLt
DYWBx9qP8HKXAUkoAXPfzxhvt+8H+7WNwsADf265tThzJkhCfoRWN3XnXGC/
3lAYeFrfj6p2JCE/SgKH/XpDYeBR9qMd9g5IQgmUBL4cccB+baMw8PA1XmC/
NlASuKfvF/Jx2K86FAYO+/WGksBXEw/2axiFgYcvMkmuvgFJKIGSwFcTD/Zr
GIWBJy+uSwKSkB8lgWcmHuxXHQoDh/16Q0ngsF9vKAwc9usNJYEHzrdsAftV
h8LAYb/eUBI4+n69oTDwzENwJkhCfpQEDvv1RreBAwAAAACAWP4PkpcsiA==

    "], {{0, 236}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 236},
  PlotRange->{{0, 426}, {0, 236}}]], "Output",
 ImageSize->{430, 236},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->568566119]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->195938323],

Cell[TextData[{
 "For wavelet packet transforms, ",
 Cell[BoxData[
  StyleBox["k", "TI"]], "InlineFormula"],
 " can range from 1 to ",
 Cell[BoxData[
  SuperscriptBox["2", "j"]], "InlineFormula"],
 ".  Plot the last half of the final level of the wavelet packet transform."
}], "ExampleText",
 CellID->277028484],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WPTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"PacketPlot", "\[Rule]", "True"}], ",", 
   RowBox[{"Iteration", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->65959],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
EARBkHz9P6KHXRc=
    "], {{0, 236}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 236},
  PlotRange->{{0, 426}, {0, 236}}]], "Output",
 ImageSize->{430, 236},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->149927960]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "DivideLines",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DivideLines"]],"paclet:WaveletWare/ref/DivideLines"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " is set to ",
 ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"],
 " (",
 ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"],
 "), then divide lines are (are not) inserted at each level to distinguish \
between different portions of the transform.  Alternatively, ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DivideLines"]],"paclet:WaveletWare/ref/DivideLines"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " can be a list of values who are ",
 ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"],
 " or ",
 ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"],
 " and in this case, divide lines are only plotted at the levels where they \
are requested."
}], "ExampleText",
 CellID->171834602],

Cell["\<\
Plot the different levels of the transform with no divide lines.\
\>", "ExampleText",
 CellID->137270063],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"DivideLines", "\[Rule]", "False"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->18396288],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
2fwJTD+ugNsk0g+ZRe/3KxSGfyEFsvG7Ven7/Ug/zDL3TD8X6QdBjP2Q2UrT
z937J9iARF8cD+XP9urKY5Pp99O/D+VPnrp+/P5Q/mypIm12tnwD9+ORfvnr
ysPTCbXTL6T88BxzF0Qp/QbfK9JvLjtjv/DSzKYfUnjSb2xYeAyY/rKTfoO1
lAF1WRGuSdX5Gft9xEs8RVV50v+5LPic33t+5hblqUKqqLhBl6D09At8+eSS
Rqef+6ps72eeirZUi6d2wN9JzsdD6XiW73tjmeNp0nHkfvghLwksyvOS8mlS
DaiKqrYi+z8Rf8rzEvEGjL1pOfmbEbJxGjL2iy48Ts79fpt3fnp6kSgnZ6pj
XST6V2Sf9Pw1OsFCdv3J7vdbyub3+72czyLp10js7VJ73mZtRAse+GDPoR2k
XyLSby5T6RfxfFPpxzHfFErpN/lXzgZcC430SwlAqcvNEtPPyGFr0i+Ff9Ob
9IO1sV8hFCDR6ZfSAK4UNkVu7Dcwg+Hpz+3/v9/08vGH38enX1lTU2JTYL+K
1jSKM8u/LYgzK5lsLSEFJlTRmksjsS7b6TfQ6wKXLi6Fqr5XvTbiI5usNEPf
Cy82rSLJTqhELP36MxiW//n04X351/JBtUDug+pPEa7v0e0NGiy58yCi/P6C
yNYSUmB0Fbc+5CxDWl2m0y/hw4pJv7rvXV77pzcRH9lEpRn6XlO6Xg8s5Duh
ErH0c1QzGJb//u6jV9e/3j5JZ8z2/O745hSRflURz6eqHLfAfhXducSCazid
6tuyXwuQr6V5ff1quSo+nM/P7hySISX761La75eSgYMZ0vS6kKWL2QJ1+l75
wv9+8nHER+avNEffc5el0OiBhUYnVCKffs77+e4P1V9v74Mzr+uHHz6NSL+6
aCf9mgL7VbRnkZ1Rx7FdhEYtty/H+vOWrqLV8SZL9tf18vQke76z6JZvzel1
IUs3f+DX6ntV+kV8ZP56M/W9e2V6PbCQ7YRK/F/Ec9Ov8/HJjv2cXTy3z01r
7OfsrdCo5T7bWf1IugrZr93zUfR6D6n0a2Kk0+vCx37hNXb63r8+eVWmX/nv
yYo8zR6sRbvv3RdHtwcW0p1QxWRXDD6q25vBUGm/X3Ef+2nv97t9ftK1DHzQ
wlU4q5HALpeXp4fDw+wLPgaOR1QSN3srdYwM9bqApYs/8Fr3vct+v78+zPrI
pivV73tN4co9sJDshNdLLsWvuCzk0u95aAZDpWO+9/RzCuxXEb3ntFlv1Wrp
H9mTraIziJgu2VdX3KVuzorc+S5Pj76iTpLBXheydALp9/bwn7/M+8hCKtXv
e516lHpgIdkJL1+/Ed+/0ya7YuI5e/6LQQIbiQWlH/Xo7McRTL+U1yaedBdR
Amf6xboM/qyN/Ui/PUhNv95eHNIP4a7jPpWBXxGwE0Yj/Yi+FQlJv9ZBAWfD
xT0e0XC3VaNblZJggpeKRF8tAgsWGfuRfisSO/brHY+oCY79VpR+XONmEOkH
v7j0GzweURFJvyL5YtvMDSD6DCL94GftHi8N0g+J2O8HP4PX+Vbi8kRwC5T0
WwtnS6R1Og1jP/hJ3dm+YSH98jeA9FuOc3J3G+mHMXqzGomUEzeKE0+/kNI4
5LGo59Pj42Pn3O6rlK5I+iFC+ukujcVPupuVflKVYh7nvCvBE+/D06/zNNJv
z6TGfgXph56xU09vnItki7Qv4sAQ6zxtMA+xH4LpN5f4FijptwJO4kmN/cIT
bDD94irF6vT3OEtt9kYQTyHSbxWaY779rjj52sR9d6Tffj2f4rqcEqX085fJ
IQ+zSD9oaU9D0NhS+oWUSfSZxZYvdHSnIWiQfjAi+qgH6YdG/0BbfxqC5ski
93iJo5d+nmJJP7MY+0GXmbGf0v43f7Hs9LMsW/o1Tyb99sVY+mUumeizLEP6
uU/mZD8sdcYL6YeORdIvrkZsw1bHfv3C2ew1LsNRj4L0g2N76TdWOOlnHGM/
ZLa39FOqEelUr/DtPJ+dfigWuseL9jCsXz4DP/vypF/RDsCIGrEZi9zjJUMQ
kX6rkz/9IqrDlmzsgG+niqoWom8VMhzycF9C+u3H/XKP3g11t3GVx2AVnR/V
GpEo29gP+1Jf5tt+eLHVsV/RC0Dt6pCI9IOGy20kT6exsV/mxuSMI6JvRUg/
aHDmUpCcTCEOcYRBcff3I/3gGrzHyz3xRiZTyBaDpN/+tHa31Pd27s7zEdIJ
ST/M5vQ+xn7I6hZ2zn7nKvaaB7WIsR9HbxGiGRDq3eMlMNZIvz35cD4/u1+5
zswyneNv8ekn2mDsiOA2L9NqYEQr/Ua2Qkg/5Ca75cuN5fdsfPbe0LHf5Hcx
6QdBpB/0OcM8if1+3JwZIjTSj2k10NY56WD0mG9IWaQfpIif7sK0GohD+iEz
8TNeuLE84sxNP053QSLSD0YEboZwc2bMlbizJRzTaiBO3NhPuVFYP++BtjzD
P9IPfrPSj81ehGrOsuqeY6VypRvTaiBCeFck/TBPtenb3fBVTD9uLI9ZSD+k
G7zHy23Id390o3SPF9IPc4X3Q6IP4RIvLY/AtBqYK//thrAPY9N6qKcf95ZH
INIPmel1OaIPs5B+yCznXZ0BD/ohMqPLwQi+iJEZ/Q3APmmc7gIA9pF7APaJ
9AMAAAAAWPZ/jWWNlA==
    "], {{0, 242}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 242},
  PlotRange->{{0, 426}, {0, 242}}]], "Output",
 ImageSize->{430, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->563233705]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->190440694],

Cell["Plot the transform with various divide lines.", "ExampleText",
 CellID->591725200],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"DivideLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "True"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->571715368],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 242}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 242},
  PlotRange->{{0, 426}, {0, 242}}]], "Output",
 ImageSize->{430, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->223025344]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "DivideLinesColor",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The color of the divide lines can be controlled by ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DivideLinesColor"]],"paclet:WaveletWare/ref/DivideLinesColor"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ".  This option can be set to a single valid ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " color or a list of colors to use at each level.  Note that if ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DivideLines"]],"paclet:WaveletWare/ref/DivideLines"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " is set to ",
 ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"],
 ", then no divide lines are rendered regardless the prescribed colors."
}], "ExampleText",
 CellID->156455009],

Cell[TextData[{
 "Plot the transform with ",
 ButtonBox["Brown",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Brown"],
 " divide lines. "
}], "ExampleText",
 CellID->7190949],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"DivideLinesColor", "\[Rule]", "Brown"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->97410550],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
GHuu9HwjsEo/CDORzH4ezQqG9b+/+Omb629vW9LL2V7fHd+eIuzXFPF6asrx
C+xX0V1LrM1Y1ZfGn+6PZb8WsKaWqV54305XxYfz+dVfQ7JfzpfHXy2qK9N5
vzUOHBSXG3UhvYs5AvXGXv3F//zyk4hNNm0/ibHn96XKMQKrHIMwE+nt58Xz
3Y+b397i4K3r+uHL30TY7160Zz9XYL+K9iqyXcaq9pchcztUdC1TXfFy/NRV
tAZep5x64C2q6/3LS9rrnZMe+d7xRl1I75Ynfq2x19gvYpNN209o7D0qyzcC
q7SDMBPTf4iX2q+z+dLmft4pntt2y5X7eWcrVtYy2pHmS/dXqatI+2f3fEx6
v0cq+zl9dUZdeO4XXmNn7P3jl29q+9X/nq1osNmKY+/RnbwjsEo9CLMwOxSD
Z3V7KxhmOu9XPXK/3Of9btsv9bmXgQ2duApvN0pwyuX9y9PhafENHwPzEQ0r
D3sb7voaGnUBvYufeL2Pvct5v98/LdpkrlLFsecKzzwCq5SD8HrLZfI7Lqt0
9nsdWsEw05zvw35egf0qpjdYyLzb+lrmanjsuUmr6CQRrXIWT7fF3erWP4F/
Z736qrtJBkddSO8S2O/jw79/vWyTzdtPYux16sk0AquUg/Dy5zfi7+88s0Nx
9pq9uK9zvZ8W8tf7dc7jJLTfmu+uvOguooQQ+xXCwghckj9ruR/22yLS9uud
xcF+xY49R3gErnlflsSvCjgJk8N+7k3sJ08O+7UmBbwDF38+wuEfqy5qic8a
gyW8VSTubpFix57DSARUcj/sp4hU7tebj7iTMPfbkP38zxc79hxGIoD9SkPG
foPzEQ1J7FetvtlWuAH+h4sdew4jEcB+pWHhKQe6p/6wnzpGIsB5v9KwYL8k
5cRJLOFTVrBfNMIR8I5EWpfTkPuVhtaT7R0W7CffAOznIxsB/6FQLbBfaYR3
PN+qRknKicviktsvpLTOJ4sdew7ZCLyenp+fO9d2X1kzFLHfFlHv+PrLXRy6
9gsvrfMx9U2gjmgEvOuuEl54H26/zsewnyLqHU+V+1XYb7Pki8DYpac3vJtk
q3V/iEPs1/+Y70PsJ496xxPabykJpzz8Apd+TH0TqCOc+znjpcr9AtXX/6T/
v9hPHuGO9884pzrsjSCt+sILxH4dtOZ8+0Nx9rvT5+6Wfh376SJ+yiVmyGUi
k/2my+x/ptix5zASAexXGnIdby9D4NiT/ULK7H+g2LHnMBIBjnxLQ6rj3WUI
HNiv2LHnMBKB6FkP7LdRcnS8P9HWX4bAfTjJM17iyGe/iWKxXx8jESD3Kw3p
jpvJ/ZJP+IYUO/jbYseew0gExOznPoz9dCncfsIlD/6q2LHnMBIBAfv5H+6Y
EPvJo95xrStesJ8djERAxX7ufewnj3rH95r79Qsfe199E6hjJAICsx4V9rOE
esf3Z7+xwrHfGEYiQO5XGuodL81+/Q+rbwJ1jEQg6x2+nc/3n3iA/eRR77jK
M14yTfhOlD9Ro/omUMdIBGTsV7UF6N7EfvKod1zlGS9Z1TdYBfabwEgE5O3n
v4n95FHv+M4mfDtVNLVMp5rqm0AdIxEQmPLwv4L91BHr+ON2j94Ddfdxl8dg
FZ2fwU8WO/YcRiIglvsNgv3kEer4/Tbf9ssLe839qp4Axz5W7NhzGIkA9isN
mY5fHiN5Oo3lfgIN8Mk95bG0rmLHnsNIBLBfach03FtLIeViCnGIqS+QYsee
w0gE4p7vh/22i9gzXh7GG1lMQUyD2M8a+SPQOt1yf7Zzd52PkEGI/faE/Hk/
cr8OxY49R94I3GTnnXdutOde3InI/QZnb+PAfvLIz/nme8ZLoNawnzVyRuDD
+fzq/8n1VpbpzL/F2y9JQ7GfPOodT3jMG7eshjrqm0Cd/BFo2W/kKAT7FYd6
x9Me+UY8WF4d9U2gTqoIjK/eG5r7zf4txn57Qr3j2E99E6gjmfslOe83+HDm
lWA/edQ7nsN+i5bVUEd9E6gjar/JOd+QsrDfblDvePLLXZYuq6GO+iZQx0gE
sF9pqHc8+RUvSx8sr476JlDHSASW2i/h5S4V9tNAvePYT30TqGMkAoGHIWMP
Z14J9pNHrOMrT7aEs3RZDXWKHXsOIxGIy/1S1Y795JG712N8ok0m/cN+ZjES
gUX2S3vYW2E/DYQ67q6y6l5jleVOt0XLaqhT7NhzGIlA+FDEfvtAruPNoW/3
wDej/QIfLK9OsWPPYSQC2K80xJ7xckv5Hq9uZHrGC/bbEEYiED4Ok6uvwn4a
iD3ddM2t5RGEL6uhTrFjz2EkAvKPG/LBfvJIdXxsWY/s9gt5trwuxY49h5EI
YL/SUO94viG3CfVVBjaBOkYigP1KQ73jkk91ton6JlDHSASwX2mod7xw9VUG
NoE6RiKg+4cY+8mj3nHsp74J1CECUCY5LnfZFuz7RADKpGTvNbDvEwEoE+zH
vk8EAAAAAADAMv8HMSro6Q==
    "], {{0, 242}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 242},
  PlotRange->{{0, 426}, {0, 242}}]], "Output",
 ImageSize->{430, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->322227860]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->439596253],

Cell["Plot the transform with different divide line colors.", "ExampleText",
 CellID->40888340],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"DivideLinesColor", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"White", ",", "Green", ",", "Purple"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->260633710],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
u4SvbMZ+AtteW3q5LbCa3wgPrym9l51s9nNoVjCs//3dp2+ur96+SSdne31/
fHdKsF9TxOupKcctcFhFfy2xLlNVXxp/ut+W/VrAklp8UTifzlfFx/P51V1D
cljO/zz9V1RdhY77LXHgqLjarS4kupQ9UGfbqz/4999+lvCV+e0nse25sVQl
tsAqZCN8c07pvezkt5/Tn+//rXn11g/Ouq4ff/hdgv3uRTv2awscVtFdRbbP
VNXuMmTtgEquxReKk+PnrqKz4fXKqe0XVdeHl5e85ztn3fO942x1IdHFJ36d
ba+xX8JX5ref0Lb3qKzcFlj5N8LafqXiisH/Qxxrv97Xlzf3cw7x3L63Urmf
c7RiYS2TgTQfuj/KXUXO3O9yzUfW6z1y2a/VV2+rC8/9wmvsbXt//e2b2n71
v2crGm22L/crvO09wim7BVb+jXAVuV8VMas7WMGw0HG/6pH7lT7ud/v+ch97
GfmiM1fhDKPFx/0u2d/T4Sn6go+R+YiGhbu9DXd9jW11AdGlT7zet73Lcb8/
PEV9ZW2lIcf9Cm17beGFt8DKvxHGHfe7XnKZ/YrLKp/9XsdWMCw05/uwn1Pg
sAr/FxYy57u8lrkaHiM3axW9JKJTTuycb+KlbsMD+HeWq6+6m2R0qwuJLoP9
Pjn87T/jvrJ5+0lse716Cm2BlX8jjJvzvfz8Jvz+zjO7Kc6es5f2cc7300L+
fL/ecZyM9lvy2YUn3SWUEGK/nRDZA5fkz1ruh/3WiLT9BkdxsB/2C++Ba95X
JPGrAg7ClLBf+yT2k6eE/TqTAs6Oizsf0eLuq0a1xGWJwTJeKpJ2tQj2M9ID
Krkf9lNEKvcbzEfcyZj7rch+7vuNjH1FjPQA9tsbMvYbnY9oyGK/avHFtsIN
cN9sZOwrYqQHsN/esHCXA91Df9hPHSM9wHG/vWHBflnKSZNYxrusYL9khHvA
2RPpnE5D7rc3tO5s32LBfvINwH4usj3g3hSqA/bbG+GBl1vVKEs5aVlcdvuF
lNZ7J/aT7YHX0/Pzc+/c7itLNkXst0bUA19+ukuLrv3CS+u9DfuJ9oBz3lXG
E+/D7dd7G/ZTRD3wXLlfhf1WS7kemDr19IZzkWy17Ic4xH7Dt7k+xH7yqAee
0X6xZJzycAuMfRv2E879WuPlyv0C1Td8p/u/2E8e4cCHR5xz7fYmkFd94QVi
vx5ac77DTXH2s/5jd7Efx366iAb+ekrb5ApRyH7+MofvwX5GegD77Q25wLvL
ELRsyX4hZQ7fYGTsK2KkB9jz3RtSgfeXIWjBfkbGviJGeiB51gP7rZQSgQ8n
2obLELRvznKPlzTK2c9TLPYbYqQHyP32hnTgZnK/7BO+IcWOvmpk7CtipAfE
7Ne+GfvpsnP7CZc8+pKRsa+IkR4QsJ/75p4JsZ886oFrnfGC/exgpAdU7Nc+
j/3kUQ98q7nfsPCp542MfUWM9IDArEeF/SyhHvj27DdVOPabwkgPkPvtDfXA
92a/4ZuNjH1FjPRA0St8e+8f3vEA+8mjHrjKPV4KTfh6yvfUaGTsK2KkB2Ts
V3UF2D6J/eRRD1zlHi9F1TdaBfbzYKQH5O3nPon95FEPfGMTvr0qmlr8qaaR
sa+IkR4QmPJwP4L91BEL/HG5x+CGutu4ymO0it7f6DuNjH1FjPSAWO43CvaT
Ryjw+2W+3YcXtpr7VQMBTr3NyNhXxEgPYL+9IRP45TaSp9NU7ifQAJfSUx6x
dRkZ+4oY6QHstzdkAnfWUsi5mEIaYuoLxMjYV8RID6Td3w/7rRexe7w8jDex
mIKYBrGfNcr3QOdwy/3ezv11PkI2Quy3JeSP+5H79cB+ZXvgJjvnuHOjvfbB
nYTcb3T2Ng3sJ4/8nG+5e7wEag37WaNkD3w8n1/dn1xnZZne/Fu6/bI0FPvJ
ox54xn3etGU11MF+5XugY7+JvRDstzvUA8+755twY3l1sF+uHphevTc095v9
LcZ+W0I9cOyH/SRzvyzH/UZvzrwQ7CePeuAl7Be1rIY62E/Uft4535CysN9m
UA88++kusctqqIP9jPQA9tsb6oFnP+Ml9sby6hgZ+4oY6YFY+2U83aXCfhqo
B479jIx9RYz0QOBuyNTNmReC/eQRC3zhwZZwYpfVUMfI2FfESA+k5X65asd+
8shd6zE90SaT/mE/sxjpgSj75d3trbCfBkKBt2dZ9c+xKnKlW9SyGuoYGfuK
GOmB8E0R+20DucCbXd/+jm9B+wXeWF4dI2NfESM9gP32htg9Xm4p3+PRjUL3
eMF+K8JID4Rvh9nVV2E/DcTubrrk0vIEwpfVUMfI2FfESA/I327IBfvJIxX4
1LIexe0Xcm95XYyMfUWM9AD22xvqgZfb5FahvsrM2FfESA9gv72hHrjkXZ1t
YmTsK2KkB7Df3lAPfOfqq8yMfUWM9IDuDzH2k0c9cOxnZOwrQg/APilxusu6
YOzTA7BP9uy9BsY+PQD7BPsx9ukBAAAAAACwzP8D51SBYQ==
    "], {{0, 242}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 242},
  PlotRange->{{0, 426}, {0, 242}}]], "Output",
 ImageSize->{430, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->332452573]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Colors",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The color of each region plotted can be controlled by the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Colors"]],"paclet:WaveletWare/ref/Colors"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " option.  The default is a list of 30 colors that is suitably \
trimmed/expanded and partitioned depending on the regions to be plotted.  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Colors"]],"paclet:WaveletWare/ref/Colors"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " can also be set to a single valid ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " color in which case every region is plotted using that color or the user \
can provide a list of colors."
}], "ExampleText",
 CellID->30135734],

Cell[TextData[{
 "Plot all regions of the transform as ",
 ButtonBox["Orange",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Orange"],
 " points."
}], "ExampleText",
 CellID->22778619],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"Colors", "\[Rule]", "Orange"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->33088526],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnU2O48YVgDvJJsvsZp2djxD0LsvZJgjgrY1YRjCAB7AHyASYRfcN+gK6
QA6ga/QB+gC9zwUYSpRKxf9iseq9R9b3wYnlllTFenz89Mjiz59//Py3w+8f
Hh5++2P9f3/74d9//fXXH/7z9z/V//GPX37718+//PTPj798+ennn379y49/
qP/4v/p///3dw8P5dQUAAAAAEMzhcNBeBAAABQ4XtJcCACAv76fn59O7/xfU
BwD75/VYuw77AUBZNGXf6xH7AUBJ1GXf8fXy7779Yg79PT0M/wMAYIm67jt4
+AJM5j0ECACWWbnnOyE6BAgAlkllv+l3ESAAmGeB/ULMhgABYCOETnmEOw37
AcAWCK39FjkNAQKAeRIXfnGfBwAQZ95+cSpDgABgm1z2c18EADDJzKzHmhKO
8g8ADDNT+600GAIEAKvkKvxStQAAkIe89qs4+gcARhm1X6qyjfIPAEwyOuuR
0FrYDwDU8O5x1b7NwUztlwTKPwDQ4nZz0/bLM9kLv+StAQBEUVeBofZLCAIE
AF06ld+g/XKYaq/22+u4APbF+ZFubfVVg8/1yLRF78wS3NgfYBucZz165jsz
WvslZzd+GPPebgYIsCMuD/INe6pRvk14H3KYsBwCBNgUw/bLxNbNMOs3BAiw
HRTst10zhCw/AgTYCK0pD4HNdrtaCA9OSH0IANoMzPZmZaN10dKKbuLDG40A
wO4QLfzEeknO0sXGfgDmkbZftcFdv7jIzAoQAFTp2k+AzRU/0QtM+QdgmOus
h/D2uKFtf01kKP8ADHOt/YQ3xg1t+yt/F6ZPjQYAPTTtZ3/zX7+c0/azHwGA
/aKw29uwiW0/SWTY+QUwyd1+wtjf9lP9KLDzC2CS+6yHMPZ3/RIuod+Oe20/
AgC7Rq32q8wXPwkXzxfdoAkBQBydwq/B8rafvDBj5xfAGPr2S9r71MPZF5Hc
S4ODtbHzmyxoABvi6SHCfhMby9hbE8/NjNj0IhZgWWtzUopZgPG5j5TxTBUB
gC1xOjw8PDy+vIV9+gAwRN4kBcjA6XA4RX1ROeFt7Pp1ybRIBnd+bcYfYAmn
l9Cqr4P+z721rS+fEAye+If9YPts3n52NsCsC2PtqjdTkQeIAvslQ8B+RnZ+
rUUeIIo19rMiQAsICMHOzi/2g11go/Y7PzP9yu2ZwbdHCd+fIdz/S9xmWHfm
mgjqJYT2YtzHc3sSfLKOPG4tfH/69pCtl7qB+9PsRXoEEMKE/bwt7Pqy/lez
9Uy8qKLsd9k4rw0E9jJLZzGih7OI5ot1p18/Hj49zjQe18tVZN5gcvcIIIgJ
+3nUVVO9sXnl2dUf/b9cWWS/ppXXY9PUgl6madvvPITj0a/9knXUH0v9onbR
5+8y9PJ+Or3eVojX4Xmk3x0PHwfbTzAuACHeXl7iTvfLY7/bFnPf5G4v+3+5
sqD8u7Xu2S+0l2naC3CumNqtJOuoP6Caugy7LECeXlr2O7869/VhrP004wLI
z9vLIbLyyzDr0ZHGstovwH7escXrYak0pUtvAVqb/cW0OWqk83Ca7317fK4r
sYv9MlRi7drvy4db7TfcPrUfbIPzJW7BV7j1SD7r0dpUFh1QWn7oL+Vxv37v
3nZ/dUeG42Ntz5ztl+conOfyupGmzqz3tWc74rgfWMfEnu9tlrA167tgMnHp
3IezX5Ipy6GuXZ2ZfnJ5oJPD8es1Anl68SrZz/Ptj/Z4uaA88rpKgAycTvr2
W4v6JQ/qZ77JLMbKXt5eHtfsbACkxtqcbyRc8GXffpfij9oP7LDtaz0cutd8
WSB3BNa1f6n7KPzAFnP2G7gKo8GQ+hrkRWRkt9dh2H4ABpmxX/+yhRtG7Se5
eVqzQdYIWBsswGrC93w7Z69iP3NCyBcBCj/YI6H26527as5+layObAoB+wEE
49uvdTWEd5TPvwrD4T4otqjzSG6kNm2QKQI2BwuwkpnZuN5VGDdsec8hs51a
roWSL5jlwQJkY/AqjAbT9rN+5ltOki+b2ZECKIH98nYRTdoIWPY8gBJG7SeA
fSFgP4CcmJvyEMO+EBIuofGRAmhQqPqqjQghyULa9zyABoXabytCSLKcmxgp
gDjYzzTrl3MrIwUQp2j7bYI1+kJ9AOOUOOuxOSdgP4AMFKe+aoNOiFvgzQ0T
QJZy7bctIlSG/QAmsWs/7nPis3SxNzpMAEGw32ZYtOTbHSaAFGXNemzaCW7h
Z5d/08MEyIP37OwrBamv2r4WQgS49TEC5OByoyvsp70Q65gWYHh9CFAOTdn3
eizXfrvRwqDi/D/uYIwAybg9zwP77cMMHdehPoAL/ed6tP7Su7dzKRMfOzMD
3gNYRLG1H34AKJzC7QcAcMOu/RL6isIPAHpgPwAoE7tTHqmUhfoAYAij6mvA
fgCQjQ3Yb6W4UB8ADLFz+1H4AcAIpu1X8VQLAMiF3VkPB/YDgAxYV1/FUy0A
IAsbsF/FUy0AID37tB/qA4A5tmG/aonQuOcJAASwgVmPhnCnoT4A8Ljf4u9y
l1PHNtTXECJA1AcAPrdbO7dfntmS/SqeagEAy6gLv+PxuPnar4GnWgBAMOeH
ud2kdzbhdmu/Bp5qAQBDDD7X42689u2dt/pcD7wHACF4B/v2UPsBAATjCsJC
n+sBANAG+wFAmWA/ACiTTU55AACsBvUBAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABAHGNPMweAmqenJ+1FgDzs5mnmGSDtjURA9/GCikEw
En95ZAa+q6eZp6bY3HMYiYBuKmI/eWQGPv0088Jvbl9s7jmMRAD7lYZc7Tf+
NHOBBbBMsbnnMBIB7FcaQgOPe5r508P9n/1SbO45jESglYriiYf95BEb+OKn
mfvq27UAi809h5EI3A/CaGQd9pNHfeCjx/2wXzEYicA9CbFfGagPfLj26+Te
rgWovgrUMRKBYftJZR32k0d94FP2m/7LXlBfBeoYiUDXfpVo1mE/edQHPrXP
O/vHXaC+CtQxEgHsVxrqAx846If9CsNIBLpTHhX22znqAx+t/fpgv51iJALX
VOwfcBYB+8mjPnDsp74K1DESgVH7iWQd9pNHeODvp+f++X6tnd+JfNvpzm+x
uecwEoEB+/X/MxvYTx7RgZ8v950723k62bDfHjESgdZxPwf22y9yA2/KvvZF
vhX2Kzj3HMIReD26HY5WMlL7lYbUwG8X+k7bb3bfFvvtEdkI9I++XMF+pSF2
j5eDR+ceL/fjfoH225cAi809h2wE6h/g5+eJW01iv2KQHnhI7TcN9tsd4gef
r9YbuN2Q3kVG2E8e7KdOsbnnUItA71aTo+fe5wf7yaM+8IE932l2t/OrvgrU
Ea79nPGo/dS71kV94EFn+vlgv92hNec7sBsymFoi+Yb95FEf+MCl5bNgv31h
JALYrzTUB4791FeBOkYikNJ+y/dQsJ886gNfdtCvQcx+Lodzdqe+CtQxEoGZ
24yHE5U22E8e9YHbrf38HM7Zo/oqUMdIBJLVfthvI6gPPPQ8Zx+ZiQ/sJ4WR
CGC/0pAauHe1R3um7b67EZFg+ehkb04BFpt7DiMRyGK/4C9iP3nkn+frvTyz
+KBfg4z9RHosNvccRiIw+hO8aNX70lviQOwnj/zAh59mbsp+gxk7WA0m6a3U
3HMYiUCaWY/BXQbsZxL5K92CLi2fBfvtCCMRSFn7Lf8i9pNHcuDe9eV3Vh33
yyTAsZY7f0+0AMXmnsNIBGbsF3FCArWfbSRnPXrmO3M/1LzUJFr2S13+FZt7
DiMRmPoJxn57RGbg3t10B+7vF6mRTPabSFfslwcjEchrv7mvYz951Ac+eqh5
lqz2C3kX+yXCSASm8jDOftWC8g/7yaM+cKO1X8i72C8RRiKQoPbriw77GUZ9
4LbsN5uo7t100y7qq0AdIxFIZr/+X7CfSdQHvtZ+aQUYaL8lx3Pm+9ReBeoY
iQD2Kw31gccf96sylH8hDabe+VVfBeoYiUCC437Yb1OoD3zxmX4+2G8XGIkA
tV9pqA98q/bzj/6t7DPhKsg0E5S5L/UkbNin/SS7Fku/vRxyN7TnG3gcD/ul
7ks9CRumkjC3/ZbudEzSGkge+w3HCvstxFDtF96aWfttEyMRmLDfWJZ2vzKY
D237jXmjddGT98/Y3yO+MtFUqi4SNiUw8MiiKx0J7BfxgzjRWni/QwsQEc+4
bV9mxe2pl4neAaaT5HR4qDmc0ufemHMmFun+VrB8xt4aa2qqNf9XY+UCRP3G
yfxiii6AAWYWI+THcfAzIb/R4b+8Swlo2UjtLc/SgZ9eXt5S9CtpddgWKfIr
Mien3o42mK/66MYDPxMFsx6BvJ1OSeznWJvtqQK+ZCe69eGVCyCWMIYxUntg
v9UNYb9l2LJfxOdN2U/Spen62rn9Zt+9vMX5fvJYsN8qAS6q2Wbbifj8ygXA
fma2vpldb+y3OyzYb20TuvZbswCp1L1xjGx96Wq/gScYvn5u//f9ppfPp2/x
9qt7ci3eG+x38T7aQjUZ//tIvKeSxfUyRkiDK7poPUuj00498EV92bbfUNYF
ji7KQtfcu3w3ZpXN/egL5F54s+s6SpmEmUhmv/4TDOt/fXp8r9+tXzQD8l9c
3oqx3yVG1wANttx5MbbgY10PDiS2l9EuZhuM7uKaQ94Y2u08ff28qC/T9luz
siLs53Kv/uLXjzGrbNp+ArnnWs+XgVX6JMxEMvt5NE8wPP9Kfvlwefe6Jr2a
rf7Lx9cI+zVNvB6bdtoN9rsYfKzEbcFHuj4v/PF2W/ZLA2t6mRqF9+10Xbyf
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
oEywH9s+EQAAAAAAAMv8H4TYoSA=
    "], {{0, 242}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 242},
  PlotRange->{{0, 426}, {0, 242}}]], "Output",
 ImageSize->{430, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->317643267]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->177717167],

Cell["\<\
Plot the lowpass portions of the transform at each level, using a list of \
colors.\
\>", "ExampleText",
 CellID->134041493],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"Iteration", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Colors", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", " ", "Green", ",", "Orange"}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->361027865],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 236}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 236},
  PlotRange->{{0, 426}, {0, 236}}]], "Output",
 ImageSize->{430, 236},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->639634]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "ImageSize",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The ",
 ButtonBox["ImageSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ImageSize"],
 " option is defined in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and is used in ",
 StyleBox["FullWaveletVectorPlot",
  FontFamily->"Courier New",
  FontSize->12],
 " by ",
 ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"],
 ".  Click on symbols ",
 ButtonBox["ImageSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ImageSize"],
 " or ",
 ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"],
 " for more information."
}], "ExampleText",
 CellID->929736648],

Cell["\<\
Plot the different level of the wavelet transform using a larger image size.\
\>", "ExampleText",
 CellID->13585389],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->472562244],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
X0j5IR6bsAMpZL/VtoL90gg55WE/Z7bfX/56GB8hRdmBhHyLKvG+979vxkds
UQlQVaQk8Ww8SbjVLQy5/aVjv9VaRkGNr0+mch5bryd8xVPU5JPl4xJ4zOue
R2xRniqoisq8oQYVnpGvs9y9eW6+Mrku5DF+Zev1yVTOY+t1z1sJRU0+WT7G
r0S97nnEFuWpgqooJYk3WOMO0DNIPCCCP0nOx8PI8cyRjZ53QwanIX2/5MLT
4Jz3qw4lgfsTL3bkGwvhyDf2W1Tt3/zI9/z09C6/Vi+Z9tv6QMjUH+28Xyw4
6yHL0XvOd3Xka1P6er80+4UA+wXy7nyG/WA/2oqqsJ+fqM/jamcl9GO/3Xen
t5CE/CgJPGT+x+DoDtf71YhO+3nyEPZrDyWBh8/7Lf85YJWDCtFpP8+7MfZ7
f368m/R+A5vTf8///XKPm8evfpBuv7EmU6IpcFnF/C46Lp6qXyK534QsuZYt
QgrMqGL86sv905xyxsDJw0nASbzY3p3151tJvN0AkXj6E68m+1lx356O//fz
h6/Hd8cnU3D2k+tbKUl4ba9bY62W7DzZYLPq1UBSa9msYrfA5Cpu+WTFMC/n
zR8+Iw4nibuwfLf22GL24aS/FxJPf+LVZD+L6c6t43+//PGr67u3P6Z16Hx+
e3x9SrDfVMT9LrF2gcsq7MPQkq2qLxt/ut+F8VpATi2+KKxv01Xx/nx+tu+d
uyznT1/8ljicJPyJ5xDYMzSJtxsgEk9/4lVpP6th3/5wevfWJtb9rN9/9fME
+92LtpLQFLisYn73bJetqi9HsHkRObX4QrH6+9RVzJLQKWdMQvpw4vEnXsq8
n5V4uwEi8fQn3runp9LXOzsDEIdY+zl/Qdq+nzW/c/sDljoEWzMXmbVsBjJ9
6f6Muoo6+n7H7YtePAPh6S3nz+ckHm3fD4kXUwNh4p2PhX/vsTsACT6r+9K0
NwrN+w0vh+DS0y+3vyX19MvKH524CmtPUjzvZ/8zfN5vYb+1xCsx7zcg8UJq
IEy8d08Ph4eSP/igst/z6egcH4di53xfktAqcFmF/y8Xcuotv5a9Gl52W9Iq
nH7ErJy4U2/Xn1yWOAJTjXxXE283QCSe9sQbOH7q5k/CIeCavbSv43o/KeIC
vxx+s46/lp1mGU5lvzSQePxUd73fAPs1R2Tgl85fRt/PvkRuhnHi9M+MkW8K
SDx+dNrPL8AS9jMvIgn5CQ/82u/LnHgZx4qPj85Y68oxZt5vuegB7FcdOu3n
/wDs1xisgVvnYp1rGjDy7Q3Yz3kRSchPucBnV4Ysx7vWKYNhb+Qb80u3FJB4
/MB+zotIQn6Y+37GeP6+H+b9mken/TDv1xXMgZtzvk5ncPew6+Dc4BL2qw5B
+6VdeDDAfs2hJHBP4vlv7zsB+1WH3Mr2vgsP/N+E/RpDSeCeQUfI+V/YrzrC
A6e+q1HohQdRwH41oiTw2Hk/jHxrRyzw1AsP/ITbz/kY7CeIksCT7TcB+1UH
T+A5Fx5EEWK/5cdsHyIJ+VESuCfxMPJtEsG+X+CFB+EEqm/5SfufSEJ+lASe
fNYD9qsUwcBzLjzwz93Ffh32k0VJ4MlXvEzAftWhMHDYrzeUBJ4834K+X6Uo
DBwj395QEjhGvr2hMPDksx6wX6UoCTzNfuYt2K86FAaOvl9vlA98do+GrcV7
0+b9YL96URg4m/3Mh2E/WcoG/rxzU1dD7BUvOOtROwoDZ7Cf/WHHhEhCfkoG
vn9TVwNGvr2hMHAR+5nXkYT8lA/cd1NXA0a+vaEwcIazHgPspwmqwLd/UhTa
94tNPNivahQGjr5fb3D2/fzzflvf3/qlG+xXNQoDL/oLX+fzyxUPkIT8sNov
6Zwv7NckCgPnsd8wF6B5EUnIj5LAExIP9qsahYHz289+EUnIj5LAE1Y3hf2q
RmHgDKc87K/AfuIoCTx55Ds9h/2qQ2HgbH2/VZCE/CgJPGdZ3QH2qxCFgcN+
vaEk8JxldQfYr0IUBg779YaSwGMn/Rxgv+pQGHja+n6wX70oCXzrvh6wX6vw
Bh661MauAGG/llASuJN4gdIzwH7VwRd4zFIbu4V5bkuUCZKQHyWBY+TbG1yB
0yy1YfAs0JcJkpAfJYEvE89Zx8AP7FcdvIGTLbUB+7WE0Oqm7qwL7NcbJQJn
WGoD9msJ1tVN7dSbs0w82K9tpPp+JPN+q4szZ4Ik5IdzddPrnaQfb4fn2VF3
s+8XWBPsVx1i9su+vQLs1wzcK1wdl9MvF3DWozcUBg779Qbn6qYzxm6g9SmM
fHtDYeCx9iO83GVAEkrA3Pczxtvt+8F+baMw8MCfW24tzpwJkpAfodVN3TkX
2K83FAae1vejqh1JyI+SwGG/3lAYeJT9aIe9A5JQAiWBL0ccsF/bKAw8fI0X
2K8NlATu6fuFfB32qw6FgcN+vaEk8NXEg/0aRmHg4YtMkqtvQBJKoCTw1cSD
/RpGYeDJi+uSgCTkR0ngmYkH+1WHwsBhv95QEjjs1xsKA4f9ekNJ4IHzLVvA
ftWhMHDYrzeUBI6+X28oDDzzEJwJkpAfJYHDfr3RbeAAAAAAACCW/wcYHoFU

    "], {{0, 236}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 236},
  PlotRange->{{0, 426}, {0, 236}}]], "Output",
 ImageSize->{430, 236},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->486129476],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
F5DSq20bjjlGujmE1AjNzSEPXXRRYm73nnmmdHPScAUIGSu48coh+plOV73i
FWgjU64AIWMFbc0h3ZHpS186W3nbd18cf+umbYccwhUgZHygubnl4XZ74Fyp
MJW3VNrGMSlpPDQ3t6SSN5DKW+q8lByTknGA5uYcPXlbvc8+CCNTPW2Lb+Ny
mggy3tDcnJNK3pxcJbwKrLaR8YTmVgf3nnFGYm4r995bNnljtY2MJzS3Oti1
ZQvOtIK+cJfVNjI+0Nxq4ldf+lJibivKXiK8Ovo2eV7iiowVNLeaSFxF3e5Y
tMh/G7hNnowz3KFQHw+ef/7shoVXvtJ/5Y3b5Mk4Q1urj1Ty5nnaNDVJym3y
ZNygudWKPm26Yq+9fCZvnCQlYw7NrVZS06bedpum0jZW28gYQnOrG33a1Nuy
kNSWBE6SkjGE5lY3qQ0LHmYW9Fof0zYyttDcPJA6VUitMwup5R/cSUrGFpqb
B1LTprXOLKSWf9x53HE1fRAh4NDc/PDULbd4mFnopm0HHcQBKSERzc0jqZkF
54PT7gzp/PmcRyBEQXPzRmpwutz1hlP9Cg5M2wjh9iufpAanq9ydDanrnC95
CecRCEmgrXnm/lbL+eA0O0PKbaSE0Nw8o6dYrganqQHpL446yklTCQkampt/
UoPTiv7Wdcs5c1hqIyQFzU2EbT/8oRN/271tm56zcUBKSALNTYpU8a2Evz2x
dOnyfs6mzC1+z5paS0hw0NykSK8M6d2euO46m9fqS9oSZ7v75JPrbjMhgHSm
WjNrPtrT+uM0N0Ge3rBhYHLB7oTkv77xxuv22y/lbBuOPdZPmwnBYrqdeJp2
twvNTZadmzdvOProlL/Ft42nn7597drUk7u2tv/+qWcyZyPjTJy2tdttZm6w
PPCVr2T9Lb6tfPnLN5933r1nnnnPpz+dytaSGQTW2cg4E2driad1jY6ZGx4P
XXjhUH8bdaOzkTFktrwW05rqpAxtut17bIbJQUQaTBS/vvnmW1//ektbu/G/
/TdusCJEL7QxcwOnc/XVa37v92hrhFiSpHN62hbR3FDpZnFveMPqgw66Yf78
VQccsGru3NUHHviLBQu4+4AQS2huhJBGQnMjhDQSmhshpJHQ3AghjYTmRghp
JDQ3QkgjobkRQhoJzY0Q0ki48YoQ0khoa4QQQgghhBBCCCGEEEIIIYQQQggh
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
/+u3u7ZNvobLdysiLlcSEOJqCcvcks1TWwtmX/pFE1hwK424XElAiKslMHPT
lvJ2Fu1jX3Zjwc0J4nIlASGulrDMrVt2O/qlJVa7seDmBHG5koAQV0tA69wU
z65uF92HxYKbK8TlSgJCXC2heFpCiX1Y+mmOWHCrgrhcSUCIqyU4c4v6+7C2
Wo9Md667JjG3py4K73hxEJcrCQhvapluD71saZDmtuvn1yQjU+MJJ2fHpAs4
Jq0KzY3Y4++K88rVkjt9QjS3QnOmHJM6hOZG7PGkls5UKzG39rT+lxDNLZkz
NY5MB6YSFkz8ZsmpPtvZPGhuxB5/alHj0vSoNEhzi3lmxUU2I1OmbW6huRF7
6lBLnKbNLu/ouVn3EZWwzd6bYXIQ542pCX1k+sjCOc8/sGHo0ziV4BaaG7HH
j1qSUWl2XBqQoen0RqZ7Jv62/WuLss/hVIJzaG7EHl9qmc3mBktuoZpbzDNL
z59N3t7z8uy0wnPrr+WY1C00N2KPuFrCNbdU8tZ5/766v3XTtg/sl5jbk2cd
IdjUxiAuVxIQ4moJ19wibSvWzG6sq89Sj/fOKD5fT9ueW79UtqnNQFyuJCDE
1RK0uaWSt60L5+y86fL48ad/et7sGcUXTGw//zjpljYEcbmSgBBXS9DmFvPc
3bfoV0bo1t/eNUd3NlbbHCIuVxIQ4moJ3dxidny/pfvbgLMtmHh25cXSDWwO
4nIlASGulhAXuaVIrq2QNbfffPtk6dY1CnG5koAQV0u4nqbzwqObt3/t/amc
7ekftKTb1TTE5UoCQlwtzTA3xe67b3781Dds+9C8X39xAetsdSAuVxIQ4mpp
krmRuhGXKwkIcbXQ3Ig94nIlASGuFpobsUdcriQgxNVCcyP2iMuVBIS4Wmhu
xB5xuZKAEFdLA9a5EW+Iy5UEhLha6GnEHnG5koAQVwvNjdgjLlcSEOJqobkR
e8TlSgKCaiGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIISQseE5RQhoATzyeheaWggEhRgBFwov9ZQHsJlkYEGIE
UCT0tCyA3SQLA0KMAIqE5pYFsJtkYUCIEUCR0NyyAHaTLAwIMQIoEppbFsBu
koUBIUYARUJzywLYTbIwIMQIoEhoblkAu0kWBoQYARQJzS0LYDfJwoAQI4Ai
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
csLUc1hzqxUGhBhBE0mc/yQ1t6LVqlprbvlTpclz1ITpY2uvZc2tVhgQYgRN
JHH+k5hb0TFdfTW3osPSh372r6y51QoDQowAiiQ2t9LVqpq2l5YYlrLmVisM
CDECKJIqNbeotrJboWFp/BzW3GqFASFG0ERSpeYW1VZ2Kzosdb69FK2bxGFA
iBE0kaiam6LEmK6mslvRYanz7aVo3SQOA0KMAIqkSs0tquEU3wqbpXd6xc9t
MwC7SRYGhBgBFEnFmlvk+kSRUZE6XuqZNLeaYECIETSRVKy5RTVMKNjX8VLP
dNgStG4ShwEhRtBEUmWdW1TPhIJ9HU9/5taVlzlsCVo3leP534zX5cCeeayu
q0xCAXuYgCKJza10taqmCQWbdSDJM9VqELd75wG7qShPrn7zI1dOPPrj1764
eyzWxtx2yZuXnzlx45df+/yuWi40CQLyYQKKRF2UuTTO986XHpY6bMmXzjip
+psIsnvbmtjZ1O3ZTUuqvyGgbnWe3LQm/sqr28O3L5FuTl2AHyagSCqam/Oa
W7lh6ai98yWOro5lyQ5HiAk5h/ZfL+za9u/zlLk5+WjPui3aay8+v2vN2fPU
tx521Kao8nUDP8yKTlIHVZpU0yJe+xwsWQ0yqiVFj66OI3I7QkzIP7QXntn8
9F3nuDJVcHOL2fnrzZtuOAfwK5+i6kAJ+DCbZG7xC0vU3Gw+Lps75bxq5snv
+4M17zo425LCOUDviLqXO/zYxFN3XPzsfTO357YuTd3J3o9flX3yjvWnd/oj
xF/f8r6h76ZemPPOlh+n349tLb5ln5C8yvKgklc99POL1e3xe5bm39cfNL5w
6IPxq+yfnNxXn2X5ZJuPy3+31MdZfnQSkKLtTD4udjb7dmY/zuajh/aasZ0N
M7eo+N5548cNzZ1GvUp/8q++f262JSWOrvNvvxO/KnakordRr3qk7AuhXrX1
ionVn5tIaj6Wt+5cfMGXeH4VG+nwVSv+4SW7ntpS9BvnhElCCPGOiN1FlUfK
zotUxqsnpHjk+quSBlRsSXwsK986sTXOtb7n9Ob8DU23Th2HcOXErWeXSTl4
G6tbPEot8dWriYrm5napWwmrvO2UNyUvyblglg3qWG5eNPGrb0x0frD/Yz+e
v+3qA7ZdPXfb1cn9oQ+Out+/88NX7Zj+9ONTb3DzbsYnf3+fGTu9onvrXD23
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
D8HZ9YjVRaIBu0kWBoQYARSJq6UgQ9O8QoPTuoNz75fffPvxE/95xmtfeHa7
bEuCgwEhRgBF4srchlKocFdrcHbcsyZ2NnV74pYlgi0JEQaEGAEUidHc7Jdz
DH3mw+vXWxbuag3Oi7/dteHUecrcjINTwG6ShQEhRgBFkm9u9ss5hj4z2Ttv
sxrkn884w7LN5dj9+ObO0nNsym6A3SQLA0KMAIokx9zsK2ZDn6k/eNnb357v
b9UXDDsEsJtkYUCIEUCR5JibfcVs6DPjBy898kgbeyyxKK5WALtJFgaEGAEU
Sf46EPulbkOfuf3BB79zxBFGeyw072C5nKMKgN0kCwNCjACKpNbZ0qhnele9
5z3GIWf8tPM+9CGjs9kv56gCYDfJwoAQI4Aiqdvc7IecxuAUWs5RBcBuKsGv
tztLcYMIyAOPPy7dBB/AHiagSBya29C8y/4yCsbgFFrOUQXAbirKT65984UX
T1z+vdc+t9tBiosfkFOWXPrmf/zCe7+2+Oldu6TbUiPIhwkoElfr3PKXgthc
RsEmOPbLORTlrNt5NzlMohLyprm3romdTd023rOk+md51m3RXpvevDn+yqvb
sunpmlrlhCq5BPhh1j0GLIGTdW7GpSA2c6CW69xiZwvL3NwmUQl509wv7Lr0
8nnK3Jz4Kri57X7++YXnnqe+9bCjNkUVBwA/zLDMLd+d9BeOWgqSfXDUx8Uu
etlb/nzp+/68s/wbT21Y+tiai9VN3Y9fpe7f9fevv/1vu8PSO04+4NEVX0ue
oD9ZvxO/UH8wdsWcJ+sfd9fGi7c8uDT+r7ol94c+qO6rV6WefOva02OHuaB3
W7XmuKHvlvNxOR+d/Tj9/kMPr159wwdvW99KPSF5leVBJa+69vbb1W3dL3+Z
f19/0PjCoQ/Gr7J/srp/5U03xa+67IYbbJ5s+XH5H60OrWg7k4AUbad6YZyw
XbB8eXyYlh+d/Tibjx7aa8Z2hmVu+Ss0Ui8cuhQk++DQj4tddM375nZda8Qt
ftXM/eNHPsfwwoKvWnvixCUXTHzr4gK3+FWFnl/xhZ5fdcHFexz5T6ckwyLL
W/zCoi/x/Co20uGrDm+dte2pp8rYUGUmCSHEOyJ2F/kaKefPJrz4213Tn/zd
ZJkHyO07iyeSsnxYt2/V87bvPfv95bIO3sbnFo9SPfiJJXWbW2xrNrMSux/f
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
    "], {{0, 1006}, {415, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{415, 1006},
  PlotRange->{{0, 415}, {0, 1006}}]], "Output",
 ImageSize->{419, 1006},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->81717322]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Dimming",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Dimming"]],"paclet:WaveletWare/ref/Dimming"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " option controls the color of the regions that are not selected to be \
plotted by FullWaveletVectorPlot.  The default value is ",
 ButtonBox["Lighter",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Lighter"],
 "[",
 ButtonBox["Gray",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Gray"],
 "] but can be changed to any valid ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " color (in which case all regions to be dimmed are rendered using this \
color) or a list of colors that can be used at each level."
}], "ExampleText",
 CellID->180261094],

Cell[TextData[{
 "Turn ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Dimming"]],"paclet:WaveletWare/ref/Dimming"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " completely off by setting ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Dimming"]],"paclet:WaveletWare/ref/Dimming"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " to ",
 ButtonBox["White",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/White"],
 "."
}], "ExampleText",
 CellID->217751637],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"Iteration", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Dimming", "\[Rule]", "White"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->8462139],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3UGO28gVxnEl2WSZK+QWgXdZZusgB5jBWIMggAfwDJAEyMJ9g76ALpAD
CLmFDtD7eJ8LMJQolkqkqJaoqvee+P1/6IyVtpulKj59XWKJ5O+//+nj+ter
1ern37b/+fjd3//45ct3//zz79r/85fPP//1x8+ffvjT518+/fjpyx++/037
zf+1//v3r1ar/eMGAAAAuNl6vfZ+CgDgYH3g/SwAoK5v25eX7bf8O0QfgOXb
bdqsI/0AaOmmfbsN6QdASTvt2+wOf47Tj0N/AJaqnfetM3kAknsAJPDOF4Am
0g8ADkg/AJpY8gCgiegDoIn0A6CJ9AOgifQDoIlVDwCaiD4Amkg/AJpIPwCa
SD8Amlj1ALBo2TWuzi9zQPQBWLL+4qbnD/dIPwAi2lkg6QdAzmDmR/oBELC/
pdt59DXc1wPAwu1XPUbJt0fuAViww418uasRAJyQfgA0kX4ANLHkAUAT0QdA
E+kHQBPpB0AT6QdAE6seADQRfQA0kX4ANJF+ADSRfgA0seoBQBPRB0AT6QdA
08LSb2HdscGgQdOMyr/yI1N/NeNHyj6BeVtzfwLu4wk8g+16tVp9eH277V+v
gUvqFilQwXa93s76QQoewFPbvt466xsg/QA8NdIPgCbSD4CmR9KPAATwvGLM
/fb3TD/q7xnc30r4dA/h8XdmN5Y2UamVU3/6O8HXaOiWbT7cSruB093sTVoE
jIRIv+wVdnzY/tG9eq48mN1WemVWasWmO7ds88FWjkGWdaZ2i4ChEOmXaWdN
7Ystm54d82P8nZlbb7ey23SbqtTKvgubTT73q9JQ2kS/gdKtfNtud/0OOWvw
yvbL7CbAwtvr67yP+9VJv+yF3L9yjg/H35m/9Sz9KrRymDGdb6VSQ8e5WR83
dVo5S793t1+mX0B9b6/rmTO/Cqseg9AoPqnIji0eM6Pi3C87UlapoX13up/r
H9XpDnM/LNH+FLebz3AbKb7qcfZSqXpAqZ/7GRz3O2ZHhYYu5EyV7mRZznE/
LEqId779KuHZqm/FxcSUfvXXfGs2NF5YrtRKoTXfwwnlM8+rBCrYbv3TDxLe
Xj888mYDKC3ami+Waz/5Y+6HODjXAwYO8z4mfojlvfS7cBZGh+gD8NTeSb/x
aQs90g/AU7v9ne/g06ukH4Cndmv6jT67SvoBeGp5+p2dDZEd5cvPwkjSPzR7
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
    "], {{0, 242}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 242},
  PlotRange->{{0, 426}, {0, 242}}]], "Output",
 ImageSize->{430, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->649557450]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->559892485],

Cell[TextData[{
 "Set the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Dimming"]],"paclet:WaveletWare/ref/Dimming"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " color to different values based on the level to plot."
}], "ExampleText",
 CellID->319013640],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"Iteration", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Dimming", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", 
      RowBox[{"Lighter", "[", "Green", "]"}], ",", 
      RowBox[{"Lighter", "[", "Yellow", "]"}]}], "}"}]}], ",", 
   RowBox[{"Colors", "\[Rule]", "Black"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->6622082],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
f4uqq9B5vy0OnBSX1+vWW5dyBOr1vfaL316+S9hky/aT6Ht+W5oSPbAp0QkL
kd9+XjzPH92n9zh487q2LxPs1xft2c8rcFxFiv38acjcDpVcy1JTvBw/dxWD
jvdUTtvxour68v6e93rnrEe+PYNe17211Lr4xG/Q9zr7JWyyZfsJ9b1HZeV6
YJO3ExZi7Yc4zn5Pmy9v7ued4rlvt1K5n3e2YmMtsw3pvtS/yl1F3p/dyynr
/R657Of0Nep1oblfeI1Pfe+7y7et/b67du+ViiZXW7HvPZpTtgc2uTthEQK6
YuCo7mgGw0Ln/ZpH7lf6vN99++U+9zKxoTNX4e1GGU65fHn/9PIp+oaPifGI
jo2HvR29viZ73Xrr0gde+753O+/3x6hN5ipV7Huu8MI9sMnZCW+3XGa/47LJ
Z7+PqRkMP5aGdTZc8eLst1LFUhkh427ba1mr4bHnZq3iKYkYlBM93JZ2q5u3
Iz/9lm9XX9ObJL7XDb6eUrGzX/P6h8hNtm4/ib73VE+hHtjk7ITXn9+E3991
ArriyjV7qV/nej8d5K/3ezqPk9F+W7678aK7hBJC7FcJkRG4Jn/2cj/stz+k
7Tc6i4P9qu17jvAI3PK+IolfE3QSpoT97m9iP3lK2G8wKOAduPjjEQ7/WDVq
TXy2GCzjrSJpd4tU2/ccRiKglPthPzWkcr/ReERPxtxvR/bzl6+27zmMRAD7
1YaM/SbHIzqy2K/ZfLOt8Ar4C1fb9xxGIoD9asPCUw50T/1hP3WMRIDzfrVh
wX5ZykmTWManrGC/ZIQj4B2JDC6nIferDa0n2zss2E9+BbCfj2wE/IdCDcB+
tRHe8HKzGmUpJy2Ly26/kNKelqy27zlkI/Bxfnt7e7q2+8a2roj99od6w7df
7uLQtV94aU+LqW8CdUQj4F13lfXC+3D7vU69if0UUG94rtyvwX67pVwE5i49
vePdJNts/SEOsd94sVfsp4h6wzPaL5aMQx5+gbGLqW8CdYRzP2e8fLlfoPrG
Sz7+if3kEW74+IxzrsPeBPKqL7xA7PeE1pjvuCsGfHvp3F3817GfJuKnXNK6
XBEK2W+5zPEy1fY9h5EIYL/akGv4cBoCx5HsF1LmeIFq+57DSAQ48q0NqYY/
T0PgwH7V9j2HkQhsGPXAfrukRMPHA23jaQjcwlme8ZJGOfstFIv9xhiJALlf
bUg33Ezul33AN6TYyU+r7XsOIxEQtN/r8J9XsJ88ldtPuOTJj6rtew4jERCx
n7/wK/bTRb3hWle8YD87GImAkv3uYD951Bt+1NxvXPjc++qbQB0jERAZ9Wiw
nx3UG348+80Vjv3mMBIBcr/aUG94bfYbL6y+CdQxEoHCd/g+Lf/8xAPsJ496
w1We8VJowHeh/IUa1TeBOkYiIGW/BvsZQb3hKs94Kaq+ySqw3wJGIqBhvwfY
Tx71hh9swPepiq6W5VRTfROoYyQCIkMe/lewnzJiDX/c7jF6oO4x7vKYrOLp
z+SS1fY9h5EICOZ+E2A/eYQa3t/mO3x55ai5XzMS4Nxi1fY9h5EIYL/akGn4
9TGS5/Nc7iewAj6lhzxi66q27zmMRAD71YZMw725FPJOppCCmPoCqbbvOYxE
IPX5fthvr4g94+VhvJnJFMQ0iP2sUT4Cg9Mt/bOdn+f5COuE2O84yJ/3I/d7
otq+5ygbgbvsvPPOnfbci56k3G9i9DYN7CeP/JhvuWe8BGoN+1mjZAS+Xi4f
/k+uN7PM0/jbFvtlAPvJo97wjMe8adNqqKO+CdQpH4GB/WaOQrBfdag3PO+R
b8KD5dVR3wTq5IrA/Oy9oblfwG8x9jsO6g3HfuqbQB3J3C/Teb+JhzNvBPvJ
o97wEvaLmlZDHfVNoI6o/RbHfMNKw34HQb3h2S93iZ1WQx31TaCOkQhgv9pQ
b3j2K15iHyyvjvomUMdIBOLtl+1ylwb7aaDecOynvgnUMRKB4MOQ6YczbwT7
ySPW8M0nW0KJnVZDnWr7nsNIBFJzvzxgP3nk7vWYH2iTSf+wn1mMRCDSfjkP
exvsp4FQw91VVs/XWBW50y1qWg11qu17DiMRiOmK2O8IyDW8O/R9PvAtaL/A
B8urU23fcxiJAParDbFnvNxTvserO4We8YL9doSRCMT0w8zqa7CfBmJPN912
a3k04dNqqFNt33MYiYD844Z8sJ88Ug2fm9ajuP1Cni2vS7V9z2EkAtivNtQb
Xq7L7UJ9jYFNoI6RCGC/2lBvuORTnW2ivgnUMRIB7Fcb6g2vXH2NgU2gjpEI
6P4QYz951BuO/dQ3gTpEAOqkxOUu+4J9nwhAndTsvQ72fSIAdYL92PeJAAAA
AAAAWOb/AaKzrW0=
    "], {{0, 242}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 242},
  PlotRange->{{0, 426}, {0, 242}}]], "Output",
 ImageSize->{430, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->623263815]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Background",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The ",
 ButtonBox["Background",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Background"],
 " option controls the color of the background for the levels plotted.  It is \
a standard ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " option, but in this application can only be set to either a valid ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " color or a list of colors.  "
}], "ExampleText",
 CellID->3787582],

Cell["Change the background of each level plotted to light red.", \
"ExampleText",
 CellID->184253149],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"Lighter", "[", "Red", "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->417629370],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
O/RD7VeUQT9qg+4BrzX6/a5etRYMSJy+QD9aECj+779WreN0/e3fV61DjCJQ
RxboZ+TI1/M8Hugn3pcd+k09FZp+Pu37cGw4kED0G40V6Megn5Haz781s/RL
1PbpN1UW1h7LX97Qb7SXFlCHHeFIqhtPPc54y0xTHU+GPgyc8viMqU3NdCHV
FKHosko/z7ffHSmbfu67GEUsj368ajn5XgLQr4agexm4r1et6n08+s1sUj1x
P3yft3g2NfOW9mVSG9A11R1FDs14Ks5bxDdAkX4+n13jd3DqU/uxG+c55nm/
5Ew96Ng/P3+UoF9MqkNp6W4S2qTf1At8Tv3JnvcLCIFZZ3/e7+N+L0K/3ney
/Z6lTv2RDqIFJz4CXa+Xlu2f92tAPw+DfknTj/F6U/TDnO8SB6Lf3We7p/B7
P9MDD0a/JQCUutxsIf2MTFuDfks8f+gN+uVnC/RbOARd+i3ZgBCXKqdoO/Sb
eZZCv5EVDF9+efr3fn16/fmml7uvf8qn39tm198ts29w2EX/CDX+bfungTir
kvF6mbJPgwu6qF7q7etEX+3AfftKgH4jWec5Oh6Futzr3sv4yLo36uZelAwU
TkLr9BuuYHh45OGb9tn2jy4z3T+OT3HoVx1idKLfaMs3f0x4suvRgXB7mezi
boPsLqouh86JN2jnq7/9ybcv+/Rb8GFx6HfOvcN7f/Ge8ZHdoV+E3IuQgQGS
0Dr9HHcrGLb///Lx3fHZ07eAU7NVH+r3Lwz6rTdPbWSqbdeO2+CwC/erZ+ip
rg8bvz3flv2Yikt6mRvF4yXb5bpY7zfVsSI6vWXYzj/+8kffvoLRrxMjXTuP
gqvPOp/RcY5Andxr3/ifX60ZH9k8/WLkXvAMDJKEydDPieeHn3XPnuLgrOu6
/nrLoN85LA79+gaHXfTBH/VU1+4yZP0Oxe5l0t2X4/k7TrqLq8S7aadNPN++
Ovo9P9//vbNcyvl4BFxO1vmMjl74XeVeRz/GRzZPv0i5FyMDhZMwHP1mvoip
9Lv5+GRrv8spkaPapkLVfv1KZMdUF//+PQyki1L7FTzR4LIuZL929/Xd6z2I
KcfL1d43ldtN1vnXfuzc++ev3rX0a/9P+sj6zVbMvVgZKJ6ECrVfQ5jVHaxg
GOi83+Ol9gt93u+UjdLnXkY+aOEunG9PgVMuH58fVg/zF3yMb8PtfESfcnLl
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
B/pB+Uh7b4KzNQRBEARBqvo/uxuV8g==
    "], {{0, 242}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 242},
  PlotRange->{{0, 426}, {0, 242}}]], "Output",
 ImageSize->{430, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->454315462]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->313838477],

Cell["Change the background color for each level plotted.", "ExampleText",
 CellID->234206632],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Pink", ",", "Yellow", ",", "Purple"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->443616456],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnc2O88h1hpV4k2V2vc6uLyHQLllFmywmMNAODMR2PDQCASNgrIFlQAGq
vyvouQAts5kLEGaTaxCQ7bd373MDMilSVEn80Tn1w3Oq+L54PdBHSVU85TpP
H7JE8h9+t/mm+NvFYvHHvyv/881v//RP33//2z//29+X//jld3/8rz989+3v
V99tv/3Dt9//4+9+UW78//J/P/3NYlG9PkMQBEGtjIHh8IYg/eJM6aIo5NMK
TsIQpF+cKV1cJJ9ZsH5DkH4NT+DP7fp9u7e3AH0w1RCkX0Ozd7cpWQf6wY6G
IP3qnbr77ft6+7nbgH6woyFIv3qm7u5QbE6mKv+69HM49ffzYtFr+QyF4xmC
9Kszbz+368KSDcBQ3AMA8zcE6dfIBPY78h0BHQCYvyFIv0YmcCD6jb8LAOZp
CNIvzpSm049CNgAwZ0OQfnGmNHHJg8400C9bQ5B+caY0sfZjMQ0AzNMQpF+c
KR228HP7PJyGIUi/OFP6Kf3cUAYAZmgI0i/OlI5Ev/aL8jkLhzIE6RdnSo+v
eviUcCj/cjME6RdnSo/Xfp4EAwCzMgTpF2dKRyr8QrUAKzIE6RdnSkel3xln
/3IyBOkXZ0oP0S9U2YbyLx9DkH5xpvTQqkdAaoF+mRiC9Ktn6u6P7T2u1ttP
663x2i9I1qD8y8QQpF/debvbFJtd/fq0KQ6721uxC7/grcFihiD9Gp3Dn9s1
kX4BEwcAzMEQpF8jE9gqAmt36ReDVLnSL9e4+g1B+jUwe8tj3gf0nfue6xEp
ozOjxBxv7A9B+tUzdatVD/uAt/VQ7RcPF/JZHCiQ2QEQgvSrM2+rqo/2VKN4
KZwHHEYolz8AIUi/OFO6l35R0SGfxX77PxJF5gCEIP3iTOnp6ZcuGSj7nzMA
IUi/OFPaXvKYIG3TxQJ9cCj1oXg4LoYg/eJM6e5qrxKGqDK3ohv5cKIjUBmC
9Iszpacs/NLNfe5ug34QJCPOlJ6YfucED/3cRuYpAMXjYhuC9IszpR/oN0ES
JVf8OO9wbuUfBOkXZ0rXqx4T52NCue8zMrmVfxCkX5wpXdd+EydjQrnv+Xdh
/KfR4tHxDEH6xZnSgvTTn/7++zlOP/0jcGcI0i/OlJ7+sNdOf/mMJuyk537m
c/ALQfrFmdIt/SZOJf25H+qPQj4HvxCkX5wp3a56TJxK+g/9Au6h3U77Wv8I
PBqC9IszpaVqv7P64ifg7tmg6yVhGoYg/eJMaZHCT3/uBy/Mcjj4hSD94kxp
cfqF7X3k4ewO+xY7WCUHv9RBgyD94qSkA/1GkmXorZHnZjrwymEHWK09hZLD
DoysfQQcz1Aj0G8IUqpjsVgslh9fzyT6FRDUJ9APSk7Hoji2/4jxdz+OlRz6
9e7VNMHKjgCvdwhSqePHpeqrxZn/svQ76zvzHw9HCn/4B/pBGSh1+ukBYNSd
0XbVG69fCFIp0E8GCCGClRoBdr8QpFI+9FMCQNl9cARCoGBBPwhylo7ar3pm
eqP19vOy8foo4fVx33ysu8WNOZ/bdftgYkovdCDYXTThbHZhO7J9beHtx5dF
tF52h2Jz8uwRglRKBf12G5sSh91lS43BkRdu9NtVydnQj9YLEX233XANhz1o
6+1PZb+vq+Jt+aRxt152Nciu9HPuEYJUSgX9LJdVU4kLqzxrao/uFps81Pb3
2/cyJXebuil6Lyz6VSFsNnbtF6qjnljK3ksWrV4j9LI/bneXsrz5Yt3aJdLX
L8Wqt/3+HiFIo75+fNx+7idPv2vVVDOwycF1k1YPW3rJM+prPlr0I/ZCoV/7
z+rQ71r7tTAP0lHPcFWHocufLjsQp5c7+pWtXYJ9GWq/v0cI0qevH4VV+Qmv
ejxAg1X7Ueh3Oxd3UdlakGKpuwMWARrSxqj9qnAuw/Xzy/KHYnW40C98hXlP
vx+WL3XtN9Q+aj8oDVWXuC196BcOfdWqx40YhncKy+HUX8Dzfj29W+f9GhJG
OO9nc+bLhX5Rzi7aJVzZSF1nlsfaTzvCeT9Iu1Qc+V5XCW9V2ZmzfMle+2jp
F2KRtLfrts4Mvrh8z6VmxL68NiMQp5db0XhYPW9/cM33ckG5dV0lBAnreJSn
n6fFL3kQ/83hNLvh3kutrx/Lx4MNCJKUtjVfn8ScT78ie+JLv0vxh9oP0qOk
r/UIkJgh+hUPf4IR8Gq/qftQ+EG69Ix+PVdh1NaDPjs9p+9RCf1ij4An/SBI
oZ7Qr3vZwvUtnfSbkkWq0Bd7BLxahiCVoh/53v2MDfSbE/18W4YglaLSzyoC
a2uj33laHGk77I06AqAflKVs+t1dDWGd5bOvwmjdflA85YMlqQLO6BwB3zYh
SKfs1bieqdu5CuNqVdwLlqecXhTSL8YIBAgWgvSrM297r8KorZl+en/5luAI
BGgNgvSLM6VBP/FgJxiBMK1BkH5xprRO+k1gzYWfvYeKgoUg/eJMaW1LHpM5
FfoF2cMw7UCQfnGm9DzRFwwIKexkMIpCkH5xpvQ86ae/8Au4n8EihSD94kxp
0E+z/fczZKQQpF+cKT1n+onvBn1X3fY2MOQhSL84U3qGqx6pFH4POywfKQTp
F2dKzw194ZmgdYfDhwlB+sWZ0rOln/huOOwza7dBP2iO4kxptfRTep8T0dGg
73aUMCFIvzhTGvRLxaw9B/2gmYozpWe16pEu+uydf7r/scKEIP0ansDWs7Mb
zwd9EbEw+f6PhBAxRgjSr6HZu9s83N7qPEv6ie+GfwhDgdDrQxdDkH71Tt39
9n29/dxtZku/1Au/biB2LPbGWDFCkH71TN3dodicTFX+gX7iexIwll7H6heC
1Kv7XI+7LZ17O89k4SMb9NnhTMS92hCkXyMTeK61X06Fn5ghSL9GJvC86Se+
G2kbgvSLM6XV0i8gr1D4hTEE6RdnSoN+MNUQpF+cKa12ySMUsoC+YIYg/eJM
aZ3oqw366TIE6RdnSuunnye4gL5ghiD94kzpvOmHwi+kIUi/OFNaM/3Oqp5q
AUOQfnGmtNpVj9agnxZDkH5xprRy9J31PNUChiD94kxp/fQ7K3mqBQxB+sWZ
0lnSD+iLYgjSL86UToJ+Zw7QprvnydwMQfrFmdL6Vz1q05kG9MUyBOlX39S9
3eJvs7O3J4G+2hQAAn0RDUH61Z23u00LvdOmOOxubyVEv7PsUy1gCNKvzrwt
C7/DZpN67Vdb7KkWMATpV2felvVeC72KhMnWfrVlnmoBQ5B69T7X40a8+9s7
J/pcD3BPwBCkX915a533y6D2g2UMQfrVN3XbgnCez/WAAxiC9IszpUE/mGoI
0i/OlAb9YKohSL84UzrFJQ9YxhCkX5wpDfTBVEOQfomnCZylIQiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCGFrAcBxDkHKJ5wicqyFI
ucRzBM7VEKRcPfP28/jWPL7o8CqdQXC6HpNZmIRtpHcAHrYX/U6rFnqnQ3E4
3d6q7u8nn1OSNtW9m+R3I5ERiEi/9vGCMilm5LJbsGtZkwP3oV9Z+B0Oq97a
D/QzoJ8a+iWRiVl1LWty4D70K+u9FnoVCe9rv+bm9tI5mELu52nOCIB+eXUt
a3LgPvS7I95p9X58ad+aM/f4uZ+nOSMA+uXVtazJgfvQzz7v1639hqb6X765
WTxDdeR+nuaMwET0+/mfF7UVZmJWXcuaHLgX/aw1X7vwOw/Tz0Zf3gA0oJ8a
+tVq0Qf6ZW5y4J70G/LQeT/Qbz7mjEBc+tUvQL+5mBx4PPp1Nz4QL28AGtBP
Mf2mAyA5E7PqWtbkwKen3/iWbGxAP5X0s1+oysSsupY1OfDJ6Ndb6WVc/hnQ
D/TjZGJWXcuaHHg8+j0AEPSbmzkjEJd+9pKHAf2yNznwePR72DJEOdAvV3NG
IC79zD3xQL/MTQ4c9FOQ+3maMwIC9JsIgORMzKprWZMDD0K/z+Nb9/d+9sHv
yBFurge/BvTTSr/uPzVkYlZdy5oceAD6nVZPf+08zjfQL0tzRiAu/drzfu1G
0C9nkwP3pd/n8v19+Xl/ke8Z9AP9JqffbtUecKy3L7ftqP1mZ3LgfvR7PRSr
0/nxFgfne/o9PbYF/bI0ZwT86bffvt1BrzXoNzuTA/eh3+3Gzp1Lfe3zfkT6
ZQZAA/pNSr/d5m29rufcame/BfrNzuTAfeh3M6H2G5//oF9+5oyAN/1eN0Wx
2V1e75frzevtre5JPwP65W1y4KCfgtzP05wR8Kaf7dfNerlv/9l7Z3vQL2eT
Aw9Dv467R77jn8/v4NeAftPWfi3xUPvJdy1rcuDx6Fe/IGIN9MvPnBHwpp+1
5msXfmaAfmYyAJIzMauuZU0OfBr6Ub4C+mVmzggEoN+QQb/ZmRw46Kcg9/M0
ZwTSoJ/LJXLkTBSEQG4mBx6PfvSTfrUno980d5Y2oJ8a+nVXPQyffo53RiVn
oiAEcjM58Hj0q19oo99kt9Y3oJ8a+gWp/UC/ZEwOPCr9WISZZuED9JvMnBEA
/SQhkJvJgfvR7+X43l7psfy03moPN1h4iU2/KR8sYkC/fOnH+CI5EwUhkJvJ
gXvRz3qe7+lQdJ/ny2XLNPSbpkcD+mmiX3c7C2LdW0NTv07OREEI5GZy4F70
s9z7NHNV9KPcWj/gDhjQTw39/Fc9em+OCvopNTnwMPSzisDaoJ8B/dTQL1Tt
5/BFeiYKQiA3kwP3p195zPuAvrPfeb9IABy/ufTTj8XM/TzNGQEx+hE5htov
JZMD96NftephH/C2rrnnQBIp+gUv/wzop5t+hlPFgX4pmRy4D/2qqm/4/n5u
GIlEvxEUg36RzBmBVOn3/OvkTBSEQG4mB+5DvxHb93hhOSr9KO+CfqHMGYG4
9OsuedR2o59hlX/kTBSEQG4mBx6PfgprP8q7oF8oc0YgLv08a78u6EA/1SYH
Pgf6PT0D2b4bcNnFgH550a+7BfRTanLgOukXFoBE+oW9As6AfqAfJxMFIZCb
yYHHo5/beb9zhPKP0mDwg18D+qmhn+d5P9AvMZMDj0c/Z4CAfnmYMwJx6Yfa
b14mBw762Z+xz/5NmPtP/PuicsABmaYvzgiAfjz/5X8Wpafp+uc/L0rHiCJW
R+TA49FPyZEv8Twe6Be8L84IxKXfYLpFph+lfRLHOoFEol/vWIF+DvRTUvvR
W1NLv0TNGQEZ+g2VhQXh8ZcP9OvtpQRUlQgXUj14aLvDV0aaqnnSdRU4Z/uI
uU2NdBGqqZH/x1OhH/HrT8tLZ/rZ33IoYt3o51Ytp99LePoVEPQMg8diUao4
Tke/YjgpioH74VO+Qmxq5Cvlx0LtQN1UfRTZtcNb03wl+A4I0o9S+w3VdZTP
hDrydfOU5/3SMznweoIdPz6+hqDflFSH0lKi9Bv6AOXUX9jzfvEgMO7sz/t9
PR6D0I9SLFEc6tQf6yA64MJHpOv10rJRf97PgH4Eg35J08/h86rohzVfH0ei
39N3m7fImRjegl3Lmhx4PPr5ADDU5Wae9FOybA36+bg99O59F/TL0OTAddZ+
50AAcaafzw7EuFQ5RRs19Bt5l0O//fbtStK37f7y7uHf63+vty/N53erZsuP
/+JOv/1yvV7uHxrsdtFu4UKgbL8JZLXz7WXAlAY9uthtis1uqC9D7SsF+vU8
N/N6Y9W342fz+e6WsyvBPo9v78eX+rvEjrp7PpL7ZftNONYT8bi9UExp1q+j
10OxOg10V44AubsU6Pe6sVmxeb1s+c3yp/Ld8kXNQ/tF/ZYD/crvllla06+3
5YcXQx7qujcQ516GunjaoHMXl/EpWvp129lR+0qAft3nZpZbagyOvHCm36n6
I9HQ71fUjhj08wiHHcjTZn06OtV/Ta/06zRVTUJqdynQz3JZO5XQKP/7wy9f
Lu82pYhVs+2+FKuDA/1etusyPV83dTt2g90u7PqHTr9q51cbu/bz6mUkisWN
tOG62G+Xu0sd3nylp+Utta949KsVgH6W6+dm1rXZZUtTe3S3nN2OQD+X72VW
nlY1/f7v16SOWPSrQjis7NqPGA7bdSznG2+DdvRyPL5eyvLmW92myklI7i4p
+lkZ/eVf63ebZKypWCfpj79xoN81Ny36tQ12u2gJwKJfdQx4rf1ajLv3MuS6
QrsWWqG7uKPfY8tbal8N/T4+CL935tHPmXuD9LOy+PoopSb7uluG+Dnqa0pa
9KN0xKKf/Qi8FuYOvZBcl2fXKitCR3f0e2iqnITk7uLSr1YQ+j2gI2ztdzsd
V5+iWu5j1X6vN0b59jIUSD1KZRE40KBfFyFrv/P5WDy/3oORF6Ho1+LrARr0
2o/e4+103EX//euXkn7lf5921LvbQ/S7e+z7BbORar8qnHrEyiJwoFnvjpKv
/Z4C8GHV48aNRbTzfotb7Rf7vF9DwtDn/XpoE7gLq4TzPu9XVX/LxfLJBR+9
k/9xPaKlX7jyr/PcTNr5K/eF1wuUqhZ+tSr+k3eirO3UEM77NSSMc96vBzXh
O7JKOM/zfpdLLnv/Aiuh33XR8FaYmWhrvjf6RV7zDdDLIJ2agWr/XgTt4u4A
1nPNl3ap21giNyfwLfp5oq8lSe9zMymLiQHo983if//jeUc8+llFZvsM0Dhr
vre/Te3/NaE7ujuA9Vrzrf789v/9FaSf81XABr/3EzQ58Kby8171uDugC0o/
n+96/ujOoQUK/WZizgg0xZ+22g/0S9LkwMPQzyoCa4N+BvQjj8Cl7hs88eKZ
C3WtOfKBGPS7bSRnoiAEcjM5cDr97hYFrJM29npEa/tY1Tl9fAgW8FIRt6tF
DOiXwrUeBvTLz+TA/Wq/znrE1QFrv4ToZ3/egH6gHycTBSGQm8mB+9Cvdz2i
dhD6nb0vtp14B+wPG9AP9ONkoiAEcjM5cL/ab9Cex7ytQb90zRmBuPTDeb95
mRx4PPoFySA3iAW8ywro52zOCASgn/V7vLvfdKH2m53JgdcTLNSd7VtroN/0
OwD62eaMgD/99tu3/h/Ngn6zMznweE81CpJBblVccPpRWnv4pAH9JqXfbvO2
bi5guF7GVfsp/UYM+iVpcuAU6rnRT/DUX0D60Vt7+JgB/aakX3VHke5NPypP
Q7+Hj4F+kiYHHo9+oZII9EvUnBHg0e/uXijdC+Sti2TNs3u8jJtCv+7H7nhI
zkRBCORmcuD66cd1wCUPu0HuxwzoN23t1xIvVO1HRF/3k3f/JGeiIARyMznw
IPSzbifSONRhr4PDoo/eIOj3YM4IeNPPWvO1Cz9Do9+Tc3fMr4N+wiYHHoB+
11vB2xvFa7/gDY632f2MAf3U/N7v6WdAv6xMDtyXftat4O3tOdGP0mb3Awb0
S4d+vQb9UjU5cD/63d0K3n4L9DOgnxr6ua16gH6pmhw4nX3de7w83Ar+4Trf
gD96YTke/UaaBf265oxAXPq5fRH0S9XkwOn0G5u9amq/4Au+lGZ73zWg38zo
134Y9BM2OfAs6Tdxy71vGdBvNvSzP/z442dyJgpCIDeTAw9Dv46lfvEC+ukx
ZwRyo59DJgpCIDeTA49HP5GMi02/buND2w3op4Z+sVc9DOinyuTAQT/PxkG/
IXNGIC793L4I+qVqcuCgn2fjQz0a0C9l+rHQZ6zTfaCfvMmBx6Pf9Pd4ibTg
O9L+SI8G9JsT/cw9AB0yURACuZkceDz6hUoiLv2iZjToRzdnBLKin1smCkIg
N5MD108/uiejX93LeKlpQD819Iu95GF/BfSTNzlwT/rdLvfoPM08j6s8ert4
sHfu52nOCMSln8O3HOjnmYmCEMjN5MC96HdatdA7He4e7Jtr7XfuADBE7udp
zgiAfpIQyM3kwH3oVxZ+h8NqqPabONdiL3lw+zKgH+jHyURBCORmcuA+9Kue
Zn6FXkVC0dpvMvRFyP08zRkBYfqNPZhjqkwUhEBuJgdOZ1/vPV5uxLu/1Hf6
e7yAftrMGQE3+u021ycZmdu9nR+fa0lZ9QD9sjI5cDr9eiatdd4PtZ9H7udp
zgjw6Vc9xK1on+NW/bN+vFH74mqH2q9/9TZyJgpCIDeTA/ein7XmG+8eL0Ss
gX7azBkBLv322+Xu8gTz21Msr4/zuCsIjQf9Js5EQQjkZnLgnvQbcsBjXrfH
aojbgH7Rj3zv6Hd9jtttY23Qb3YmBx6PfgHzyOHG8uI2oF8g+g0/vZda+z09
9Qf6ZWVy4KCfgtzP05wRGNPw7LXKvBDn/fpvzjxVJgpCIDeTA0+IfqzHaojb
gH5T0m90zZeSCKBfPiYHHo9+YX/uwn2shrgN6JfO7/0M6JeTyYHHo1/YVOLe
WF7cBvRLk34hf+7CyURBCORmcuCgn4Lcz9OcEYhLP9YPnkOij5OJghDIzeTA
PelXXex2WYo7ft5tj0Q/+o3lxW1APzX0o3wM9MvH5MC96Hda1Ze83V5cHeMa
N9AvLXNGQAv9Ah/2cjJREAK5mRy4F/0+l+8t/eLf44X1WA1xG9AvKfqZoVvT
T5WJghDIzeTAveh3vnDvetMDe3s8+hFvLC9uA/qBfpxMFIRAbiYHTmdf7z1e
mpKvLAKL1cmaz5Hu8QL6JWTOCMSlH2XVwwRf7WVmoiAEcjM5cDr9upO2pN/1
5gavhw79YiQU/bEa4jagnxr6JZGJWXUta3LgPvQ7n1+O780fVvv2Vuf49KPc
Wz6d3M/TnBEA/fLqWtbkwP3oN+h49/dLAn3M3M/TnBEA/fLqWtbkwOPRb/ob
nKqyAf1AP04mZtW1rMmBx6OfePalk/t5mjMCceknCUByJmbVtazJgYN+CnI/
T3NGICL9YHjI8eg384NfA/oFoh8EKRBj5s+Ze/zcz9OgH5SRGDMf9AP9QD8o
I8knFJypIQiCIAiS1F8Bw5NPmw==
    "], {{0, 242}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 242},
  PlotRange->{{0, 426}, {0, 242}}]], "Output",
 ImageSize->{430, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->80591526]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Joined",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 ButtonBox["Joined",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Joined"],
 " is a standard ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " option that can be set to ",
 ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"],
 "/",
 ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"],
 " to indicate whether or not points plotted by ",
 ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"],
 " are to be joined.  In this application, ",
 ButtonBox["Joined",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Joined"],
 " can either take the values ",
 ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"],
 " or ",
 ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"],
 ", in which case either all or none of the points are joined, or Joined can \
be a list whose values are ",
 ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"],
 " or ",
 ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"],
 ".  In this case only points at particular levels are joined."
}], "ExampleText",
 CellID->363095782],

Cell[TextData[{
 "Set ",
 ButtonBox["Joined",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Joined"],
 " to ",
 ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"],
 " so that all plots are joined."
}], "ExampleText",
 CellID->472873577],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->612800831],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 70}, {396, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{396, 70},
  PlotRange->{{0, 396}, {0, 70}}]], "Output",
 ImageSize->{400, 70},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->67808858]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->231725129],

Cell["Plot only particular levels as joined plots.", "ExampleText",
 CellID->146723502],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True", ",", "False"}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->108101963],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
GcKxBEEQBEEQBEEQBEEQBEGQNcH/AXnOTls=
    "], {{0, 70}, {396, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{396, 70},
  PlotRange->{{0, 396}, {0, 70}}]], "Output",
 ImageSize->{400, 70},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->144767262]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "PointSize",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The ",
 ButtonBox["PointSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PointSize"],
 " option controls the size of the points for the levels plotted.  It is a \
standard ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " option, but in this application can only be set to a positive number or a \
list of positive numbers.  "
}], "ExampleText",
 CellID->305697223],

Cell["Make the point size larger across all levels.", "ExampleText",
 CellID->174829370],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"PointSize", "\[Rule]", ".02"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->379961313],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
IpFIJBKJRCKRSCQSiUQ6CP0N6nDHZA==
    "], {{0, 70}, {396, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{396, 70},
  PlotRange->{{0, 396}, {0, 70}}]], "Output",
 ImageSize->{400, 70},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->652698940]
}, Open  ]],

Cell[TextData[{
 "Use different values for ",
 ButtonBox["PointSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PointSize"],
 "."
}], "ExampleText",
 CellID->95360769],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "400"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"PointSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{".01", ",", ".015", ",", ".02"}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->149647533],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {Hue[0, 1, 0.72], PointSize[0.01], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
6qX67vPq9L/8l+/DfwHFHKkh
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Background->GrayLevel[1],
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->300,
    Method->{},
    PlotRange->{{0, 400.}, {-6., 4.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0.06, 1, 0.9], PointSize[0.015], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxdlntUlHUexkdEFkWNEAxQcASXDYERRCTKgQe5KYJyHYbbMMwVLxtqmNTW
8Y09R8vStcg2SQ9DQbqmxlEUTJNXYhG12AljURQUBO8mJpgK6u6e9/v9Y5Zz
OJzPeXh45v3x+77fZ6auOM1oJ5PJWv/7/b+f/OW4Z9MTTV9XlESDUU6+1QE+
4g1iGawd/gfGj9wndkTp4baTnX/9ndgZ5xP0A1eHRold0aWclpU1awwkdkeL
3kN++/hY4umwqh/1bIl2IJbjU3l9Yt23jsQ+yE51bL9p70Q8C6awgqnnIicR
+6GsalNycO4LxC9j/bLaH+5940w8G64v1a8o3vEicSCmrp7g/6d1LsQK1GUd
tYuInEIcjL2Vw+0XHjCHYHR2qkfadlfiuVh7x+fQs5luxKGIVauF1B3M87C0
eeKDn58whyGyOvMDr/ipxPNxvrw1+MbbzOF450tV+ejnzK/geMSc5AUW5gjs
DypxsmxjfhXP7leWh69gfg033/rskH8Q8wKoLq32rLvA+UoMZQV4BqxmjsSv
+0vSHg/y80ShpX8otjKPGXBbXHru4CF6fgEY7HxvT89DPq9obHXu2dzrRyxE
o6ywf+eWWD7fhZh71//9Uyl0/sJCnIh/FOi0YzLpMYhReKzdtWYi6THIv/vJ
07VBE0iPRc2UnuGOtj+QHot2j+6IAPU40uMgeH8zfO+sHelxyIjs9q4PlJEe
j7Zz7x1OfvJEun9CPIoPFn95e8Mw3ccE9CT8/VjV5XukJ0CFDuMrlf2kL0Jc
cUjLb+XtpC/CuytXjY2uqW2U9MWg+ZBYWAyaD9ITeT5IT+T5IH0JzwfpS3g+
RElP4vmQWEji+SA9meeD9GREiqeTXm5wJX0p2qx/2begxJP0pdjz+tic60+J
ZcuguXvvYeToNNKXYaTu4a4TN6eTnoLRSYl5b/7TS2KkoGL4Udj7W73p91Ow
TRnm4B87Q2IxBX2t25KqBohlqQiMC3ngFyEnfyrcRs5mW0uIhVR4hviVb6sh
FlPhUpWomX+WWJaGy+72B78YYH8aQuRLrtYMsT8NP68MF+MesT8NZwayK9cP
sj8dv50q1sd0sz8dN5xWvnH8BPvT4a08//WY7exPx523D/sptezPwK0/di2s
lrM/A/vK5pX+uo+eT8jAyLV6Bzt7fv4M/HvdyYtBCXQ+sky8ecDrRPB6Pr9M
LH/ua730KZ2vkAnPD5cfm1pF5y9mIv7ksdO/7OT/jwrjw5LueH3gQX4VtruO
P+hodie/Ckd3KxTfhb9EfhWssxVWw6gb+bPgF+SmSDhC9wFZcFYeaNprmkL+
LHS5WCx9k13In4WyzRenJdY6k1+N5knGjo2fTya/Gn0fDm1Y1epEfjWOLI9r
nP6A7p+oxprzek3JNAfyZ+PHeMWmtFi6v8jGhNDPLm5fLSN/NlqrfvEOjR+R
7r+YDZ+mOU7G74dpPnLQNOeL6+qkQYmRg59+/5ty+v0BmpcczBcVoRVeneTP
wYLGht6ZzbvJn4sov8aZ35ZapflFLoJVsw4EfdxL85wL07UNje2ltyQWc7Hq
rHOb7zreZ3lY2NIUXfY6vS+Qh4b+7m5h1mPy56FxUUBnQTntNzEPodevKXfX
Pyd/PjaOXRXllkD7DvkI9PT9cdxmO4mFfLjvanmu+Yr2n5iP70pCKuw/sZdY
psG/kio2jMuk9x00qJ0YuG/nbWJBg77bL46EZNK+FDUIHK8Qcz7m/VmAveGX
Q7sqiVGAj2Ysr60SiIUCKPaIojWU/QVwaNgvO3yU369aXH5H13bahViuhWdJ
50/1UfT5oMUL8hWRGdH0+bVaiFtW+Frc+fm0yFetwakWeh9btPC/4dihrHhG
56XFV2fe0izOGZH4ihbFk8u/fmzl/lCIucp/pPeOGZJYXojmgH6PQ730vkYh
Lpw2K0ZjrkusLYTw0a6GatMl+v8UYuu7d4dLrzZJbCnEkRk+Z+Zuaqb7UgjD
LcvGN2p6JL5SiOqW6udPu+nvy3SwzKv7c/7Ep5Svs90f0NnuD63Odn8IOtv9
YdHZ7g9RZ7s/ruj+b3/obfeHXG+7P6C33R9ave3+EPS2+8Oit90fot52f1zR
c7+SWGbgfiWx3MD9SmIYuF9JrDVwv6J8A/cryjdwv6J8A/cryjdwv6J8I/cr
yjdyv6J8I/cryjdyv6J8I/cryjdyv6J8I/cryjdyv6J8E/cryjdxv6J8E/cr
yjdxv6J8E/cryjdxv6J8E/cryjdxv6J8M/cryjdzv6J8M/cryjdzv6J8M/cr
yjdzv6J8M/cryjdzv6L8Iu5XlF/E/Yryi7hf0f0r4vmg93MRz4fEliKeD7r/
RTwfdP+LeD6i/gNmbcKY
        "]]}, 
      {Hue[0.17, 1, 0.4], PointSize[0.015], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxdlk1sVFUYho/iohAbR9RQLdHB1khCsbMw2kYip4sStKhjxaaFGq4laCng
3OnM/bG4mI2xBMRRJFVS48SQ6MJoTf2phJZBXLR20UE3EtJyURInJtSJCyNG
ot895/3iOTZpmie9c7/z3pl3nm/dQKZ7z41CiFn6jf/qn71SHN23+EJjw2aF
SeLxmcH3q62aJbHMyg/Pt2t2iFOnD+a/69BcIC6urDae2KK5RHxzz6Gr3V2a
y8Sjy3c0157SHBG31d9++KFuzWJIiu3Vl98b2I75xM7MgTUjPZhPPPvubxdH
ejGfOFyuXRnYgfnEV/7Z1Znqx3zitpV3bbj8HOYTi9ZvotwuzCeWn06/mHMw
f58U0Scdcu3zmE9c+KJnYRIsiVuCxYPtA5hPfNqdnfkYXCCe6jvZVL8b8+Pr
5+sf2wEuEw+evO3yMXBE/Pncq599DRb7pdi63Pr2PDhJvG2jCObAkrjYdWf/
JNghbnuj0ncIXIhf3zp2oovnE78yvND/F85Xju/30eu/HwdHxFOPdJ69GywO
SLH+wYGO45yfeNPhhevX8HwkcfMPQ8eeADvEjjfvrMPzLMR8T8v9o3jeJeLZ
n/auOb8T8+P7/9p49Xof5hMP3vtoIYH3U7xE85zt51bh/U4ST3w1fHb5Gcwn
vmnFxvGZpzGfeLD/0uprT2I+cfWX1z549nHMJy6Nrxgb68R84tHFn0+dk5hP
XDc6ujj9MOZn6Pkeyb85tQHzif+8dds7e27B/Az344yen+F+aC5kuB+aSxnu
h+ZyhvuhOcpwPzQLl/uhOeFyPzQnXe6H5pQrp8TF1t3fL+F8rqz2tjX13nBJ
/z9N17uqHzgv8Y+qH5pdYqn6gfMT635oLrrcD+RxuR+aJ4hD1Q/kI16v+qG5
QlxW/UBe4gnVD821+HrVD+TPcj+Qn3hK9QP5s9wP5I9Z9UMzPXv0A/mz3A/k
J5aqH8hPXFD9QP74fqofyJ/lfiA/8VrVD+TPcj+QP8v9QH7iXtUP5Cd2VT+Q
P76/6gfyD0vRoPqB/MPcD+Qn3qr6gfzEZdUP5CeuU/1AfuKC6gfyE0eqH8hP
XFT9QP6YVT+Qnzih+oH8xCXVD+QnFqvjfiA/sTT8UYnnG/6Ihm1/1IhbDH+I
nO2PBLEw/JEkPmr4I0XcbvhD5uREj+GPdE4Wdhr+cOj6OcMfLnHe9Adx1fBH
kXiT4Y8S8d8P/OePCeIOwx9l4iXDHxXiEcMfUc72R434lOEPkScfGP5IEKcM
fyTztj9SxF8a/pDEWwx/pPPcD+Qnfsvwh5v/nz/ytj+Kee4H8ue5H8gfn9fw
R5m42fBHJW/7IyJuMvxRy9v+EJ4UQ4Y/EsTfGv5IEt9n+CNFvN/whyTebPgj
7Ulp+sPxbH+4nowSF6adC0v4/Hty1eSRhro/8H1a9Gx/lDzbHxOe7Y+yZ/uj
4tn+iDzbHzXP9ofwbX8kfNsfSd/2R8q3/SF92x9p3/aH49v+cH3er5Df5/0K
/fd5v0L/fd6v0H+f9yv0n9j0R8W3/RH5tj9qPu9XyB9wP5A/4P0K+QPer5A/
4P0K+QPbH+mA9yvkD2x/uAHvV8gf2P4oBrY/SgH3A/kD3q+QP+D9CvkD2x9R
wPsV8ge2P0Ro+yMRcj+QP+T9CvlD3q+QP+T9CvlD2x9OyPsV8oe8XyF/yP1A
/pD3K+QPeb9C/pD7gfwh9wP5Q+4H8ofcD+QPuR9n/gUqZYH8
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Background->GrayLevel[1],
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{{200, 399}, {-13.484907156720427`, 10.656480031974237`}},
    GridLinesStyle->GrayLevel[0.5],
    ImageSize->300,
    Method->{},
    PlotRange->{{0, 399.}, {-8.484907156720427, 5.656480031974237}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {Hue[0.11, 1, 0.72], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxdlk1sVFUYho/iohAbR9RQLdHB1khCsbMw2kYip4sStKhjxaaFGq4laCng
3OnM/bG4mI2xBMRRJFVS48SQ6MJoTf2phJZBXLR20UE3EtJyURInJtSJCyNG
ot895/3iOTZpmie9c7/z3pl3nm/dQKZ7z41CiFn6jf/qn71SHN23+EJjw2aF
SeLxmcH3q62aJbHMyg/Pt2t2iFOnD+a/69BcIC6urDae2KK5RHxzz6Gr3V2a
y8Sjy3c0157SHBG31d9++KFuzWJIiu3Vl98b2I75xM7MgTUjPZhPPPvubxdH
ejGfOFyuXRnYgfnEV/7Z1Znqx3zitpV3bbj8HOYTi9ZvotwuzCeWn06/mHMw
f58U0Scdcu3zmE9c+KJnYRIsiVuCxYPtA5hPfNqdnfkYXCCe6jvZVL8b8+Pr
5+sf2wEuEw+evO3yMXBE/Pncq599DRb7pdi63Pr2PDhJvG2jCObAkrjYdWf/
JNghbnuj0ncIXIhf3zp2oovnE78yvND/F85Xju/30eu/HwdHxFOPdJ69GywO
SLH+wYGO45yfeNPhhevX8HwkcfMPQ8eeADvEjjfvrMPzLMR8T8v9o3jeJeLZ
n/auOb8T8+P7/9p49Xof5hMP3vtoIYH3U7xE85zt51bh/U4ST3w1fHb5Gcwn
vmnFxvGZpzGfeLD/0uprT2I+cfWX1z549nHMJy6Nrxgb68R84tHFn0+dk5hP
XDc6ujj9MOZn6Pkeyb85tQHzif+8dds7e27B/Az344yen+F+aC5kuB+aSxnu
h+ZyhvuhOcpwPzQLl/uhOeFyPzQnXe6H5pQrp8TF1t3fL+F8rqz2tjX13nBJ
/z9N17uqHzgv8Y+qH5pdYqn6gfMT635oLrrcD+RxuR+aJ4hD1Q/kI16v+qG5
QlxW/UBe4gnVD821+HrVD+TPcj+Qn3hK9QP5s9wP5I9Z9UMzPXv0A/mz3A/k
J5aqH8hPXFD9QP74fqofyJ/lfiA/8VrVD+TPcj+QP8v9QH7iXtUP5Cd2VT+Q
P76/6gfyD0vRoPqB/MPcD+Qn3qr6gfzEZdUP5CeuU/1AfuKC6gfyE0eqH8hP
XFT9QP6YVT+Qnzih+oH8xCXVD+QnFqvjfiA/sTT8UYnnG/6Ihm1/1IhbDH+I
nO2PBLEw/JEkPmr4I0XcbvhD5uREj+GPdE4Wdhr+cOj6OcMfLnHe9Adx1fBH
kXiT4Y8S8d8P/OePCeIOwx9l4iXDHxXiEcMfUc72R434lOEPkScfGP5IEKcM
fyTztj9SxF8a/pDEWwx/pPPcD+Qnfsvwh5v/nz/ytj+Kee4H8ue5H8gfn9fw
R5m42fBHJW/7IyJuMvxRy9v+EJ4UQ4Y/EsTfGv5IEt9n+CNFvN/whyTebPgj
7Ulp+sPxbH+4nowSF6adC0v4/Hty1eSRhro/8H1a9Gx/lDzbHxOe7Y+yZ/uj
4tn+iDzbHzXP9ofwbX8kfNsfSd/2R8q3/SF92x9p3/aH49v+cH3er5Df5/0K
/fd5v0L/fd6v0H+f9yv0n9j0R8W3/RH5tj9qPu9XyB9wP5A/4P0K+QPer5A/
4P0K+QPbH+mA9yvkD2x/uAHvV8gf2P4oBrY/SgH3A/kD3q+QP+D9CvkD2x9R
wPsV8ge2P0Ro+yMRcj+QP+T9CvlD3q+QP+T9CvlD2x9OyPsV8oe8XyF/yP1A
/pD3K+QPeb9C/pD7gfwh9wP5Q+4H8ofcD+QPuR9n/gUqZYH8
        "]]}, 
      {Hue[0.06, 1, 0.72], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxdlHlMk3ccxgtEFBXGIVAKomgpA4kWLJ1CsY+AhWI5etcs85gXmuqWuYyx
GfdmmS4YjogaQQm4bNnBjohuJs5kFrcMtBkaj8UaiSSbjExCGlGGCnHT9/n9
wZo0zSdPn/f6vt9P2utv2LaGKhSKLf99n/+KT2XtjhZrxaRRpqBxyBBy8Nyd
GWCMkdd2XzqQH0mehb6evI8yY2LJ0eiIf9Caaognz4P2m4YjnhglWYn+e7Ef
b9+vIqfgi8uD/s1NKeSFSN50NjxBnUpehGddTVVKLCCrcWqHZWZwQLAG/XvH
RhY8Ffwy9u3clZV7THAW8lQm7Y9nxPGy0RE36Kl0zCcvhVdz1Vu3L5mshXlV
oOizlUnkHLSMDdz8pymBnAv/h43mFfVx5OW441LtadNFk3VYnjCSlVwYQc7D
qZjgstSvQ8h6qA7XlLd+Osbn+wqqphR19sjfyCugKjDXBQaGL8i8EpwHOR+c
h0/mAjEPsgEtpvO5hxriyYXI0YwfTE9eTF6F0+GJSFKoyUb89Vb9z2eK0smA
Y2vwXk6pRmYJaNK+GjYnNoP5akjO3oy5J8nSatzSfR42MSryImz7qW68eUrk
RTD+oI9v84u8GKrIxcqBdSIvxpWIN7Mzung+RQn0cTVnDRd4PVIJNJ3etGvt
4nrX4PLj0b/fL+X9SGuwredXdfsvacxN2L2k8ZxFtZC5Cao57xxt7EhhXopb
syYSm28qmZeiV308dmh4HvMy3J/Zd2LncDTzMuR3f/tJfV8EczPWlfj17kAI
czP0B6buN5gecj7l+Cq68ftLS36XWSqHIeq7NEv9IOe7Fu+6+ja/F3wos7QW
GzxJmd2LFJBzC47706OuzOa+SRZYjvYc600R71MF9Be9kdllc5lXYNI5v1Mr
RTGvxIbrrVGD519iXom2x0MB4zhZUYUnN247tiwVeRVqdA0b394u9rkahRm+
7vYvZ8uMaty2nAw8mAzn/6txZO/p/WV7QmX2VaO8v9Z9t+AJ788KR4LXctE8
IjOsCH0xkC7erxXBP5qfFj9qk9lnhe6DPzNrO8N4fhuGEkcnnq3nfsA2fT8k
2/T98Nn+tx/26fsB+/T9kOzCVzL77MJXnK9D+Ip9h/AV+w7hK/YdwlfsO4Wv
2HcKX7HvFL5i3yl8xb5L+Ip9l/AV+y7hK/Zdwlfsu4Wv2HcLX7HvFr5i3y18
xb5H+Ip9j/AV32ePmAefv0fMw/gveby1Sw==
        "]]}, 
      {Hue[0.12, 1, 0.9], PointSize[0.02], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxdlE1IVFEYhk+RKEnQRokIu7kYECVrUbvyoxauojIYbDLnjOP9CfoDUTMF
b4lFv6uIkFGnRWJJQlGmUnk3FURBaSEU1JRFIBUZBBmFfd3zHji3ARke5L2v
3NfnW9NwqMZeLIRo5J9/3+qzm8Tdhzt2PZJVIRJzbCxT3H1Qsc98RJY/n2lW
HDD/mfwwUtGhWCRItP5o/rroGPLM+5e0Tg92Ic98tbMrJU4gz9zXvnLFwknk
95Dob6r9kjmFPHPiZnti6jTyzNf6Nh3tPYM8852zF1f9BIs6EgXVmal3YGKe
TFTPJ8A+s3ydP2zjeQHzWLzyWR76xF4Sv67UfCb8PcQ8O/A+VtKNPHOwM756
4DjyzN/Lb/c86ES+nkRPUdmN+23IM299uW56exPyzAXXKwpj+5Bn7igYnDgX
Rz5Jfu/yuQtrN06ofFLvodhP6j0UB0m9h2Ih6fD5vHvT80/U8yxJlwpLissq
3uJ5ksTHzaWPi4bU7yXzYLgHni/1HoqzzNlwD/RJvYfinNR7oD9FYiTcQ7HF
vDTcA/3ML8I9FEvmunAP9DOPhnugP6X3QH9K74H+lN4D/Q0kvoV7oJ85E+6B
fuYt4R7ob9B7oJ/ZD/dAP3M23AN7MY8bfuSYSw0/RJpEi+GHlSb6bfhBaZIt
hh8y/Z8f6agfWeaM4UfAfNnwI5cmv9bwQzSSGDL8sJjHDT+IOd/wQzaSP2X6
wVxv+JFlHjX8CJhNP3LMnww/hE3+hOGHZVMwZ/hBNmXaZmarlz3F+7fp1a31
C7Vzb9DP+coN2/oPDOP921E/AjvqR86O+iGcqB+WE/WDHH2v0O/oe4X9Hb0H
+h29B/7/nKgfOUffK/S7UT8sN+oHufpeod/V9wr9rr5X6Hf1vUK/q+8V+t2o
H8KL+mF5UT/I0/cK/Z6+V+j39L1Cvxf1I/D0Huj39B5VfwFB59W7
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Background->GrayLevel[1],
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{{100, 200, 399}, {-16.995238973962113`, 12.995238973962115`}},
    GridLinesStyle->GrayLevel[0.5],
    ImageSize->300,
    Method->{},
    PlotRange->{{0, 399.}, {-11.995238973962113`, 7.995238973962115}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 ImageSize->{319, 566},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->323711165]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ticks",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 ButtonBox["Ticks",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Ticks"],
 " is a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " option that in this application is used in conjunction with ",
 ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"],
 ".  Unlike other options, ",
 ButtonBox["Ticks",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Ticks"],
 " cannot be set for individual levels.  Thus the value given to ",
 ButtonBox["Ticks",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Ticks"],
 " applies to all levels of the plotted transform."
}], "ExampleText",
 CellID->119256159],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "400"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "400", ",", "100"}], "]"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10", ",", "5"}], "]"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->61223458],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnc2O48YRgJXkkmNuPufmRwjmltz2uoGBdeBD/CcjMLAL2BvEBhxglCeY
wGcdAxj7AMJe8gwCfJ2755wn6FCi1EORIkU2u7uqWd+HiaPVSF3FnuKnIimS
v//szcv1r1er1be/rf7z8tN//PGbbz79/s+/q/7x0etv//bV6y+/ePH67Zdf
ffnNHz77TfXk/6r/vfvVanV47AAAIIj1ei2dAgCAANgPAGyC/QDAJtgPAGyC
/QDAJnPs9361av5EzAoAIDVh9mt5DwcCQHEE2O+q6xAgAJTFVPsNKA4BAkBB
TLLfTb9hPwAohfH2G2k2BAgARTDSfpO2ahEgAOhnqv1GDosAAUA5k+w3aWTs
BwCaGWO/sEaO9g8ANHPTfnMkhv0AQC0j7Rc2OO0fAKhl2H7z9YX9AEAnY+w3
Z3zaPwDQSWr7xRoEACAuA/aL1bbR/gGAQm7aL0oU7AcA2uizX9yGDfsBgDaG
7RcrChu/AKCNq/ZLISvsBwCqGLBf3EALbv+4rCtAiXTtl25FXp4fuLkJQLn0
2S9FrCXJoc97S1pGgGWT036pB89Jn+UQIEApYL8AbvoNAQLop2W/DOts6VoY
aTYECKAc7DeJ8U7DfgDKadovzwpbtBMmJT88n0XPA8AC6NovdcRym6KAzAfe
UugkACwGb7+cUip0xQ9Le9h+Jc4DwDJo2S9P0BLX+mBZsfELoBMR++UPN5M5
fRobvwA6wX5jmLmVevOr0bMTBIDJ1PbLvxoWtOJHSZX2D0AbTftlDl3Kih8l
T9o/AG1gv5vEypP2D0AVlf2k1r4i1vqIvVlzqOaYRcwDwPIQt5/yFT9uhtgP
QA+C9nPqV/zofmbXH4AeavtJRVe+4kfPbfjYR8RAAHATWfu544o/cE/hPGS7
tZPrb//EJ8EN3twZYGFoWOk05JDt1k6uX6riH0MO+0Gp7Nar1eru4XHcq9cA
g6StVoB47NbrXdAbNdS5zr1e6bLSeexD518B4Ca7h7FdXwvsd5WkLtJ57EPh
XwFgDEXbz+lb9VLno81+2uYfYDzYLyIZNkKxH0AsCrHffrve7hv/OLLZPZ3W
vuYzCXjabc779M8RuhHPz7xKk4Mf/3kifA7//mCVZR5OVNNRB6gibl/0zUPa
HADmU4D9TqvTeaWv/lmvWMcH76q1/sMX61d3T81fRU+gEfzw8DKH04NXd6dk
0uZwfnR1HlpZpeD45zjZrzvz3QcAWlFvv6fdbn9sN04rv288vAfe3b36+90H
zWdSZnPIo5tD9UyVw3EbMHUOzxGbOWxXq2oeWlnFp46639aBujPfnRkAtai3
X82F/c4r1elhtQ7+68NV+5cpOK/Q3Ryq/6tyONovYQ51F1zrRWIentvOKof3
R99256H1DIBWHh8ewr7uJ2m/q71f6r7rYJ7Gii2SQzN6/h64sffzQBWr223S
+0EpPD6sAzs/OfsN7HNLtq/psN5frMmdHDLse/SjngzTk0PKebhI5v3VPY3s
94MiOJziNvoMtw5i9rt2VPF85DHJ8VZ/sLUZtZXD1aOfqdJofA70zENi7+y3
daN79Sgzx3yhEErZ8r0N5zu4jGe9hUQ5nlAeeF4lQAJ2O+xXcOgueu33+HA3
Z2MDIDaFHPO9DfaryZBMaIhD80fvB3pYmP3yW0j8EistdNrv2PfR+IEuFmM/
x+01j6S2sTbbAwSzPPtlXjEVqiCD/RINDpCTJdnPZV83daog3acAjR8siUXa
L9vqqVYFSe0XfVgAERZmP5d3DVVrg0SfAmqXFyCE0KNxyu2XZyXVbIPoubHZ
C1Cj1n5O8zd+M5LIfhEHBCgUzfbLg3IbYD+ARBi3n/7NwLgZ6l9egGxgP/0q
iG6/KEMBlA7202+DWA0bjR9AE8v2K0gFUcRV0PICZAD7SWcxlpnZ0vgBtDBr
v+JsMDPhshYWIAPG7SedxTSCcy5O9QAZwH4FMdN+0fMBKBrsVxBhLRyNH8BV
NNsv3TpbrhCmZl7ukgKkxrL9UoycgUlCK3pJAZKi2X6JKL0dGp9/6UsKkBSz
9pPOYhZjtIb6AIaxZr/FOGF4QRazmADpsGk/6Szi4BXXWiLUBzAG7Fc0TQF2
f6SzA1AN9isdvAcQhin7IQcA8Bi0n3QWAKACO/aj8QOAJprtF1dWqA8Amui3
XxRl0fgBmGW/XZ/Z7J6en9dsPxevYUN9AFZ52m0upOcpwn4zxUXjB2CY/Xaz
2dSt33bf/IVy+7kYbRvqA7DLYbv3ZL2qC2z6rxT7BeuLxg/ADpXf1td38h2p
2sDGc/6FeXOcBvYDgEAaxiuu93MzDIb6AMAf8201g0XYz4W2f6gPAPooy36T
VEbjBwADlGI/F3pDn6QpAUC5FGQ/xy0tACAei7Qf6gOAm5RlPzfCbKgPAMZQ
nP1c//0sHOoDgNGUaD/H/SwAYDaF2s/1C1A6LwAog3Lt58F7ABDAAuwHABAA
9gMAm2A/ALAJ9gMAm2A/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQ
4v7+XjoFAMgKVzmowX6OSRCFyc8P9quh9pz0JIiXouziW65AqWUXLzklWK49
D/YzG10W7CeL5drzYD+z0WVRaL9fXq78T86URLBcex7sZza6LNrs11Qf9jOC
Hvu9/9Oq/smZAPaTIvWy77frM5vd0/PzI+23eAFarj2PEvt59WE/IyRe9qfd
5kJ6nqv2axnPggAt154H++UMpyq6LImXfb/dbDZ167fdN38xYL/hZxaG5drz
YL+c4VRFlyXtsh+2e0/Wq7rApv8m2W/BArRcex4N9vPSw352yLfsVRvY2Ab2
ewP9M32iw36LR5X9XHYBYj8pUvd+3ng3e78+y2G/xaPBfk2wnxGyHfNtHfzA
fjWWa8+jwX75N3g92E8KJd/3G9i/h/0Wjzb70fsZQZX9+l68YAFarj2PBvs1
wX5GwH6yWK49jwb7seVrEOwni+Xa8yi0X04ZYj8pNNhvjNyWKkDLtefJMwmT
TrrEfhbAfrJYrj1PlkkYOulScLPXSdeA5QrEfrJYrj1PlkkYOukS+9lE3H4j
tYb9FkyOSZh40iVbvhYoxX6TXlkQlmvPk3sSbp106bCfDcTtNx7st1Ty9H4D
J12y5WsTcfvR+0mnIE/mY77dky6xn02w30CsDOEs155Hw/f9ugQoMcyi2E8K
7NcXKI8ALdeeZxn2C744KvaTAvv1BcojQMu15xG3X5TNXuxXHLL2U7gr7+q9
RdKFs1x7Huw3P3owliuwLPtlsGUrROr2z3LtecTtF2Wc4GvjYz8psF93/Jx3
VrJcex6d9gvb7xfwRuwnBfa7OT72Sw32G//i6FiuQPGjHpMQtF+iuJZrzyNu
v/n7/eZcGhr7SSFoP22HPAbyubozMEpQy7XnWZj9+p7pA/tJUZz90jkT+0kh
br+rzwefADL14C/2kwL7jRw5UVzLtedZgP3Y8i0R7Ddy5ERfArRcex5x+6XY
8h0P9pOirKMeDvstkQXYr8UkGWI/KWR7v7D3phDgzTH9C+IeArZcex5x+0Uf
E/sVAfYbOSb2S4da+42UWN/LRr4d+0lRov1SMEZoKaxrufY82O/ma9JhuQJL
tJ9I7+fS7PqzXHsetfYLZpI2sZ8UxR31cAnsN3JA5fb7Yr2qfmKNljNc6fYL
/qoz9pOlxN7PxRYg9pMNtzz7TSLR4v/yn1X1ky36++9X1U+UobLFwn5ho8VK
IMVmV3Gotd9MrY18+80aGOmxsHdFu8BXkJHCoseyn9Tap2GtF7++dDWUqnmw
mUAi+4082a0S1KETOJpK5OfwdcejTER+xKOH/XFnMjNuFAsFXGUr7sZvteVY
5VBvQgr+iOcgUoRrgEu6RbJbryrWO0oOchCnzibW5Jy3z+8Pb274B2z5jn9L
cfv9IgYauey7h4fHKPHOiNT5VYJ7vyhxLR9x86jd7zeG+fcCTmG/iNFHsmD7
Pe52quwX3UIBr5+ZQ3T7ccw3jOFSzHDgg2+8SGHcfnOO9mI/7HcT7KeZQu3n
IgkwisHmvNdy7Xk02+8mU/S43663+/M/tn+p93Ru3v5w739dP7N7mpPRVZ52
m/Ou1fPw53Bf+3DpEjiP/Lz83VgpF/9ANQV+6EnLXr79Lgov1syPzkG49pyO
8qsJLsJEZLLfacHO01/9869376o3Vg++fvtUP1MvtH8QkUb5nx6eo9x/96Yd
N3oCz9HPj7qxki6+O83/aeCJy67QfhPoFp5f0s/vfn65yjHzl7X3y8cvqtCZ
as/pKD+fSWgRJiJLKT7tdvuj+E9/hsZHwP7N+s3+8pnmJ3WCVA5J+HD399/V
4bIksO+LlTZ6Pfp+W4eYuuwK7Teh7+ovvB/XL/77chU88wFbvnUeP3/y6p+f
fOBy154TK7+aeUWYiIz7/S6K8Lx4T2+/frO/fOb5YXTO8+pj3N//UD9MnUDd
g/g/fStWyujPn/it6COXvWT71VwvvJ8+P9kvbOYn2+/8d6js9+PHhzdmqz0n
WX4+/qwiTISU/fL3focCaMyvyEdPHSXnh29jr9Op/if3fg8Pkb7vfCLK5sYU
+cj3fs3ak+v9BMrPx51ZhInIeNSjofTM+/2O038xoXn3+/nxTn9ikR0vPo3J
y75bxzrf44ig/SLO/KSjHmK159SUXyuZRez3C7Rf3mO+/phXM4DIMd/mDvDc
B90aa8HEZX98uFvdxTvhI+tRjwMXhXde0lc/fbS6fCbt8daaquurnCl1zFey
/M5hQorweMpl1E/gE0m3fMeMwPf9pBi77LFPdcve+8V/e/AgzbdYrj3PqEk4
fPzG/Pz1YD/B6LKU+21nh/2WwrhJODR/+Xu/dHgrYj8pirafi3G2Rf4EsF+L
m5Nw7PuSNH5uXinOv8CLk64ByxVo2X5SCWC/FuWe6TZ/u9hJL77lCjRrPw1X
iXG2a8+j3H6pL3SA/aTAfoI5ONu158F+wYPPx3IFYr/MObRebLn2PMrtl4Km
ErGfFNgvcw7Yr0ueSWh86/Liy4Qi+/2wnwa4sn1msF+XLJPQvLDWBantx5av
Wm4ue9y7Gnki2m/mUdfMOWC/LlkmYb/dbDaXZ7vUpP4gxn5qEbybeayhCrJf
92WWa8+TYxIa15hoXT6G/X6C0WVZgP0CwH6qiD4JF9eT6W7vNk40do27rMbN
YRjspwHsl3NA7HeVPL1f8yo3k3q/vk3X8Yc8hl+J/aSwab8UjBEg9rtK5mO+
rWYQ+wlGl8Wm/VKcH3dzzKsvsFx7Hmvf92vJEPtJgf2yjYn9+li8/Vq6w35K
MGi/RBdGwH7BFGo/tnxLB/vlGbb+Lfa7yuLtN/xG7CeFQfulY0CAfb+yXHue
Qu03iabxsJ8SUi97ipMrZ5LukoDYLwxr9muB/aRIvOxJTq6cCfbThgX7NaH3
U0LiZRc7ubKPpNeC7tu5NxDXcu15CrXfpP1+bPkqJO2yKzu50qW/Ev7V8QeC
Wq49jyn7dd+F/aSIuOz6T67MwNX2D/sNU6j9plJ7D/vpIXXvF3xy5XjmXFw0
Ba0QA5vDznbtebBfngSuYrkCsx3znXpy5XiKsF/fiy3XnqdE+wV82e+q+pz0
4luuQFPf98ugPnfZ7A03fs527XmwX0ACsbBcgdgvXaCb6nO2a89Tov0igv2k
wH5JY2G/MWA/s9FlwX6yWK49T4n2m3mT3ybYTwo79lOoPme79jzYL8o4JUaX
BfvJYrn2PCXaLyLYTwrsJ4vl2vMkm4T9tnGC5fnLV+0v4mM/weiyYD9ZLNee
J8kknGR3tl/1z1p7/sGZMaU4fHHmmWA/KZZhv7A7CmnAcu15EkzC0263b55g
1LjY0EVD6LCf4QrEfrJYrj1Pskm4sN9Zea1zLkPsFxfsJ4UR++lUn7Nde56Z
k9B/eY2xvd/NC27Q+y2SZdjPjbutRtyIUbBce54Mvd/M/X4tsN8ywH6yWK49
Tw77zT7mm27jF/tJYcF+Y844k8Jy7XmK+L7fwOVJZ4L9pFiM/Vy/ANWqz9mu
PQ/2izhaWdFlwX6yWK49D/aLOFpZ0WVZvP00b/Y627XnwX4RRysruixG7Bc9
Viws154H+0UcrazosizJfu6a67Cffoqwn+u/McdMsJ8Ui7Sf153yzV5nu/Y8
xdkvbgLYT4oF20+/+pzt2vOUYj+X5lt/2E+KhdnPde6pgf30U5D9UoD9pFie
/dzoe2powHLtebCf2eiyLNJ+BWG59jzYz2x0WbCfLJZrz4P9zEaXBfvJYrn2
PNjPbHRZsJ8slmvPwySAKbBfDSu+YxIAAAAAAEAl/weBt4YJ
    "], {{0, 241}, {426, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{426, 241},
  PlotRange->{{0, 426}, {0, 241}}]], "Output",
 ImageSize->{430, 241},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->387159729]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "PresentationStyle",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 StyleBox["FullWaveletVectorPlot",
  FontFamily->"Courier New",
  FontSize->12],
 ", by default, outputs a list of plots.  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["PresentationStyle"]],
    "paclet:WaveletWare/ref/PresentationStyle"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " can be set to ",
 ButtonBox["GraphicsColumn",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GraphicsColumn"],
 ", ",
 ButtonBox["GraphicsRow",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GraphicsRow"],
 " or ",
 ButtonBox["FlipView",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FlipView"],
 " to provide a more structured presentation of the output.   "
}], "ExampleText",
 CellID->165172409],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "Pi", "*", "t"}], "]"}]}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{"t", "-", ".3"}], "]"}], "-", 
    RowBox[{"Sign", "[", 
     RowBox[{".72", "-", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"g", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "n"}]}], ",", 
      RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"WTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"Daub", "[", "4", "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullWaveletVectorPlot", "[", 
  RowBox[{"w", ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
   RowBox[{"PresentationStyle", "\[Rule]", "GraphicsColumn"}]}], 
  "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->376408118],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnX+MZNWV36u6Z3qGgTGDNbHHKFpN0DJGKAobBcmRNyGz/PAYr7NmmRno
EBvbMDRmxxrWrM0PBxDtJGKyaxs5aLPROp1Z7wp21hLajeJtd/f0MAbMIuPE
HcvIsoNZLMtMMcwSVlhYsv95ea9u1a1b79V7dd+ve8859/tRC2qqq6vurXO/
75x77n33/KNb7rx+YabT6fze1vg/13/8nt+4666P37d/R/yPg0d+747bj9x2
6Nojn77t9tvu+ue3zMZP3hK/dl+300keRwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPRYGOK7IQCAZoCcARAGRA2AMCBq
AFjTW15cXO6Zz0DUADBmYymWMEQNgBCUk95YgqgBEEHspJc2+v93Juo3Nza+
uWfP2sxM/LPa7cY/6sGJbdt+/MgjLX0oAIEQe+kFA1PXC+M09YkvHz0a63el
05n4s9rpPHPxxa+fOtXUxwEQLu176thB/81ll+XJeUza3S5cNgB1aVnUsaLX
zzvPVO5Te/aYL/jerbemXDZ0DUCzNCjqtKK73ZcefnjiK791xRWmrr9/+HBT
bQAANCXqRNHnn5/noLOkXDb8NQBN0ZSon77oIntFK3567NjKMJkWz6+RNwOg
ERoRde/4cS3Pb+/bZ/+Hia6Hl4KTb397/ZYAAOqLOg68VzdtKuWjTXQcjqQZ
AI1Qf4X6m5deqlT59W632jucete7EIQD0BQ1PfXLR49WC7xNzMn1+vbtddoD
AKgj6jjwrq9ohTm5RhAOQB0aCbxXNm+u3xK9eL06M1P/3QAIlsqiTtz07KyS
Yd4mk7Kszc3BWQNQk8qi1m567ZxzmmrMKBOOjBkAVakmanNhuik3rdCZcCxb
A1CNaktaJ849t5H8WBadMVvtdOCsAahABU+t3XTlheli4KwBqEMFUbfnphVw
1gDUoayok6T3zEx7blqhnfWpXbva+xQARFJW1Drp3ZKbVug9ZmubNsFZA1CK
UqIeJb3b3x/yzCWXYGYNQAVKiXp9+3YHbloxmlm3GecDIA97Ucez6bUtWxKV
bdnSapM0amaN8wkBKIX9OrWeTa9fcIGDhkXGzBq7wQGwx95Tr23d2sYWsikf
OtwNjnQZAJZYijpJkfVv32hwp7cNejc40mUAWGIpap0ic+mmFSe2bcMtHgBk
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
6/UPbq//nnxNYCKjFzLga4tY1DZeuMGlarNarlI3RK2R0QsZ8LVFwelkJg16
6paq5fI1gYmMXsiAry1iUdskwRpMlCnvfOI3t0eNVsvlawITGb2QAV9bWIbf
UXO5stTp4k0F9nxNYCKjFzLgawu9pDXVVzYVgaf2mZtlQepcN/iawERGL2TA
1xaW4XfUXASeujiY1XLrXDf4msBERi9kwNcWjsPvbB0Q82DDOtcNviYwkdEL
GfC1hWX2O2oo/J5Yg2/ik2XhawITGb2QAV9bOA6/J9bgMyPwyvA1gYmMXsiA
ry0ch98TT2PQCXAkymT0QgZ8beE4/J74JvpJJMpk9EIGfG3hOPwu9tRIlMno
hQz42kKvU099ZSPhd7GnRvgtoxcy4GuLWM6WEW/98Duvrr1e1Xp24dcQfvtu
AhjA1xaxqC0j3vrh99QiICd/eyfCb99NAAP42iIWtX3EWzMCL7gs6F9V/gi+
JjCR0QsZ8LWFffgd1Y7ACwSrf1X5I/iawERGL2TA1xb24XdUOwK3qcFX+SP4
msBERi9kwNcWLsNvm2q5CL99NwEM4GsLl+G3jadG+O27CWAAX1vYr1NHtcNv
G0+N8Nt3E8AAvrZwGX7beGqE376bAAbwtYXL8NtmSQvht+8mgAF8beEs+21Z
ruuHX76He/j9y/+38cY353/x6qkKf+ulF2+e3vjun8+//tIp9x9tj/tG0hlR
ZbGcTSvqhN/25boqfEr8J4/d+I+J1O97fX3v6cc6Z/6KzWbX57+8d+W+zlO/
31ihNHvsh5/7Rsa2KKUOOpRqtk1snPeGxXXto/wI3KaF9kF76t3qeNW85r31
0rHe8a0/e6FKPNP4KLJ5w5/+r2NrD2x96RvTG+yleQr7RjZFCKK2vEkz7w2n
SlU76NSnWA3LvzwYv+z0Y92e+nl8pjfx8WPd+GXjv+rEXjX+77SXdSf/8/GZ
0SvN5796fu/PZye/rKh5ycu+8/nu6n3Jz9pnZ9SD7OOkoGHOr/Tj1Cunv6z/
ZPZXU9+tWvPU4xLNu6974v7Na/eX7mzlXqz0mzddGARYAABUwrd2bSnb1MrZ
6akz5R99ZXHlqqRe3tq1W0t9RNyk//uFziuPUfk5Xe9vf/hfOyv34ofAz32d
9f+ws+w4p0BZUVdOgFsmymJdbyweKPURqkl/fOvVZZvUEq/9z0uSkP6rVc5R
5JtxlQdfW5QVdeUE+NSrQeW7L9Xrv/ipj5VtUtREoixLnUQZlrTywJKWPW7C
bxudVr77Ur3+f3xgR6kmKeosP7VBaEta9nhZ0nL2Wc3iJvwuVS237EfUCb/r
eNU28DKQ3K8WVcDLkpazz2oWN+H3NJ32lheHGcZP3fNi/yOe/gP178Xl3uBF
G0vpZ8wmVQu/SxG3Un92tjF5zStFtYE0+vqWNlptXjVsGuOpefHHDr+yTBti
W5BpZzlIhN/GVxs//E9HfmPlt65dOHRNT/1bfX/ZB+NNqhZ+l6BvzsEnF7Qq
07xSVBH1+LeXPGyteVWwaYyX5g30aXx342146N47SbSzPGXX4NoLvxWx0/nP
S8eemJ+//+HF/hODcWp4ybGra+Qm+60+fmNJtSHbmILmlaKCqOOPXlpaMj11
e82rgv7s4SfTaF5veVl98uDjsm24/9OHCbSzCjTC7yHDr+rFP7vv859VnzL4
2kffvvnQaE+bM6BhswxRpxqT17yyVOhF4nDGP7u95lVE+cShHig1b0zUqTbE
oibTznKQCL/7mINz7ZMf+8zBd/Y/ZcpFUrenPVEbE/7B2CTnqY1pYavNq0Dy
7akPHD6i1Dx46oR2wu+R5QefsvTZhY//i+fjT5k2ndHtcZGrHHpqsnPqwRgl
MmkdNiktBELNM66IsubUZf+kQgRefIvWMKM4coXxR/zl71olHp2E36OGEs9+
t928SmRz83SalwpzAs1+R5Ui8Gr7SUoVA+K7qmgioxcy4GuLCqKuEIFX209S
qhgQXxOYyOiFDPjawkH4Xe0kE8s/cRp+t4+MXsiAry3KrlNHbcbSFf4E4Tdo
Cb62cBB+txquI/wGLcHXFgi/SSGjFzLgawsH2W+E3/bI6IUM+NoC4TcpZPRC
BnxtUUHUUcmIutp28VLnKkScTWAioxcy4GuLaqIuFVFX2y5e6lyFiLMJTGT0
QgZ8bVFhSSsqGVFX2y5u81fma/iawERGL2TA1xYOwu9qIPwGfuFrCwfhd7Ur
AMJv4Be+tqgm6lIRdbU5NcJv4Be+tnAQflebUyP8Bn7ha4u2w+/Ks2+E38Av
fG3RdvhdufYWwm/gF762aDv8rlx7C+E38AtfW1Rbp0b43RIyeiEDvraoHn6/
b+7ZQ5dNVWut8LvwI+LLxXOH37O6bw7hN2gDvraoJurIWq2Vw++pH5H6LV8T
mMjohQz42qKyqC3VWmfvWfFHpH7L1wQmMnohA/q2MI7hHTvdtLKoLakcfkfT
Lgip39I3gQ0yeiED8rYwCzaO0baoEX6XQkYvZEDeFhtLi4uLqRPV+7Qt6jrh
94++kpQAeCGnBECqQAB5E1ghoxcyoG4Lo05VqrIX5fAbnhp4hJQtxgq6ZYNu
o3ZMZKxTV1ittqFO+I1EGfAIdVsYQnbpqevfdl3wDkiUgVahbwud/U657lZF
XSf2nvoOCL9Bq/C1RWVR23jhOrG3Ii9XltpOFnE2gYmMXsiAry1a3VFWP/zO
+5Ts83xNYCKjFzLga4tWd5TVD7/zPHW24DVfE5jI6IUM+Nqi1Tl1/fAbnhr4
gq8t2lvMipoIv+GpgS/42oJp9hueGrQNX1sQD78n3lWdTX1HnE1gIqMXMuBr
C+KbT6JJTnmi++ZrAhMZvZABX1sQD7+jSdPq7IQ64mwCExm9kAFfWxAPvyN4
auAJvrZoT9RN1duCpwZe4GuL9kTdSOwd89wdl8fvc+rAroJnIs4mMJHRCxnw
tQXNmy5NnvnYJbGET37ogtQz68YzEWcTmMjohQz42oJ++J1a1Zq4nhVxNoGJ
jF7IgK8t6Iff0Xi8PTH2jjibwERGL2TA1xbtiXpiOqsa8ZUhibc/uF0/PvGb
21Ov4WsCExm9kAFfW7Dw1BA1cA9fW7Qn6qYSZdEwM7Z61cz3Hr559X2bs1my
iLMJTGT0QgZ8bUH2/iyT+PqwcmU31vLKVZ3kv1d2stcKviYwkdELGfC1RUui
bjD2Vqztm9Oi/vpV3ewL+JrAREYvZMDXFi2tUzcYeyu+9/lbtZv+9j37si/g
awITGb2QAV9bsAi/Fd/63SsS73/znom/5WsCExm9kAFfW3AJv6fC1wQmMnoh
A762aEnUDS5SW8LXBCYyeiEDvraApyaFjF7IgK8tWhJ144myqfA1gYmMXsiA
ry0YJcqK4WsCExm9kAFfW7S0pIXwuxoyeiEDvraoLOfek8efmv+VHz/xSPZX
eXdHtgpfE5jI6IUM+NqisqhPfmhHsh/7mk3ZX7l30xFnE5jI6IUM+NqisqiT
LV45m7vcZ8kiziYwkdELGZC0xcbSwqi8/LA+dao8da1EWV42zH2WLCJqgtLI
6IUMyNlioOGhqON/KjXrB0PqiNq+Jo4DyJmgEjJ6IQNitugtL28k/10ciDp+
NJTymPuO6onavnqdA4iZoCIyeiEDkrYYE/VQycbDPvDUpJDRCxl4tEWsUr3W
PB5a23pqk1IfDU/dODJ6IQOStjCcMubUTJDRCxmQtMVYpN1G9nuip/ay8yQi
aoLSyOiFDPjaonFP7cVNR5xNYCKjFzLga4s6op5YEd7LhDribAITGb2QAV9b
1LyVw7J6nQP4msBERi9kwNcWNUVtWb3OAXxNYCKjFzLga4uaorYsHu0AviYw
kdELGfC1Rc37qVVabP0D5+qSlE/ufwcSZZWR0QsZ8LVFTU/905Vjq1fPaBWr
CfXKVV3H61kRZxOYyOiFDPjaov6ZJ2YE7mtCHXE2gYmMXsiAry3qi9pMd/ua
UEecTWAioxcy4GuL+qJWtWXXrtn04rEH196/1cuEOuJsAhMZvZABX1vUF7UK
uZOjja7u5pWkdABfE5jI6IUM+NqivqhTdWZX921ppGFl4WsCExm9kAFfWzRy
RPCJD2xLFN0XtZcsWcTZBCYyeiEDvrZo5MRvdQihr8UsBV8TmMjohQz42qKl
Ch3u4WsCExm9kAFfW0DUpJDRCxnwtQVETQoZvZABX1tA1KSQ0QsZ8LUFRE0K
Gb2QAV9bQNSkkNELGfC1RUulbN3D1wQmMnohA9jCOzJMIKMXMoAtAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFCK
/w9vswRX
    "], {{0, 610}, {327, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{327, 610},
  PlotRange->{{0, 327}, {0, 610}}]], "Output",
 ImageSize->{331, 610},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->827081016]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Possible Issues",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1305812373],

Cell[TextData[{
 "Symbolic values for ",
 ButtonBox["PointSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PointSize"],
 " typically include ",
 ButtonBox["Tiny",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Tiny"],
 ", ",
 ButtonBox["Small",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Small"],
 ", ",
 ButtonBox["Medium",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Medium"],
 ", ",
 ButtonBox["Large",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Large"],
 ".  These values will not work with FullWaveletVectorPlot.  Use instead \
numeric values."
}], "ExampleText",
 CellID->702538058],

Cell[TextData[{
 "The length of the default ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Colors"]],"paclet:WaveletWare/ref/Colors"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " list is 30.  That means if Iteration is set to ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 ", the colors will recycle after 7 iterations (wavelet transform) or 3 \
iterations (wavelet packet transform)."
}], "ExampleText",
 CellID->151875403]
}, Closed]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WTFull"]],"paclet:WaveletWare/ref/WTFull"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WPTFull"]],"paclet:WaveletWare/ref/WPTFull"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WaveletVectorPlot"]],
    "paclet:WaveletWare/ref/WaveletVectorPlot"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WaveletRegionPlot"]],
    "paclet:WaveletWare/ref/WaveletRegionPlot"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["Computing and Plotting Wavelet Packet Transformations"]],
   "paclet:WaveletWare/tutorial/Computing and Plotting Wavelet Packet \
Transforms"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->80370542],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["Computing and Plotting Wavelet Transformations"]],
   "paclet:WaveletWare/tutorial/Computing and Plotting Wavelet \
Transformations"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->675691843],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["Data Structures in the WaveletWare Package"]],
   "paclet:WaveletWare/tutorial/Data Structures in the WaveletWare Package"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->829501916],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Options and Values"]],
   "paclet:WaveletWare/guide/List of Options and Values"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->178774192],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Categorical"]],
   "paclet:WaveletWare/guide/List of Functions - Categorical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->436963877],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Alphabetical"]],
   "paclet:WaveletWare/guide/List of Functions - Alphabetical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->14158029]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"FullWaveletVectorPlot",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:WaveletWare/guide/WaveletWare", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 8, 25, 9, 48, 9.4142197}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "WaveletWare`PlottingFunctions`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Wavelet Ware Package Symbol", "language" -> "en", "paclet" -> 
    "WaveletWare Package", "status" -> "None", "summary" -> 
    "FullWaveletVectorPlot[data,opts] creates a list of plots of the data \
generated by WTFull or WPTFull.", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "FullWaveletVectorPlot", "titlemodifier" -> "", "windowtitle" -> 
    "FullWaveletVectorPlot", "type" -> "Symbol", "uri" -> 
    "WaveletWare/ref/FullWaveletVectorPlot"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[72697, 2020, 388, 15, 30, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->526882761]},
 "RasterizedOutput"->{
  Cell[74868, 2103, 9250, 160, 257, "Output",
   CellTags->"RasterizedOutput",
   CellID->434711],
  Cell[87110, 2375, 9802, 169, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->364842877],
  Cell[100680, 2675, 7951, 138, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->352410465],
  Cell[110536, 2880, 9131, 158, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->568566119],
  Cell[121758, 3111, 9757, 168, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->149927960],
  Cell[134109, 3373, 6894, 121, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->563233705],
  Cell[142552, 3549, 7345, 128, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->223025344],
  Cell[152346, 3764, 7935, 138, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->322227860],
  Cell[161844, 3957, 7959, 138, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->332452573],
  Cell[172228, 4180, 7817, 136, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->317643267],
  Cell[182036, 4386, 9067, 157, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->639634],
  Cell[193426, 4632, 9253, 160, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->486129476],
  Cell[202682, 4794, 35591, 591, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->81717322],
  Cell[241279, 5492, 5523, 98, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->649557450],
  Cell[248976, 5665, 7805, 136, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->623263815],
  Cell[258832, 5876, 8797, 152, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->454315462],
  Cell[269185, 6083, 9524, 164, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->80591526],
  Cell[281549, 6357, 8141, 141, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->67808858],
  Cell[291183, 6552, 5991, 106, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->144767262],
  Cell[299072, 6728, 4889, 88, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->652698940],
  Cell[322686, 7240, 6922, 121, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->387159729],
  Cell[331821, 7442, 18350, 309, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->827081016]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 357232, 8003},
 {"RasterizedOutput", 357377, 8007}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[593, 21, 5404, 130, 48, "AnchorBarGrid",
 CellID->1],
Cell[6000, 153, 298, 11, 44, "ObjectNameGrid"],
Cell[CellGroupData[{
Cell[6323, 168, 725, 23, 82, "Usage"],
Cell[CellGroupData[{
Cell[7073, 195, 737, 24, 31, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->38043759],
Cell[7813, 221, 31, 0, 70, "SectionHeaderSpacer"],
Cell[7847, 223, 53, 0, 70, "Notes"],
Cell[7903, 225, 59123, 1580, 70, "3ColumnTableMod"],
Cell[67029, 1807, 464, 14, 70, "Notes",
 CellID->365985968],
Cell[67496, 1823, 2171, 79, 70, "Notes",
 CellID->21739270],
Cell[69670, 1904, 506, 18, 70, "Notes",
 CellID->413061724],
Cell[70179, 1924, 318, 11, 70, "Notes",
 CellID->684988011],
Cell[70500, 1937, 1522, 51, 70, "Notes",
 CellID->328465098],
Cell[72025, 1990, 589, 22, 70, "Notes",
 CellID->402927380],
Cell[72617, 2014, 31, 0, 70, "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72697, 2020, 388, 15, 30, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->526882761],
Cell[CellGroupData[{
Cell[73110, 2039, 194, 6, 25, "ExampleSection",
 CellID->31044308],
Cell[73307, 2047, 65, 1, 31, "MathCaption",
 CellID->16454449],
Cell[73375, 2050, 126, 4, 42, "Input",
 InitializationCell->True,
 CellID->861618089],
Cell[73504, 2056, 190, 6, 35, "ExampleText",
 CellID->309152431],
Cell[CellGroupData[{
Cell[73719, 2066, 1146, 35, 107, "Input",
 CellID->348702779],
Cell[74868, 2103, 9250, 160, 257, "Output",
 CellTags->"RasterizedOutput",
 CellID->434711]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84167, 2269, 169, 5, 70, "ExampleSection"],
Cell[CellGroupData[{
Cell[84361, 2278, 177, 5, 70, "ExampleSubsection"],
Cell[84541, 2285, 1142, 40, 70, "ExampleText",
 CellID->1544011],
Cell[85686, 2327, 197, 6, 70, "ExampleText",
 CellID->285971032],
Cell[CellGroupData[{
Cell[85908, 2337, 1199, 36, 70, "Input",
 CellID->170541033],
Cell[87110, 2375, 9802, 169, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->364842877]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[96961, 2550, 176, 5, 70, "ExampleSubsection"],
Cell[97140, 2557, 1828, 60, 70, "ExampleText",
 CellID->158293985],
Cell[98971, 2619, 156, 4, 70, "ExampleText",
 CellID->83205555],
Cell[CellGroupData[{
Cell[99152, 2627, 1525, 46, 70, "Input",
 CellID->135251108],
Cell[100680, 2675, 7951, 138, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->352410465]
}, Open  ]],
Cell[CellGroupData[{
Cell[108668, 2818, 123, 3, 70, "ExampleDelimiter",
 CellID->9948602],
Cell[108794, 2823, 132, 4, 70, "ExampleText",
 CellID->337919390],
Cell[CellGroupData[{
Cell[108951, 2831, 1582, 47, 70, "Input",
 CellID->496000244],
Cell[110536, 2880, 9131, 158, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->568566119]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119716, 3044, 125, 3, 70, "ExampleDelimiter",
 CellID->195938323],
Cell[119844, 3049, 312, 9, 70, "ExampleText",
 CellID->277028484],
Cell[CellGroupData[{
Cell[120181, 3062, 1574, 47, 70, "Input",
 CellID->65959],
Cell[121758, 3111, 9757, 168, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->149927960]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[131576, 3286, 178, 5, 70, "ExampleSubsection"],
Cell[131757, 3293, 1007, 33, 70, "ExampleText",
 CellID->171834602],
Cell[132767, 3328, 115, 3, 70, "ExampleText",
 CellID->137270063],
Cell[CellGroupData[{
Cell[132907, 3335, 1199, 36, 70, "Input",
 CellID->18396288],
Cell[134109, 3373, 6894, 121, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->563233705]
}, Open  ]],
Cell[CellGroupData[{
Cell[141040, 3499, 125, 3, 70, "ExampleDelimiter",
 CellID->190440694],
Cell[141168, 3504, 88, 1, 70, "ExampleText",
 CellID->591725200],
Cell[CellGroupData[{
Cell[141281, 3509, 1268, 38, 70, "Input",
 CellID->571715368],
Cell[142552, 3549, 7345, 128, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->223025344]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[149958, 3684, 183, 5, 70, "ExampleSubsection"],
Cell[150144, 3691, 791, 22, 70, "ExampleText",
 CellID->156455009],
Cell[150938, 3715, 176, 7, 70, "ExampleText",
 CellID->7190949],
Cell[CellGroupData[{
Cell[151139, 3726, 1204, 36, 70, "Input",
 CellID->97410550],
Cell[152346, 3764, 7935, 138, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->322227860]
}, Open  ]],
Cell[CellGroupData[{
Cell[160318, 3907, 125, 3, 70, "ExampleDelimiter",
 CellID->439596253],
Cell[160446, 3912, 95, 1, 70, "ExampleText",
 CellID->40888340],
Cell[CellGroupData[{
Cell[160566, 3917, 1275, 38, 70, "Input",
 CellID->260633710],
Cell[161844, 3957, 7959, 138, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->332452573]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[169864, 4102, 173, 5, 70, "ExampleSubsection"],
Cell[170040, 4109, 777, 20, 70, "ExampleText",
 CellID->30135734],
Cell[170820, 4131, 185, 7, 70, "ExampleText",
 CellID->22778619],
Cell[CellGroupData[{
Cell[171030, 4142, 1195, 36, 70, "Input",
 CellID->33088526],
Cell[172228, 4180, 7817, 136, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->317643267]
}, Open  ]],
Cell[CellGroupData[{
Cell[180082, 4321, 125, 3, 70, "ExampleDelimiter",
 CellID->177717167],
Cell[180210, 4326, 134, 4, 70, "ExampleText",
 CellID->134041493],
Cell[CellGroupData[{
Cell[180369, 4334, 1664, 50, 70, "Input",
 CellID->361027865],
Cell[182036, 4386, 9067, 157, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->639634]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[191164, 4550, 176, 5, 70, "ExampleSubsection"],
Cell[191343, 4557, 642, 26, 70, "ExampleText",
 CellID->929736648],
Cell[191988, 4585, 126, 3, 70, "ExampleText",
 CellID->13585389],
Cell[CellGroupData[{
Cell[192139, 4592, 1284, 38, 70, "Input",
 CellID->472562244],
Cell[193426, 4632, 9253, 160, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->486129476],
Cell[202682, 4794, 35591, 591, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->81717322]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[238322, 5391, 174, 5, 70, "ExampleSubsection"],
Cell[238499, 5398, 741, 22, 70, "ExampleText",
 CellID->180261094],
Cell[239243, 5422, 510, 19, 70, "ExampleText",
 CellID->217751637],
Cell[CellGroupData[{
Cell[239778, 5445, 1498, 45, 70, "Input",
 CellID->8462139],
Cell[241279, 5492, 5523, 98, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->649557450]
}, Open  ]],
Cell[CellGroupData[{
Cell[246839, 5595, 125, 3, 70, "ExampleDelimiter",
 CellID->559892485],
Cell[246967, 5600, 287, 9, 70, "ExampleText",
 CellID->319013640],
Cell[CellGroupData[{
Cell[247279, 5613, 1694, 50, 70, "Input",
 CellID->6622082],
Cell[248976, 5665, 7805, 136, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->623263815]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[256842, 5808, 177, 5, 70, "ExampleSubsection"],
Cell[257022, 5815, 444, 14, 70, "ExampleText",
 CellID->3787582],
Cell[257469, 5831, 102, 2, 70, "ExampleText",
 CellID->184253149],
Cell[CellGroupData[{
Cell[257596, 5837, 1233, 37, 70, "Input",
 CellID->417629370],
Cell[258832, 5876, 8797, 152, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->454315462]
}, Open  ]],
Cell[CellGroupData[{
Cell[267666, 6033, 125, 3, 70, "ExampleDelimiter",
 CellID->313838477],
Cell[267794, 6038, 94, 1, 70, "ExampleText",
 CellID->234206632],
Cell[CellGroupData[{
Cell[267913, 6043, 1269, 38, 70, "Input",
 CellID->443616456],
Cell[269185, 6083, 9524, 164, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->80591526]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[278770, 6254, 173, 5, 70, "ExampleSubsection"],
Cell[278946, 6261, 1170, 42, 70, "ExampleText",
 CellID->363095782],
Cell[280119, 6305, 258, 11, 70, "ExampleText",
 CellID->472873577],
Cell[CellGroupData[{
Cell[280402, 6320, 1144, 35, 70, "Input",
 CellID->612800831],
Cell[281549, 6357, 8141, 141, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->67808858]
}, Open  ]],
Cell[CellGroupData[{
Cell[289727, 6503, 125, 3, 70, "ExampleDelimiter",
 CellID->231725129],
Cell[289855, 6508, 87, 1, 70, "ExampleText",
 CellID->146723502],
Cell[CellGroupData[{
Cell[289967, 6513, 1213, 37, 70, "Input",
 CellID->108101963],
Cell[291183, 6552, 5991, 106, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->144767262]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[297235, 6665, 176, 5, 70, "ExampleSubsection"],
Cell[297414, 6672, 393, 12, 70, "ExampleText",
 CellID->305697223],
Cell[297810, 6686, 88, 1, 70, "ExampleText",
 CellID->174829370],
Cell[CellGroupData[{
Cell[297923, 6691, 1146, 35, 70, "Input",
 CellID->379961313],
Cell[299072, 6728, 4889, 88, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->652698940]
}, Open  ]],
Cell[303976, 6819, 172, 7, 70, "ExampleText",
 CellID->95360769],
Cell[CellGroupData[{
Cell[304173, 6830, 1261, 38, 70, "Input",
 CellID->149647533],
Cell[305437, 6870, 14937, 286, 587, "Output",
 CellID->323711165]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[320423, 7162, 172, 5, 70, "ExampleSubsection"],
Cell[320598, 7169, 640, 21, 70, "ExampleText",
 CellID->119256159],
Cell[CellGroupData[{
Cell[321263, 7194, 1420, 44, 70, "Input",
 CellID->61223458],
Cell[322686, 7240, 6922, 121, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->387159729]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[329657, 7367, 184, 5, 70, "ExampleSubsection"],
Cell[329844, 7374, 731, 25, 70, "ExampleText",
 CellID->165172409],
Cell[CellGroupData[{
Cell[330600, 7403, 1218, 37, 70, "Input",
 CellID->376408118],
Cell[331821, 7442, 18350, 309, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->827081016]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[350232, 7758, 197, 6, 70, "ExampleSection",
 CellID->1305812373],
Cell[350432, 7766, 604, 24, 70, "ExampleText",
 CellID->702538058],
Cell[351039, 7792, 484, 14, 70, "ExampleText",
 CellID->151875403]
}, Closed]],
Cell[351538, 7809, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351606, 7814, 270, 12, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[351879, 7828, 1210, 36, 70, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[353126, 7869, 272, 12, 70, "TutorialsSection",
 CellID->250839057],
Cell[353401, 7883, 31, 0, 70, "SectionHeaderSpacer"],
Cell[353435, 7885, 264, 7, 70, "Tutorials",
 CellID->80370542],
Cell[353702, 7894, 256, 7, 70, "Tutorials",
 CellID->675691843],
Cell[353961, 7903, 246, 6, 70, "Tutorials",
 CellID->829501916],
Cell[354210, 7911, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354278, 7916, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[354557, 7930, 31, 0, 70, "SectionHeaderSpacer"],
Cell[354591, 7932, 211, 6, 70, "MoreAbout",
 CellID->178774192],
Cell[354805, 7940, 221, 6, 70, "MoreAbout",
 CellID->436963877],
Cell[355029, 7948, 222, 6, 70, "MoreAbout",
 CellID->14158029]
}, Open  ]],
Cell[355266, 7957, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

