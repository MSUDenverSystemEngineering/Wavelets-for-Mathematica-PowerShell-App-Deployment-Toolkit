(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    238210,       4770]
NotebookOptionsPosition[    230519,       4534]
NotebookOutlinePosition[    233370,       4611]
CellTagsIndexPosition[    233246,       4605]
WindowTitle->BestBasisTree
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["WAVELET WARE PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"Computing and Plotting Wavelet Packet \
Transformations\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/tutorial/Computing and Plotting Wavelet Packet \
Transforms"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WPTFull\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/ref/WPTFull"], "\<\"WPT\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/WPT"], "\<\"InverseWPT\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/InverseWPT"], "\<\"ShowBestBasis\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/ShowBestBasis"], "\<\"CostFunction\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/CostFunction"], "\<\"SecondParameter\"\>":>
       Documentation`HelpLookup["paclet:WaveletWare/ref/SecondParameter"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"List of Functions - Categorical\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Categorical"], "\<\"List \
of Functions - Alphabetical\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Alphabetical"], \
"\<\"List of Options and Values\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Options and Values"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WaveletWare/ref/BestBasisTree\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WaveletWare/ref/BestBasisTree"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/WaveletWare/ref/\
BestBasisTree.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$15856], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "WaveletWare/ref/BestBasisTree", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["BestBasisTree", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"BestBasisTree", "[", 
       RowBox[{
        StyleBox["data", "TI"], ",", 
        StyleBox["opts", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]takes data generated by ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WPTFull"]],"paclet:WaveletWare/ref/WPTFull"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " returns the tree for the best basis to be used with the wavelet packet \
transform."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6]]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->310777069],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["SecondParameter",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/SecondParameter"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["SecondParameter"]],
        "paclet:WaveletWare/ref/SecondParameter"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["BestBasisTree"], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WPT"]],"paclet:WaveletWare/ref/WPT"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " that allows a user to input a cost function that has a second \
parameter."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["CostFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/CostFunction"], 
    ButtonBox["NumberNonzero",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/NumberNonzero"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["CostFunction"]],"paclet:WaveletWare/ref/CostFunction"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option that allows the cost function to be set to something \
different than ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NumberNonzero"]],"paclet:WaveletWare/ref/NumberNonzero"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " (default) in ",
     Cell[BoxData["BestBasisTree"], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["WPT"]],"paclet:WaveletWare/ref/WPT"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True}}}}],

Cell[TextData[{
 StyleBox["BestBasisTree",
  FontFamily->"Courier New",
  FontSize->12],
 ", in conjunction with ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WPTFull"]],"paclet:WaveletWare/ref/WPTFull"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ", are the primary tools used by ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WPT"]],"paclet:WaveletWare/ref/WPT"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " to compute the wavelet packet transform of a given vector, matrix or list \
of matrices."
}], "Notes",
 CellID->76287567],

Cell["", "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(5)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->204978133],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->458310914],

Cell["This loads the package:", "MathCaption",
 CellID->16454449],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->861618089],

Cell["\<\
Find the best basis tree for the full packet transform of a vector.\
\>", "ExampleText",
 CellID->190235817],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"Range", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"v", ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "n", ",", 
         RowBox[{"n", "/", "4"}]}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Data Samples\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wptfull", "=", 
   RowBox[{"WPTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"SplineFilters", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"FullWaveletVectorPlot", "[", "wptfull", "]"}], ",", "2"}], 
     "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"tree", "=", 
  RowBox[{"BestBasisTree", "[", "wptfull", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", "tree", "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->153434240],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdxUsKgmAUQOGLI4cOHDRwkBIhIZKP0sxntQKXIDh2C/+SXUJJINxz4PD5
0zLOloiEvzf/rZ1Weq0NHejCA/TgEQbwBM8whBcYwRheYQJTmMEc3uAdFrCE
D1jBJ6xhA1vYwV5roAxaA+WlNVDeWgPls/sFkNUqdA==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Data Samples\"", TraditionalForm],
  PlotRange->{{0., 40.}, {0, 40.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}, {30, 
      FormBox["30", TraditionalForm]}, {40, 
      FormBox["40", TraditionalForm]}}, {{
      NCache[
       Rational[-1, 2], -0.5], 
      FormBox[
       RowBox[{"-", 
         FractionBox["1", "2"]}], TraditionalForm]}, {
      NCache[
       Rational[1, 2], 0.5], 
      FormBox[
       FractionBox["1", "2"], TraditionalForm]}}}]], "Output",
 ImageSize->{244, 169},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->214103176],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAADQNP8HyVvg5Q==
    "], {{0, 248}, {400, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{400, 248},
  PlotRange->{{0, 400}, {0, 248}}]], "Output",
 ImageSize->{404, 248},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->612442775],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 ImageSize->{319, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->152859971],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{1, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{2, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{3, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{5, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{6, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{7, 0}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 1}, {2, 2}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{2, 1}, {4, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 1}, {6, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{6, 1}, {8, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 2}, {4, 3}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 2}, {8, 3}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 3}, {8, 4}]}},
  ImageSize->Automatic]], "Output",
 ImageSize->{244, 125},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->243671850]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->387181503],

Cell["\<\
Compute the best basis tree for the full packet transform of a grayscale \
image using a different cost function.\
\>", "ExampleText",
 CellID->731230679],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{
    RowBox[{"PackageDirectory", "[", 
     RowBox[{"DataType", "\[Rule]", "Images"}], "]"}], "<>", 
    "\"\<train.png\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"ImageRead", "[", "file", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wptfull", "=", 
   RowBox[{"WPTFull", "[", 
    RowBox[{"A", ",", 
     RowBox[{"SplineFilters", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"FullWaveletPlot", "[", 
       RowBox[{"wptfull", ",", 
        RowBox[{"PacketPlot", "\[Rule]", "True"}]}], "]"}], " ", ",", "2"}], 
     "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"tree", "=", 
  RowBox[{"BestBasisTree", "[", 
   RowBox[{"wptfull", ",", 
    RowBox[{"CostFunction", "\[Rule]", "NumberAboveThreshold"}], ",", 
    RowBox[{"SecondParameter", "\[Rule]", "40"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", 
  RowBox[{"tree", ",", 
   RowBox[{"Show3D", "\[Rule]", "False"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->20355768],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XfUv1dV5/1fAgqOHUkhgIIoMBJAGSKggBQJIBHpIN1QAkgNHcRQQlOq
giIgoog6KqNILxmEAIEQCCWQYCip0juBAXlgXs/1Xt+9Lu7fL/GeZ/571nev
dV/r3Nf3XKfu/Tl7n7LPZY980K3uvf+ePXseelGPW/3OI69/9NG/8+hb/4R/
bvvAh973qAfe6543feDD7nXUvY6+5pEX8vI5+/X3/4a/t6UtbWlLW9rSlra0
pS1taUtb2tKWtrSlLW1pS1va0pa2tKUtbWlLW9rSlra0pS1taUtb2tKWtrSl
LW1pS1va0pa2tKUtbWlLW9rSlra0pS1taUtb2tKWtrSlLW1pS1va0pa2tKUt
bWlLW9rSlra0pS1taUtb2tKWtrSlLW1pS1va0pa2tKUtbWlLW9rSlra0pS1t
aUtb2tKWtrSlLW1pS1va0pa2tKUtbWlLW9rSlra0pS1taUtb2tKWtrSlLW1p
S1va0pa2tKUtbWlL/z+lF7/4xW984xtf/epXv+Y1r3n1QhOYf9HrXvc64X9Z
6JWvfGWBf/7nf37lQvMevepVr/rHf/xHP5VOnwu89rWvff3rX+9X/wq84Q1v
KE1hAb/61k+vXajE/Su+9//0T/9ULp7/43/8D/8WQUBer3jFK4S9F/CvwD8s
9Ld/+7fCshDtv//3//73GxIWTYR9/jsBn//9iv5uoflkTX+3ob9d6K//+q8L
/M1Cf/VXf/Xyl7/8rxcSeNnLXublyxf66w15KdpLX/pSz8L9O+GoyAJ/+Zd/
+bKFiubfifPnf/7n/i1aMZE4f7GQ7vZ8yUte8uINif+iF73ohS984Qte8AJP
/3r+2Yb8VMBL4Rcs9KcbEvkpT3nKLjlNMd7+9rf/z//5P4877jgs5/mmN70p
TtDjMUPcopf9671or1/ozW9+s2f/er5uofjqVQvhB70cSyCd6Cfp1KHTp9N3
Omu6b17WZdMvmrc3hWvk9TOaPpqfJjBNrelq7QIvXKhmr3m15J/8yZ9c/vKX
//mFrnCFK1x+oSte8Yr+nfcFvJw3/Tsv1ykUf/1t4Z5XWGidzjry/Lv+ZALz
nHL+/F60/nz9cmq34+U6sM/UVBAX4QrPb37zm1//+tcFvvOd73h++9vf/tKX
vvQf//Ef/+t//a9vfetbXn7lK1/57Gc/K9p5553np8985jNf3tDnPve5s88+
+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
/JA13f6HZrN91Sktv3rWII0pdXraTnvdfSjlFjsutPG/176vVhLDmXZ/NXXW
5+FV6wi6HucQt5mYUoDmxDJ7wy5ptiLW0sBYwcr5vcXr49pDSEN23L4DlNae
xnfoWtkUDDowpfHDnBadu+xG1+gmqAWgoJNu6nYVkPXsZz9bb4rvPSW/nTAG
X594A3A6twvr9CwMpGyDJtGoVXgJHIkAzSQoo+52yWl2B3u70Qab5a/Ah35t
ChQbSyQHLIzEnFNRDq961asSrqyeS262XO6Y4r7kZu/oJZeTMj+/uRZc6611
szChRYHm7i65OVWttbsHoZN96XjRGk9mevzA1Wb49WS+PtVKJOuEE06gSBi+
CcUhqwXNCjMm6qyApEZOdiHkgYvDExYTmSKkOZXasY1hXJLmE3X39mAngzCe
XDqvh0m6QjHjDiI1lY2MazpFwUgfVZwmRo8i1x2i6UY2IAblKEWQpAv+WHOY
pwMpWOtb3/oWJMcMxj5s2fYGMKiXdbowxpCaAkjHr83VH3/88WefffZ3vvMd
DYu9pcwCFT52IZ/82Z/9GT3w3HPPPeuss7o1+/TTT3/rW9+Kx7oIm2qHLRUb
Zj5uIbzHRpAp3hONAoldf3shxSMRxpr16t5+G58GIUAqUwpS6u5YT6LpBVyx
PiHYwkS61oBGdlyOmvcs3vMOWBx4YkJN3d5sDT7KWPZd4SYPZzasFLDBHMTr
3GJ7PrMHC2QJNjGFwag0eCAVi5nckclUsqojuya7YtEm7lILv7d4JUrrnsnk
QaExCWf/83pm+FKrdcOOtkEAOlJ9avjAOR2xJ0GQqtkAGKL3wZTuaxKAXDzt
aU/zEli1IiwmlqMCeS9+y82YzeeGzhvc4Aa+wpmZliIIi9Cq1tEL+Rdqic+0
EcYtgZ7CdKkWWINU3ZOl2OzWPKx28qKLe5rhz49BDqBm5nkmkQ5ePAwnvxGp
vORm+9ngm88lkl8vMNhqXZsw82QV1g06XXzlJGo2rI5eN7pfASyqcT70oQ+R
FEKnEZS/Dw/YHJycFNZq4cDp7C1pX5bCNPOjYKNjp1xlnDaQ9e/u9zOI3KlS
LKr6PvSGpECVdl61uZ1J6MlGo2+oiCJheJb7XI4mgFuIefOcqe7GOyCgZ7FE
KhkpwIef/vSn4ZWfDjvsMJhDBcID2EwAf2ISdly7EZ75zGcqQOeAKGzwSpkl
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
aq12EKOkDtlQe3JKpGmE3etX8EELEPPUnusslGbSGSIlJ+ZNEejK224IYqec
aDHhjjgJBFDd25gDmVQX0TISwYX3PtQy4WHAlWbbZjBQk6bUpYoQLFz6xYVC
sIAr+y7Vq8DcSCtmVdO5aVxSbiYNduG3CjA+ZFQwUMVvqiwCvBoPDEnrmF2z
Q2mEeqzC+akZrbHLZvfCfqs9UU3Lr/0e9HKO3jR3tE75BzdXS+8w1tYluWAo
2ycErf9dG317g9v8O+dx8m6aL0Q87N8OI5OOXOWP+YCl9RHEyKsJKdPIhCXX
dq2Ukdm87MIrCAC+jNdEKefVdZBeawNMltSLX/xiBpefiPm3vvWt2JvUwCKJ
tJmchQgKcmUTOMwCJejAzPmtJQWdRfWUHVmTL3Gj79Fz4EyHufBtxzEIe+fF
PvKRj0jQyAiN3/CGN0gT7HR9DJjKG97RRx+tsgpDJWvz1VyApWxdQPOqhbqk
TJr0qy984Qtf/epXoZaqsZdlgZmJErjTYuriK6nR7qiR8tLOuc9tlZMUkM2m
SlQHjMg3p/GdB89fjWSBeX7jyTuRMUDAW8UjL7OTp8MFbbTLHwIk7PCOztXj
wEELwBC9RsulwxDkAzY0KtZcbe/lLvGK3deVDfSQnMHiBBItR+rHnRfKVTWV
KXcQ+qifQK6qtayJtTBY5yXzSSig6djUymxAOXahZgn824mtfK6yJbvPqJML
nYTKIsshZIcLbrjQ4QtpCmHFbn4vtWpuyg7WsjT1Tkj1GxvSEU3M6sFWhVSn
NY5WdpREGbQD+DKytLGqEy4zTT0XYOVtRvv3RoeO+yms0uzH5S53uW6WmW5q
bqozlTq99cdOJsYM3bVayv2aVdK6Xi5/ZwJqTvPN8eoBxtlKsTY519A0M1QD
pGt/MtWr4z8zJ1bi+y2rou2/ak9UfBjVOCoCrNpNCrLa8YKlDR96lvGV+z5Q
Q/PpwtPcDhD2Lg1hD7YrmzRhEolgm/wvdeUBRspjJwGng+EWPIAVTz75ZNjS
oRJpQrZul5AXtS2/dvCB/kOL1iDNeuEifKVg+LyDcuEVeYfAVBfQwe7LyQwx
xD8Eh9RkIYIgBiDWxf9QEf+TEWXIJElYlCQnM7AIlClP9yEisAO7esKfdnJK
9vOf/zxT9GsLgSxaFkUOhrxhoTwfgjutp0HUt8X3NsDkt4QgAFVDMCYX/zvf
+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
tyXhJAYknrX0rAKDWv51ElaMo1FOm0FHEkiljVabD+f4Us7OvnG5DJ3mfPts
WtJEj/fqktxNiPj8psKuxKFKroZ+jlv7uFRFCY0hc10dvNRLAWyPBB11eHfO
hFJRhXnprxF0E5/6dyup9jPImpwdoeJ2tgrBKspXCKYm8vBgWhib2AbQTolX
DcstOAwsbI1F524Z7mnLF1vouCCXbcf59v7za76VA0HozC0tTqPEjQw2VT2o
c4i6lYK25VyMkbf/nrTq/MAP/EB79E4agg7KvKAMc/DgmYtscjkJIwf3HPT5
BQs/vjiIDV3QknbBMk++4mJ/fWpZH2yjzexxLixndqd8eAqA0HbgFrYy6bRt
LV/3HBFbrC+ezAQn2W4rziV+e5I5a1LqZJSu2CmnfUD3XWmiiRZHNHemPLp7
XSb0fBpbHSgM6dapoDpMrIOMyXkm1N7ZUzzLDb2xVcJe3f2zMjjBVKtVnZmn
QV3a4l1VnT1BuWldddVVLdT6qz6cDzEbiOrPKXY+1kSA6Xxurle3H3QbQGYK
74bqmYvp7EnMH68rs9wwyY/y2TglXo16O7PD9udMHNuLM5Uc3HnyfEsnn5pZ
ch6cnZ4Hb/zCNSLHBbchZArY1n/u2Z4cXDxZzws+9b3f+72m1O2r53hABxU4
eX7Bv7bV+4zogq+72J0HPXbKB09zp092ypG200477bTTTjvttNNOO+200047
7bTTTjvttNNOO+2000477bTTTjvttNNOO+2000477bTTTjvttNNOO+200047
7bTTTjvttNNOO+2000477bTTTjvttNNOO+2000477bTTTjvttNNOO+200047
7bTTTjvttNNOO+2000477bTTTjvttNNOO+2000477bTTTjvttNNOO+200047
7bTTTjvttNNOO+2000477bTTTjvttNNOO+2000477bTTTjvttNNOO+200047
7bTTTjvttNNOO+2000477bTTTjvttNNOO+2000477bTTTjvttNNOO+200047
7bTTTjvttNNOO+2000477bTTTjvttNNOO+2000477bTTTjvttNNOO+200047
7bTTTjvttNNOO+2000477bTTTjvttNNOO+2000477bTTTjvttNNOO+200047
7bTTTjvttNNOO+2000477bTTTjvttNNOO+2000477bTTTjvttNNOO+200047
7bTTTjvttNNOO+2000477bTTTjvttNNOO+2000477bTTTjvttNNOO+200047
7bTTTjvttNNOO+2000477bTTTjvttNNOL3jBC6655prf/u3ffvnLX/5bv/Vb
L33pS3/jN37jP/7H//jyhV7xile88pWv9O9/+k//6WUve5kb/PUbC/3ar/3a
f/gP/+FXfuVXXvSiF/2/G/r3//7f/9Iv/dILX/hCJwr/xYVesJCT5z//+Z07
+fmf//nnPe95P/MzP/PTCz33uc91/fGPf/yd73znL1rpC7/wC+9yl7t86Zd+
qfP/bSE/56+OqL+21+d8aPvXXRY6+At5tet3XqjrT3ziE7/4i794HuykZ0++
pfN5dnt9/prCtxWYt89xe/M84vjYxz72fve73/YV22pM3Q7eexq69J3bpm2r
9OVf/uWnHGm+rwHz7xb6hV/4hZ/7uZ/72Z/92Z/6qZ/6yZ/8yWc961k//uM/
/m/+zb+5+uqrn7WQ8x9d6JnPfOYznvGMpz3tac79a2g95jGPaYTMSBhqDBw0
fDuQusfjd7vb3b77u7/7YKRduitmzGwfufLKK5/whCd0cTs4D6pxUJkZq5EB
pibKUdrUc1vOfG508OkPKulf7brnPe/ZSD7oh4MO+cJbDsJtyc4f/ehHf+3X
fu100QVHwhfechB2Mn9ppuNDH/rQhzzkISeZ4mJ08tvFko5GkYHxu7/7u+Do
13/911+0UCj0q7/6qy9+8Ythzs8tBE9+4id+wpAzlgyhH/qhH/qRH/mRH/ux
H/O4nz+80LOf/Wz//tt/+2+f85znGIQ/vpJ7utN489P93/d93/fEhTxi9MKx
cO81r3nN93//9x8dHZ09e/bcuXNnVzp//vz87OTMmTPzr/MuOnZ9e8+ZleZ+
/1522WXK7HzIPbe+9a399Vmf9Vm3u93tXLn88ss181a3utWU2Z3z3pN0fEs6
+VcnNWquH1TSK7pZBc6v5LqeMar/yT/5J062/bOtz8kmn3zLwV/z1LaLtj1Z
jymhk9ve9rb6ZP46JV7d9a53feADH3jf+94X3t7//vd3/Jqv+Zp73OMeX/VV
X3X3u9/9XgthtHvf+94ugsEv+7IvM+Dv/f8Td6ZRd1X1/b/3Ps99xgyEQQRr
C6222oqCQkUkCSAkkIQAgYBAAEUDCSSIZQgYVEYhUkYJEBWZHLBaAQEZBIdq
67BqV2uXtrZ11VWXq/Vl+85X/D9rf9b+rv3c+yR9gl3rf16cde655+yzh9/+
/sb92+XgXV5897vffd1114FXNN/mWFv7k4oNNDAN53piYoK39thjj7322otR
Puigg6655hrLSc94YdszUrnwGfuB4ViwYAH9sM8++9x0002UM9ylDtnO6IT6
jJUDYqNKlHbjjTdy3X53+Bj+i/IhEipAo6anp/n5kY985A/+4A+sUvv8MH22
d6gtNM9bjCxFUc4HPvAB5IR09S7qMNBXVIMLmkYbuVi3bt3JJ588azkD/TxQ
IDWxw6kbXc0ZKgK1jjzySGgDkKd6IPyR5YBgICQuuLN06VIuDj/8cOjn4IMP
5g7P+wzHO8vBHc6WwJM89oY3vOH1r3/97//+7//e7/3e7/zO7+y///6vfe1r
uUNncmfvvfd+3eteBynyItRIiyDaCy+8EPnBru7OnF+zkqJU0f7VNnmYGofH
WuL0yUWLFlHPDFmvwBejzzMpauDY2f2Bf70YeLhTj4ERFJcEbeaX2EUzfYXZ
+sd//MftW8N12DWV7uKVgfp0Kyb4F9eQjTDO4WSEyOeIV/QtHevkyoeCJ92K
4RYOqU+V44/+6I9Atv322w/i2bhxIxz/ggsuGO40C2zJpm2X9dx3332hOsgS
SoPskR+GB2jXncm/e+6555vf/GaqB8hQFHh11VVXpS15OPWRVrsNMXtNOUwN
/qVKTD1+btmyhe5NHTrNMUAt7QU9xoSix5jXb3zjG8G9yy67jPk13JZd0Cp/
8TrlcKbPITBGin5GthmuzPAx8AlmOv1Dxehw5tQZZ5xxwgkn7GIu7KzbX/Wq
V1kOzXnTm95ExaCiP/zDP3xdOUASrjm/rh5c/9HMQ7ThL558Qzn+uB5vqIdP
/mE5uMhNzkAZYAv5wSvhrTBTnqGT4ZtAFvVZsmSJeLULmmmpgrkjF5MmW5mq
O5MtDhCwF/QG/ZnXoRlnCoNOF/GT8j/84Q+LVwMEM+ug7wwYBx4bGLgcvEt9
ZHMcVEYWw02qBPPlJlyvxaud0cys3fW/VmygWF4EMOkHf0LM/OwW8GRmMWG5
pmJzxKvXvOY1CopvectbkK/Wrl27evVqaIDz6aefDgEccMABTH9FXCcgH6X8
M88806/DLnlsw4YNnSJe+iRdxDNUjDNvcVOEt9UKgTwP8UN+XFBz8IFv/dmf
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
5au5fOf+QsLgMk0Cxp/8yZ/85q8gHkjc6WK72lFhwahb3ziKv2E/6eGqVlDv
Ff8LDd8059fy/WieLyfJX1UTb5SctulPV/VevZI/+O1vf/uNN9540w3sGomU
b5QGPI7+bvpr/gW7Rt9cqFr97+uvv/7d0iQ+SUL4Xml8r8v0PRf8+Mc//vd/
/3fuze26Mp/5UP+de+Jiy/caf/093dYXZKg0Hv1f//VfurF+XH0xH7i4/n6u
5Vn1qBa/nBtPOqd/mubns88+m5uNxefmFgBY6h4Wb5l76OVarme9+Pziiy8u
ya+09D/4wQ8AvAIF66c//an+atF/+MMfSkoBwUnq1Ycffqi/77//vv5+9NFH
+leyhz588sknP//5z3/xi1/ouTXuEySqz1opzeqbVRNx1p/5V9f86Ec/+vWv
f61++F49QN5zXaXl3xCP7tJfXSwKyUP1ZTqhT9pcP/kmd6lP9aO7INT61QCt
WhzA4gKpH73Rr371K80z/4K+BfIVU5qns+Jzm4JV1kP199/+7d/++q//Ope9
5ZZdTz8Zz9yQuEW3a8n+8R//se6ElwL7K/OTTuo35V+m+oUXXhAVSZOV7C1h
7MiRI0899dTRo0cPHz6sz/peSuWhQ4cky0kDJYjiwIEDYpX6UjxTIq6u2esm
9fPEiRPf/OY3n3vuuW984xv6IEqW3nr69Omvf/3r/FU/BI9JXN+zZ48eqg96
3GOPPaY+1eHzzz+vqQZLAUu+JC6ybyjM8aXS6i+/VDUM+zfddBO/cv0flaaT
Qspm7r2lNK7HF6ALdFn6JC9bf//qr/4KMBz9q575S9OX/E3L93NN3c5dRn5l
rgfzMD/le03FH7nxr3a6VocokYyfd6/HxufMA30yIdybmcms6jW5Pr2lw8yk
PrMozA//LsmvtNZaYhHJsWPHtPqPPvooSCPADou0RG/6RpwQGobCxeWeeeYZ
kYoITL+C9qZ5oNpXGvjJ+HQgHpYyVIRXSDSwY8cOfdAcimUxvbx+Jm3Tv0wL
/3K9tCoUxr/4i7+oySOtXoh6numNXzWq7du3M9vqR8OriWpbafWHkEceEeIB
yA48Lu3H3Jjb1W4stefqR9Q0w5cgn+t7TbX2vu7KW+SWOWpnTrgm48Sbpi9f
eeUVsQI2NZdlHjJFfMkFIU7+arHA+dfnS6Veasws2CTj2dxi7G4shGjloxKd
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
y3D3E8sarZN3gc4lGWoG4CdJvohjAoeFBFrxGXGbFcOLhWZWjQamXy9evDgs
1XIRV8QAZ1XMsD5rMx4/flyjgtLGhuicuCDXSskT+fjjj7FswyKwdWf29BM5
3bt37+agj06NKJI4GUnyqPao4Sg+GY/eVO8ONsvMiG1RlNieyDNvvvmmmH9s
JohP6Qe9YG9pY6MxI43QWywP0rslivcdFo6vJP1otsWp1IkUVZT62BBClnji
Tp8+LZUQ2kPOzOlD08x/+9vffvzxx0liXTXoU4S6FdfOEBUNnRzXd1JYHk2L
wYqRzBx+HINnr6o43zWy3JxxqV+Vp+9XaMMTp1Sgc0n9JJpl4OJchF7AjibO
s8DCH3l4i6tj5K5atItRqN6PtYbb3QjjvGpcAkTQTz/9NNuha2t/3ygWY8el
by0AX+HnE6PZZDZqdr3IMy/HH7IWkdK1y8Bv7xtZFLaWQBS4E9b4dWOGr7vW
cExzvSqHq+Mkkblh1OPplhTFqMnwgVgVlmkEIXDLrIrQTljUsCoVVzfOLF5f
GwQPct+Jq/FZb3EVlbFzfGLKq3UHDkHJVJKcYfsIe/EdY4TBYtM4xTsTlQN3
xai2kq8aByldb7BZOqz9OIONGYVdu2Pi8lA/M+eQ4mgjmpRXQ4scbExvrJcp
/EHvJS27sdWCMdTmhbGz6Tc9mJhYTsZdu3Z1nVQbwp66oPykhINe7rDLBc8+
+yzxomwxjhjs4ViosDjVu7I+Q0eOd+qXfBxcircvtNtK40O+ubU0feavjh4+
p9V31U1X5nN9ZX3vLbfcomPx3LlzOh1uLu1LG1u+2fRD2txP+cyvt5TG4+pb
5p7IZ12Dd/hLv+22+HaX+3KuaX506i158TWPqp6WK49NzHNJfiXBAJoBHeWO
0vTv9u3bRQma5DnywJXDZyhQY9ApfObMmS8VoygXaI2gN3WVb/Lhj93AAdP3
2BKlgGg/qp90ThQQY9NLpTddcIsb/UBFDECDl/7FT5j9gwAjMY/dwduF9jDp
54Muxs4vStO9dMX+opMvl6bP/MSNi4vCUPXh1Vdfvf/++79UqJeudC+oMvW7
LG6xvBr9UM+LecvmZcn4PPdSc2TDrOqz+JVUQl5Wt+tL0HWAi+Gyem65PSOs
udCSlNa2trWtbW1rW9va1ra2ta1tbWtb29rWtra1rW1ta1vb2ta2trWtbW1r
W9va1ra2ta1tbWtb29rWtra1rW1ta1vb2ta2trWtbW1rW9va1ra2ta1tbWtb
29rWtra1rW1ta1vb2ta2trWtbW1rW9va1ra2ta1tbWtb29rWtra1rW1ta1vb
2ta2trWtbW1rW9va1ra2ta1tbWtb29rWtra1rW1ta1vb2ta2trWtbW1rW9va
1ra2ta1tbWtb29rWtra1rW1ta1vb2ta2trWtbW1rW9va1rbfXfsfP5SPrA==

    "], {{0, 400}, {400, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{400, 400},
  PlotRange->{{0, 400}, {0, 400}}]], "Output",
 ImageSize->{404, 400},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->18969824],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 ImageSize->{497, 63},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->62505593],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztlT1Ow0AQRlfQUHIF7kBBS0kblAMkIkQ0QUqQEDfkVsFoG2SP9sfjGS/x
e1IQrMbffut9Infb99XrVQjhdNP9WG0+H4/HzdfzbffH+nB62x92L0+Hj91+
d3zYXneL993nu/v8/n4GAPgnhGagWC1tFmuqTGj1LQWKVfK3TM1/uOkRO+iL
xYS1gnHF5hronXd4/MKBxC7pAbzCK7xSxuIVXmUXR8TiFV5lF0fELs2r2Sk8
ggNiB32xmIBXzhQewQGxg75YTFiaV73yw+NkBxK7pAfwCq/wShmLV3iVXRwR
a+RVC7RZbKrr0yN20BeLCXjlzFTXp0fsoC8WE4y80uxbmFA70Nt3WKP31DBE
OYBXeCWG4FV5LF7hVXZxRCxe4VV2cUTs0ryancIjOCB20BeLCXjlTOERHBA7
6IvFhKV51dslse8wRDmAV3glhuBVeSxe4dVwsQUoVkXiTp0RO8z3YvpQrIrE
nTojdtAXiwlG34PZp+b6HkzMWA/gFV5ZDOAVXlkM4BVeWQzg1QV7NTuFR3BA
7KAvFhPwypnCIzggdtAXiwlL8yoxYz2AV3hlMYBXeGUxgFd6r1qgzWJTXZ8e
sYO+WEzAK2emuj49Ygd9sZhg5FX2qdrYqrOXvLHhjPUAXuGVxQBe4ZXFAF7h
lcUAXl2wV7NTeAQHxA76YjEBr5wpPIIDYgd9sZiwNK8SM9YDeIVXFgN4hVcW
A0OvWkB8Sy1AsSqaKhNafUuBYpWcAQAAAMCAH4lp554=
    "], {{0, 52}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 52},
  PlotRange->{{0, 200}, {0, 52}}]], "Output",
 ImageSize->{204, 52},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->95394635]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True],

Cell[CellGroupData[{

Cell[TextData[{
 "CostFunction",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->336193635],

Cell[TextData[{
 "The ",
 ButtonBox["WaveletWare",
  BaseStyle->"Link",
  ButtonData->"paclet:WaveletWare/tutorial/WaveletWare Package"],
 " package comes with four cost functions:  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ShannonEntropy"]],"paclet:WaveletWare/ref/ShannonEntropy"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SumOfPowers"]],"paclet:WaveletWare/ref/SumOfPowers"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NumberAboveThreshold"]],
    "paclet:WaveletWare/ref/NumberAboveThreshold"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ", and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NumberNonzero"]],"paclet:WaveletWare/ref/NumberNonzero"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " (default).  Any of these (or a user-constructed cost function) can be used \
to compute the best basis tree by setting the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CostFunction"]],"paclet:WaveletWare/ref/CostFunction"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " option."
}], "ExampleText",
 CellID->136239078],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"Range", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"v", ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "n", ",", 
         RowBox[{"n", "/", "4"}]}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Data Samples\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wptfull", "=", 
   RowBox[{"WPTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"SplineFilters", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"FullWaveletVectorPlot", "[", 
       RowBox[{"wptfull", ",", 
        RowBox[{"PacketPlot", "\[Rule]", "True"}]}], "]"}], ",", "2"}], "]"}],
     ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"tree", "=", 
  RowBox[{"BestBasisTree", "[", 
   RowBox[{"wptfull", ",", 
    RowBox[{"CostFunction", "\[Rule]", "NumberNonzero"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", "tree", "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->498875522],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdxUsKgmAUQOGLI4cOHDRwkBIhIZKP0sxntQKXIDh2C/+SXUJJINxz4PD5
0zLOloiEvzf/rZ1Weq0NHejCA/TgEQbwBM8whBcYwRheYQJTmMEc3uAdFrCE
D1jBJ6xhA1vYwV5roAxaA+WlNVDeWgPls/sFkNUqdA==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Data Samples\"", TraditionalForm],
  PlotRange->{{0., 40.}, {0, 40.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}, {30, 
      FormBox["30", TraditionalForm]}, {40, 
      FormBox["40", TraditionalForm]}}, {{
      NCache[
       Rational[-1, 2], -0.5], 
      FormBox[
       RowBox[{"-", 
         FractionBox["1", "2"]}], TraditionalForm]}, {
      NCache[
       Rational[1, 2], 0.5], 
      FormBox[
       FractionBox["1", "2"], TraditionalForm]}}}]], "Output",
 ImageSize->{244, 169},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->25666504],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 248}, {400, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{400, 248},
  PlotRange->{{0, 400}, {0, 248}}]], "Output",
 ImageSize->{404, 248},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->401774745],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 ImageSize->{319, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->168184163],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{1, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{2, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{3, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{5, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{6, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{7, 0}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 1}, {2, 2}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{2, 1}, {4, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 1}, {6, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{6, 1}, {8, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 2}, {4, 3}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 2}, {8, 3}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 3}, {8, 4}]}},
  ImageSize->Automatic]], "Output",
 ImageSize->{244, 125},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->2000944]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->335270761],

Cell[TextData[{
 "Find the best basis tree with a user-defined cost function.  The cost \
function Cst must satisfy \[LineSeparator]",
 "\n",
 "Cst(",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {"a", "b"}
    }], ")"}]], "InlineFormula"],
 ") = Cst(a) + Cst(b)\[LineSeparator]\[LineSeparator]and Cst(0) = 0.  "
}], "ExampleText",
 CellID->23758204],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"Range", "[", "40", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"v", ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "n", ",", 
         RowBox[{"n", "/", "4"}]}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Data Samples\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wptfull", "=", 
   RowBox[{"WPTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"SplineFilters", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"FullWaveletVectorPlot", "[", 
       RowBox[{"wptfull", ",", 
        RowBox[{"PacketPlot", "\[Rule]", "True"}]}], "]"}], ",", "2"}], "]"}],
     ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Logarithm", " ", "of", " ", "the", " ", "energy", " ", "cost", " ", 
    "function"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Cst", "[", "v_", "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"#", "\[Equal]", "0"}], ",", "0.", ",", "True", ",", 
         RowBox[{"N", "[", 
          RowBox[{"Log", "[", 
           RowBox[{"#", "^", "2"}], "]"}], "]"}]}], "]"}], "&"}], ",", "v"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tree", "=", 
  RowBox[{"BestBasisTree", "[", 
   RowBox[{"wptfull", ",", 
    RowBox[{"CostFunction", "\[Rule]", "Cst"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", "tree", "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->181849447],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdxUsKgmAUQOGLI4cOHDRwkBIhIZKP0sxntQKXIDh2C/+SXUJJINxz4PD5
0zLOloiEvzf/rZ1Weq0NHejCA/TgEQbwBM8whBcYwRheYQJTmMEc3uAdFrCE
D1jBJ6xhA1vYwV5roAxaA+WlNVDeWgPls/sFkNUqdA==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Data Samples\"", TraditionalForm],
  PlotRange->{{0., 40.}, {0, 40.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}, {30, 
      FormBox["30", TraditionalForm]}, {40, 
      FormBox["40", TraditionalForm]}}, {{
      NCache[
       Rational[-1, 2], -0.5], 
      FormBox[
       RowBox[{"-", 
         FractionBox["1", "2"]}], TraditionalForm]}, {
      NCache[
       Rational[1, 2], 0.5], 
      FormBox[
       FractionBox["1", "2"], TraditionalForm]}}}]], "Output",
 ImageSize->{244, 169},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->358496732],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 248}, {400, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{400, 248},
  PlotRange->{{0, 400}, {0, 248}}]], "Output",
 ImageSize->{404, 248},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->512471147],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 ImageSize->{319, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->429906855],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], RectangleBox[{0, 0}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], RectangleBox[{1, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{2, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{3, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{5, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{6, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{7, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 1}, {2, 2}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{2, 1}, {4, 2}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 1}, {6, 2}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{6, 1}, {8, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 2}, {4, 3}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 2}, {8, 3}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 3}, {8, 4}]}},
  ImageSize->Automatic]], "Output",
 ImageSize->{244, 125},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->517144306]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "SecondParameter",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "Some costs functions (e.g., ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NumberAboveThreshold"]],
    "paclet:WaveletWare/ref/NumberAboveThreshold"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SumOfPowers"]],"paclet:WaveletWare/ref/SumOfPowers"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ") require a second parameter."
}], "ExampleText",
 CellID->14018720],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"Range", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"v", ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "n", ",", 
         RowBox[{"n", "/", "4"}]}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ",", 
         RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Data Samples\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wptfull", "=", 
   RowBox[{"WPTFull", "[", 
    RowBox[{"v", ",", 
     RowBox[{"SplineFilters", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"NumIterations", "\[Rule]", "iterations"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"FullWaveletVectorPlot", "[", "wptfull", "]"}], ",", "2"}], 
     "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"tree", "=", 
  RowBox[{"BestBasisTree", "[", 
   RowBox[{"wptfull", ",", 
    RowBox[{"CostFunction", "\[Rule]", "SumOfPowers"}], ",", 
    RowBox[{"SecondParameter", "\[Rule]", "2"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowBestBasis", "[", "tree", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"tree", "=", 
  RowBox[{"BestBasisTree", "[", 
   RowBox[{"wptfull", ",", 
    RowBox[{"CostFunction", "\[Rule]", "SumOfPowers"}], ",", 
    RowBox[{"SecondParameter", "\[Rule]", ".5"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ShowBestBasis", "[", "tree", "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->79184216],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdxUsKgmAUQOGLI4cOHDRwkBIhIZKP0sxntQKXIDh2C/+SXUJJINxz4PD5
0zLOloiEvzf/rZ1Weq0NHejCA/TgEQbwBM8whBcYwRheYQJTmMEc3uAdFrCE
D1jBJ6xhA1vYwV5roAxaA+WlNVDeWgPls/sFkNUqdA==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Data Samples\"", TraditionalForm],
  PlotRange->{{0., 40.}, {0, 40.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}, {30, 
      FormBox["30", TraditionalForm]}, {40, 
      FormBox["40", TraditionalForm]}}, {{
      NCache[
       Rational[-1, 2], -0.5], 
      FormBox[
       RowBox[{"-", 
         FractionBox["1", "2"]}], TraditionalForm]}, {
      NCache[
       Rational[1, 2], 0.5], 
      FormBox[
       FractionBox["1", "2"], TraditionalForm]}}}]], "Output",
 ImageSize->{244, 169},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->4287048],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAADQNP8HyVvg5Q==
    "], {{0, 248}, {400, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{400, 248},
  PlotRange->{{0, 400}, {0, 248}}]], "Output",
 ImageSize->{404, 248},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->180436894],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 ImageSize->{319, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->133959233],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{1, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{2, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{3, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{5, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{6, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{7, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 1}, {2, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{2, 1}, {4, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 1}, {6, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{6, 1}, {8, 2}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 2}, {4, 3}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 2}, {8, 3}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 3}, {8, 4}]}},
  ImageSize->Automatic]], "Output",
 ImageSize->{244, 125},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->175624880],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 ImageSize->{319, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->119043656],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], RectangleBox[{0, 0}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], RectangleBox[{1, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{2, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{3, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{5, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{6, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{7, 0}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 1}, {2, 2}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{2, 1}, {4, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 1}, {6, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{6, 1}, {8, 2}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 2}, {4, 3}]}, 
   {RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
    EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{4, 2}, {8, 3}]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{RGBColor[0., 0., 0.], Thickness[Large]}], 
    RectangleBox[{0, 3}, {8, 4}]}},
  ImageSize->Automatic]], "Output",
 ImageSize->{244, 125},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->76463786]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WPTFull"]],"paclet:WaveletWare/ref/WPTFull"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["WPT"]],"paclet:WaveletWare/ref/WPT"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["InverseWPT"]],"paclet:WaveletWare/ref/InverseWPT"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ShowBestBasis"]],"paclet:WaveletWare/ref/ShowBestBasis"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CostFunction"]],"paclet:WaveletWare/ref/CostFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SecondParameter"]],"paclet:WaveletWare/ref/SecondParameter"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["Computing and Plotting Wavelet Packet Transformations"]],
   "paclet:WaveletWare/tutorial/Computing and Plotting Wavelet Packet \
Transforms"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->22628462],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Categorical"]],
   "paclet:WaveletWare/guide/List of Functions - Categorical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->212762488],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Alphabetical"]],
   "paclet:WaveletWare/guide/List of Functions - Alphabetical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->68406876],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Options and Values"]],
   "paclet:WaveletWare/guide/List of Options and Values"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->353790524],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Links"
}], "RelatedLinksSection",
 WholeCellGroupOpener->True,
 CellID->1584193535],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 "Wavelet packet transform are described in Chapter 9 of the book  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Wavelet Theory: An Elementary Approach with Applications"]],
    "http://www.wiley.com/WileyCDA/WileyTitle/productCd-0470388404.html"},
   "WebLink",
   BaseStyle->{"RelatedDemonstrations"}]]],
 ", David Ruch and Patrick Van Fleet, Wiley, 2009."
}], "RelatedDemonstrations",
 CellID->217455910]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"BestBasisTree",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:WaveletWare/guide/WaveletWare", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 8, 25, 9, 45, 58.0784005}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "WaveletWare`PacketTransforms`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Wavelet Ware Package Symbol", "language" -> "en", "paclet" -> 
    "WaveletWare Package", "status" -> "None", "summary" -> 
    "BestBasisTree[data, opts] takes data generated by WPTFull returns the \
tree for the best basis to be used with the wavelet packet transform.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "BestBasisTree", 
    "titlemodifier" -> "", "windowtitle" -> "BestBasisTree", "type" -> 
    "Symbol", "uri" -> "WaveletWare/ref/BestBasisTree"}, 
  "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[10453, 305, 387, 15, 30, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->204978133]},
 "RasterizedOutput"->{
  Cell[15120, 454, 6593, 116, 269, "Output",
   CellTags->"RasterizedOutput",
   CellID->612442775],
  Cell[26096, 696, 150833, 2481, 421, "Output",
   CellTags->"RasterizedOutput",
   CellID->18969824],
  Cell[178807, 3238, 1301, 29, 73, "Output",
   CellTags->"RasterizedOutput",
   CellID->95394635],
  Cell[185711, 3444, 6747, 118, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->401774745],
  Cell[199881, 3775, 6747, 118, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->512471147],
  Cell[214194, 4109, 6593, 116, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->180436894]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 232468, 4579},
 {"RasterizedOutput", 232612, 4583}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[585, 21, 5182, 125, 48, "AnchorBarGrid",
 CellID->1],
Cell[5770, 148, 290, 11, 44, "ObjectNameGrid"],
Cell[CellGroupData[{
Cell[6085, 163, 701, 20, 83, "Usage"],
Cell[CellGroupData[{
Cell[6811, 187, 738, 24, 31, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->310777069],
Cell[7552, 213, 31, 0, 70, "SectionHeaderSpacer"],
Cell[7586, 215, 53, 0, 70, "Notes"],
Cell[7642, 217, 2132, 59, 70, "3ColumnTableMod"],
Cell[9777, 278, 593, 19, 70, "Notes",
 CellID->76287567],
Cell[10373, 299, 31, 0, 70, "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10453, 305, 387, 15, 30, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->204978133],
Cell[CellGroupData[{
Cell[10865, 324, 195, 6, 25, "ExampleSection",
 CellID->458310914],
Cell[11063, 332, 65, 1, 31, "MathCaption",
 CellID->16454449],
Cell[11131, 335, 126, 4, 42, "Input",
 InitializationCell->True,
 CellID->861618089],
Cell[11260, 341, 118, 3, 33, "ExampleText",
 CellID->190235817],
Cell[CellGroupData[{
Cell[11403, 348, 1567, 45, 187, "Input",
 CellID->153434240],
Cell[12973, 395, 2144, 57, 190, "Output",
 CellID->214103176],
Cell[15120, 454, 6593, 116, 269, "Output",
 CellTags->"RasterizedOutput",
 CellID->612442775],
Cell[21716, 572, 462, 15, 35, "Output",
 CellID->152859971],
Cell[22181, 589, 2049, 43, 146, "Output",
 CellID->243671850]
}, Open  ]],
Cell[CellGroupData[{
Cell[24267, 637, 125, 3, 70, "ExampleDelimiter",
 CellID->387181503],
Cell[24395, 642, 164, 4, 70, "ExampleText",
 CellID->731230679],
Cell[CellGroupData[{
Cell[24584, 650, 1509, 44, 187, "Input",
 CellID->20355768],
Cell[26096, 696, 150833, 2481, 421, "Output",
 CellTags->"RasterizedOutput",
 CellID->18969824],
Cell[176932, 3179, 1872, 57, 84, "Output",
 CellID->62505593],
Cell[178807, 3238, 1301, 29, 73, "Output",
 CellTags->"RasterizedOutput",
 CellID->95394635]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180169, 3274, 168, 5, 70, "ExampleSection"],
Cell[CellGroupData[{
Cell[180362, 3283, 199, 6, 70, "ExampleSubsection",
 CellID->336193635],
Cell[180564, 3291, 1274, 39, 70, "ExampleText",
 CellID->136239078],
Cell[CellGroupData[{
Cell[181863, 3334, 1723, 50, 70, "Input",
 CellID->498875522],
Cell[183589, 3386, 2119, 56, 190, "Output",
 CellID->25666504],
Cell[185711, 3444, 6747, 118, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->401774745],
Cell[192461, 3564, 462, 15, 35, "Output",
 CellID->168184163],
Cell[192926, 3581, 2047, 43, 146, "Output",
 CellID->2000944]
}, Open  ]],
Cell[CellGroupData[{
Cell[195010, 3629, 125, 3, 70, "ExampleDelimiter",
 CellID->335270761],
Cell[195138, 3634, 350, 11, 70, "ExampleText",
 CellID->23758204],
Cell[CellGroupData[{
Cell[195513, 3649, 2242, 66, 70, "Input",
 CellID->181849447],
Cell[197758, 3717, 2120, 56, 190, "Output",
 CellID->358496732],
Cell[199881, 3775, 6747, 118, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->512471147],
Cell[206631, 3895, 462, 15, 35, "Output",
 CellID->429906855],
Cell[207096, 3912, 2167, 45, 146, "Output",
 CellID->517144306]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[209324, 3964, 182, 5, 70, "ExampleSubsection"],
Cell[209509, 3971, 491, 16, 70, "ExampleText",
 CellID->14018720],
Cell[CellGroupData[{
Cell[210025, 3991, 2045, 58, 70, "Input",
 CellID->79184216],
Cell[212073, 4051, 2118, 56, 190, "Output",
 CellID->4287048],
Cell[214194, 4109, 6593, 116, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->180436894],
Cell[220790, 4227, 462, 15, 35, "Output",
 CellID->133959233],
Cell[221255, 4244, 1985, 41, 146, "Output",
 CellID->175624880],
Cell[223243, 4287, 462, 15, 35, "Output",
 CellID->119043656],
Cell[223708, 4304, 2102, 43, 146, "Output",
 CellID->76463786]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[225849, 4352, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225917, 4357, 270, 12, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[226190, 4371, 1814, 52, 70, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[228041, 4428, 272, 12, 70, "TutorialsSection",
 CellID->250839057],
Cell[228316, 4442, 31, 0, 70, "SectionHeaderSpacer"],
Cell[228350, 4444, 264, 7, 70, "Tutorials",
 CellID->22628462],
Cell[228617, 4453, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228685, 4458, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[228964, 4472, 31, 0, 70, "SectionHeaderSpacer"],
Cell[228998, 4474, 221, 6, 70, "MoreAbout",
 CellID->212762488],
Cell[229222, 4482, 222, 6, 70, "MoreAbout",
 CellID->68406876],
Cell[229447, 4490, 211, 6, 70, "MoreAbout",
 CellID->353790524],
Cell[229661, 4498, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229729, 4503, 280, 12, 70, "RelatedLinksSection",
 CellID->1584193535],
Cell[230012, 4517, 31, 0, 70, "SectionHeaderSpacer"],
Cell[230046, 4519, 431, 10, 70, "RelatedDemonstrations",
 CellID->217455910]
}, Open  ]],
Cell[230492, 4532, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

