(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    314975,       6480]
NotebookOptionsPosition[    301951,       6067]
NotebookOutlinePosition[    306914,       6206]
CellTagsIndexPosition[    306790,       6200]
WindowTitle->HuffmanTree
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["WAVELET WARE PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MakeHuffmanCodes\"\>":>
       Documentation`HelpLookup["paclet:WaveletWare/ref/MakeHuffmanCodes"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"List of Functions - Categorical\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Categorical"], "\<\"List \
of Options and Values\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Options and Values"], "\<\"List of \
Functions - Alphabetical\"\>":>Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Functions - Alphabetical"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WaveletWare/ref/HuffmanTree\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WaveletWare/ref/HuffmanTree"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/WaveletWare/ref/\
HuffmanTree.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$52698], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "WaveletWare/ref/HuffmanTree", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["HuffmanTree", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"HuffmanTree", "[", 
       RowBox[{
        StyleBox["codes", "TI"], ",", 
        StyleBox["opts", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]takes the Huffman codes generated by ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["MakeHuffmanCodes"]],
        "paclet:WaveletWare/ref/MakeHuffmanCodes"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " (first argument) and makes a Huffman tree from them."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6]]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->655169872],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["NodeColor",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/NodeColor"], 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.666667", ",", " ", "0.666667", ",", " ", "0.666667"}], "]"}], 
    Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NodeColor"]],"paclet:WaveletWare/ref/NodeColor"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that gives the background color for the nodes."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["NodeEdgeColor",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/NodeEdgeColor"], 
    RowBox[{"GrayLevel", "[", "0", "]"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NodeEdgeColor"]],"paclet:WaveletWare/ref/NodeEdgeColor"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that gives the edge color for the nodes."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["NodeEdgeThickness",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/NodeEdgeThickness"], 
    ButtonBox["Medium",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Medium"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NodeEdgeThickness"]],
        "paclet:WaveletWare/ref/NodeEdgeThickness"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that sets the thickness of the edge of the nodes."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["NodeSize",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/NodeSize"], "0.2", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NodeSize"]],"paclet:WaveletWare/ref/NodeSize"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that sets the radius of the nodes in the tree."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["NodeFontSize",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/NodeFontSize"], "12", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NodeFontSize"]],"paclet:WaveletWare/ref/NodeFontSize"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that sets the font size when labeling nodes in the tree."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["NodeFontColor",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/NodeFontColor"], 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.333333", ",", " ", "0.333333", ",", " ", "0.333333"}], "]"}], 
    Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NodeFontColor"]],"paclet:WaveletWare/ref/NodeFontColor"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that sets the font color when labeling nodes in the tree."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BranchLength",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/BranchLength"], "0.1", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BranchLength"]],"paclet:WaveletWare/ref/BranchLength"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that sets the lengths between nodes."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BranchColor",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/BranchColor"], 
    RowBox[{"GrayLevel", "[", "0", "]"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BranchColor"]],"paclet:WaveletWare/ref/BranchColor"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that sets the color of the lines between nodes."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BranchFontSize",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/BranchFontSize"], "12", Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BranchFontSize"]],"paclet:WaveletWare/ref/BranchFontSize"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that sets the font size when labeling edges."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BranchFontColor",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/BranchFontColor"], 
    RowBox[{"GrayLevel", "[", "0", "]"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BranchFontColor"]],
        "paclet:WaveletWare/ref/BranchFontColor"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that sets the font color when labeling edges."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BranchThickness",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/BranchThickness"], 
    ButtonBox["Medium",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Medium"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BranchThickness"]],
        "paclet:WaveletWare/ref/BranchThickness"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that sets the thickness of the branches."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ShowString",
     BaseStyle->"Link",
     ButtonData->"paclet:WaveletWare/ref/ShowString"], "", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ShowString"]],"paclet:WaveletWare/ref/ShowString"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " is an option for ",
     StyleBox["HuffmanTree",
      FontFamily->"Courier New",
      FontSize->11],
     " that indicates whether or not string input should be displayed."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[TextData[{
     ButtonBox["ImageSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ImageSize"],
     " is an option that specifies the overall size of an image to display \
for an object. "
    }], "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, None, {
     None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True}}}}],

Cell[TextData[{
 "The input ",
 Cell[BoxData[
  StyleBox["codes", "TI"]], "InlineFormula"],
 " is the first element (of three) returned by ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["MakeHuffmanCodes"]],"paclet:WaveletWare/ref/MakeHuffmanCodes"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 ".  It is a list of triples of the form {",
 Cell[BoxData[
  StyleBox["v", "TI"]], "InlineFormula"],
 ",",
 Cell[BoxData[
  StyleBox["f", "TI"]], "InlineFormula"],
 ",",
 Cell[BoxData[
  StyleBox["b", "TI"]], "InlineFormula"],
 "} where ",
 Cell[BoxData[
  StyleBox["v", "TI"]], "InlineFormula"],
 " is the value (a character or integer), ",
 Cell[BoxData[
  StyleBox["f", "TI"]], "InlineFormula"],
 " is its relative frequency within ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  StyleBox["b", "TI"]], "InlineFormula"],
 " is a list of 0s and 1s that denote the binary representation of ",
 Cell[BoxData[
  StyleBox["v", "TI"]], "InlineFormula"],
 " with respect to this Huffman coding of ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula"],
 ".  "
}], "Notes",
 CellID->65118016],

Cell[TextData[{
 StyleBox["HuffmanTree",
  FontFamily->"Courier New",
  FontSize->12],
 " is not designed to plot Huffman trees associated with large data sets.  It \
is meant to be used as an instructional tool that is best utilized with a \
maximum number of \[TildeTilde]20 distinct characters."
}], "Notes",
 CellID->189315782],

Cell["", "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(15)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->129106048],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->31385617],

Cell["This loads the package:", "MathCaption",
 CellID->16454449],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->861618089],

Cell["Create a Huffman tree for a simple string.", "ExampleText",
 CellID->599657210],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->620302983],

Cell[BoxData[
 GraphicsBox[
  TagBox[{{
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.21270038138513625, 2.286866558889224},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 2.7122673216594966`}, {0., 
        1.8614657961189516`}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"1\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.6381011441554088, 2.286866558889224},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 2.7122673216594966`}, {0.850801525540545,
         1.8614657961189516`}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.6381011441554088, 1.4055325476390763},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.850801525540545, 1.8614657961189516`}, {0.4254007627702725,
         0.9495992991592013}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"1\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {1.0635019069256813, 1.4055325476390763},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.850801525540545, 1.8614657961189516`}, {
        1.2762022883108175`, 0.9495992991592013}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.21270038138513625, 0.47479964957960064},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 0.9495992991592013}, {0., 0.}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"1\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.6381011441554088, 0.47479964957960064},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 0.9495992991592013}, {0.850801525540545, 
        0.}}]}}}, {
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.4254007627702725, 2.7122673216594966}, 0.2], InsetBox[
       StyleBox["\<\" \\n1.0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0.4254007627702725, 2.7122673216594966}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0., 1.8614657961189516}, 0.2], InsetBox[
       StyleBox["\<\"s\\n0.36\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0., 1.8614657961189516}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.850801525540545, 1.8614657961189516}, 0.2], InsetBox[
       StyleBox["\<\" \\n0.64\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0.850801525540545, 1.8614657961189516}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.4254007627702725, 0.9495992991592013}, 0.2], InsetBox[
       StyleBox["\<\" \\n0.27\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0.4254007627702725, 0.9495992991592013}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{1.2762022883108175, 0.9495992991592013}, 0.2], InsetBox[
       StyleBox["\<\"i\\n0.36\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {1.2762022883108175, 0.9495992991592013}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], DiskBox[{0., 0.}, 0.2], 
      InsetBox[
       StyleBox["\<\"m\\n0.091\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0., 0.}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.850801525540545, 0.}, 0.2], InsetBox[
       StyleBox["\<\"p\\n0.18\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0.850801525540545, 0.}]}}},
   Annotation[#, 
    VertexCoordinateRules -> {{0.4254007627702725, 2.7122673216594966`}, {0., 
     1.8614657961189516`}, {0.850801525540545, 1.8614657961189516`}, {
     0.4254007627702725, 0.9495992991592013}, {1.2762022883108175`, 
     0.9495992991592013}, {0., 0.}, {0.850801525540545, 0.}}]& ],
  AspectRatio->1.4578286677041756`,
  FrameTicks->None,
  ImageSize->300,
  PlotLabel->FormBox[
    StyleBox["\"\"", 
     GrayLevel[0.5], Plain, 24, StripOnInput -> False], TraditionalForm],
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 ImageSize->{304, 464},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->62697102]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->533053980],

Cell["Create a Huffman tree for codes generated from a matrix.", "ExampleText",
 CellID->197612213],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "A", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "A", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->168597186],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "1", "0", "2", "1", "6", "4", "4", "3", "1"},
     {"5", "2", "1", "2", "2", "0", "4", "5", "5", "2"},
     {"3", "3", "3", "2", "6", "5", "2", "2", "6", "2"},
     {"3", "0", "5", "5", "6", "0", "6", "5", "0", "5"},
     {"1", "0", "0", "0", "6", "6", "2", "4", "5", "0"},
     {"6", "0", "0", "0", "1", "3", "2", "0", "0", "4"},
     {"3", "5", "0", "6", "2", "4", "6", "3", "3", "1"},
     {"2", "0", "4", "1", "3", "3", "1", "1", "6", "6"},
     {"6", "4", "3", "4", "6", "6", "2", "5", "4", "6"},
     {"3", "4", "3", "5", "4", "1", "4", "5", "2", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 ImageSize->{166, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]//MatrixForm=",
 CellID->177496196],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AgEWt8OpdnZ2Pvroo6tXryppLJFIpLu7u6am5vPPP7f7wOF8+bpfUbSNjY1t
bW3Ki9bn82WP0rNPHICTiIvTx48fi8ZSW1t77969ubm5lZWVo6YRi8XEK2Nj
Y2LY4/V6RWv629/+VldXZ/dRw+GKTpuIylRetPmuMdMnfAAnEUOjo45aDIdE
M7ly5UpFRYXn0KlTp8QroVAovZWJRsfaYJhKYa+rvGjzoZjhSDMzM4uLi2q/
a319vbe314zjAb6ztsB2d3cDgYD4f2t+HWCNyspKDVUtrnDFN3IfCmYQQ3HR
2Vp5p16M28Xo3bJfB5htc3Ozvb1d2/eOjo5Go1FjjwcQXbro2EX3bvHvnUuy
+JcCJhGXveLiV9v3bm1tNTU1GXs8wODgYCwWs+VXM/EOZ0gkEpWVlXqufBsa
GqwfX8HBRK8u+na7fjsT73CGaDQ6Ojqq5ycsLi7OzMwYdTxwOeun2bOJcTuf
tkapa2pq0vmZazHCESN/o44HbmbXNHu2cDg8OTlp91EAGolG1NDQoP/niEHO
5uam/p8Dl7Nxmj1bV1fXxsaG3UcBaGHUx/H41Db0k22onEgkxEVEPB63+0AA
dcT1b11dnSH3jAz8UXCnra2tYDAo2xS3nEcFFGbsYJsdOaCZzCNk2a4mgKKM
nU7c3t4WzdOonwZXkXxmW/LDA9Lt7u7W1dUZe7Ep+nbRwxv4A+EG8g+MxWVF
U1OTDKt3gKLMaFDyN1LIplQmtGVYdQ/k8XoktfNp8/Jbc8bYB9cCf/262TPy
2tgfDSfIqMDv5J5mz5bxadm3yxQ55HBci/v/+ux3Js2Nd/2sLtl6KXuckFmB
yX+V3MciDpbfH5yjKHLIQJTjYSm+Xa70+MZN2LwxWfK+C40XGNIgS0YFigr5
VQnuuLi3t/fhe6LILy2/ZtwOOYjWdHghvLf3p+97/m7xP8zadL2y4tRlT4iy
R4a0ChT9/H/3+D/6aUnulH4w8c7EIyQhBk2HLWt9/fE5T/lRMzPczBdttZ5P
KHtkSKvA3d219zw/+OrfS/WTbvsT792f0LdDCmmjpvb2xg6Pz7y+fefffvOO
5zRljwxpFRgMfizG7eZVoAUmB1vOen5GkUMCB7Od+3s2Vpwyd8jxdrnM8/7/
1re3JBznoAL3J9nvt5f6oHfvr1//vaeaIocE9m9fiXHT4uLiF2015jast8sf
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
    "], {{0, 408}, {500, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{500, 408},
  PlotRange->{{0, 500}, {0, 408}}]], "Output",
 ImageSize->{504, 408},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->284296212]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(13)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True],

Cell[CellGroupData[{

Cell[TextData[{
 "NodeColor",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NodeColor"]],"paclet:WaveletWare/ref/NodeColor"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " controls the color of the nodes of the tree."
}], "ExampleText",
 CellID->437321114],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"NodeColor", "\[Rule]", "Yellow"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->181803667],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->301785194],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAABLn/wFmsHLl
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->110435470]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "NodeEdgeColor",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NodeEdgeColor"]],"paclet:WaveletWare/ref/NodeEdgeColor"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " controls the color of the edges of the nodes of the tree."
}], "ExampleText",
 CellID->278209333],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"NodeEdgeColor", "\[Rule]", "Green"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->843826586],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnV9MW1l+x912NFRa1RNlx90xeORgBAKbFSGuOy4WhZXZGSwvAjwOzWCn
CpuQmVruOAy4ZC0Gb0ZYSAwSVNoMElLkl6JIVBrmYQiqVIm3cbsvefQDD36q
5pHHPKY/2xj/uzbXxvecc6+/n4fEvvfa+Pu7v/M7v/Pvnu7fR3yP/1Kn0y3/
Nf3jW1j9zVdfLfzh0xv05u6Xy//y+ZeLjzxfrix+vviV8/d/RQf/8S90uv+h
/7Ov3wIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABqkMlk
kslkPIerwOrqKr3d29tLp9O8fyBQEycnJ8Fg0GQyGY3GiYmJuzniBebn5+mt
x+Mxm80Gg8Hv9798+ZL3Twbi8ubNG4pCPT09DocjFAo9f/788Cr29/cjkcjY
2Bg5YSKROD8/5y0CiEUqlbJarRSFdnZ2rnSnasgJfT6fxWJB7AJ5KEyFw2Gb
zdacR1WEL4pdbrcbgavNIaeanJxcWFi4pkeVEovFnE7nzz//zFsc4ANFFXKq
tbW1FjpVnq2traGhIWpO8pYIOOByuZRwqjyUcQ0MDKBCbDe2t7enp6cVcqo8
lLYFAgHeQgE70ul0X1/fwcGBon5FOByOk5MT3nIBI4LBYCgUUtqpDnOJFrU0
ecsFLKCWWmdnJ4NglYf8KpVK8RYNFGdvb8/j8bBxKoICI4VH3qKB4jCrBPMk
Egm73c5bNFAcl8sVj8eZ+dX+/r7BYOAtGiiOyWSSM6bcQnQ6HW/RQHGoVqK6
iZlTJZNJvV7PWzRQHL/fH4lEmPkVuhrahPX19bm5OWZ+FY1GvV4vb9FAcdLp
tNlsvtohXjx7dHdZaurMznJ+CumjZy9k+NXIyMjR0RFv0YAFVzcJL3yn2q+K
3lbT70qgxmBXV9ebN294KwYsoABCYaSuTz16tiPpN3SycFCGY1Eut7GxwVsu
YIfP51taWqrnE5JuQweL1R/5WL26kDL24eFhBKu24vz83GKxUD3VmF+VuVI9
vzo4OBgcHHz9+jVvoYA1dNPtdnvNPtJrxCtyqtHR0ePjY94SAR/ItRwOh/SK
Cen06er8KplMwqlAJpOxWq3379+X51fZo/kgJXk+HA53d3fDqcDb3KqclZUV
m80Wi8Wk/arMh6T7rxKJBIW+QCCAlTiglFQq5Xa7jUbj4uKi/Fl/dGUoFKIY
RakaphyDWkQiEQo7HR0dvb29U1NT0Wg0Ho9TylTqSHSEItvs7CyFOLoyGAze
uXPn9PSU928HgpJOp2/fvp3vcaKUnvJ5r9frcrn0er2uADkSHaHItrm5eTnB
mJK0/v5+dFUBSZxOZ9Nz0cnNnj592trfAzTA3t7eF1980fTHKViRW6IjFJRC
jTiqyK65PJmciqrRVv0koAFmZmZaMpvlyZMnlJVd/3uABiCPIr9qyVdRbUhx
D0/8AFT3kSe0sDPz5ORkcnKyVd8GVArl6pSxt/Y7Hzx4kEwmW/udQEWkUilq
xLX8ayn6UQKPAZ32hHIhuvsKPS6b4hVFLSW+GQhO/rnZyn0/ZVkYMWw3Sods
FAKDO23Aq8f54b2R3bPc++sM2cinOLhztjuie/xK6b8HmFK8qflX1xyyaQiK
iq//9GnOp+FXGoOCVeGenu06dMEPrz1kI5+cT/1i9xXileagIFWo/sjHbulu
PvyO6QJkqgo3V34Hv9IaFK4KfnV09DX51aWTsSE7uGP5lV33GfxKUxTiVW7I
5sOgzsHYr4jT/wi/p+uEX2mLi/wqO2TzzV0+9dHZ7t/q+pYwuKMpsq3AXz/5
T6fTya25n2svWDC4oy3evPnhl+X9V6zJOfTqy5f37t3j8veBEig9ZCMfDO5o
BgZDNvLB4I5mYDNkI5+dnZ0nT57w/hXgWrAcspFPdnAHK3dUS0tW2SgBORVF
UdSGKqVVq2yUIDu4s7nJ+1eAhmnhKhslwModNdLyVTZKcHp6Oj4+zvtXgAZQ
YpWNEmDljopQaJWNEqgiroK3Cq+yUYKXGNxRA+IM2cgHgztcoEYTJSF5h3EV
WF1dpbeURJWGJqGGbORD9eCtW7dKf7Z8yaBRqAgHg0GTyWQ0GicmJvIPi40X
mJ+fp7cej8dsNhsMBr/fTxWKaEM28skP7jQhmfcPVw1UbKlI9vT0OByOUChU
fG5/4TnE1dsh7e/vRyKRkZGRGzduJBIJATvY65OX/N577925c6dMcm3yksfG
xsgJ1SiZMRRtrFYrFcmqZ/UXH8hfZ78juiM+n89isaioINeWLAs1SmYJldlw
OGyz2WqY94pNjkqhskwF2e12C16Kr5LcAGqRzBiyMLWJFhYW6tkuG6ca2FEy
FotRuiVs15AsyQ0iuGTGUBEjC6+trck1n+zQtbW1NTQ0JOAYXMOSZSOsZPZQ
C/pqC5f6UgNVYjb9GBgYEK12kCW5WcSUzJjt7e3p6Wk55io2B6/c/rYcymEC
gQBvoUXkS24a0SQzJp1O9/X1yd+MpmkcDocgHdptKJk9wWAwFAopbeHDXNZB
zS7ecrO0oWTGULOls7OTQcnNQ0bm3hXfhpLZs7e35/F42FiYoChBsQKSNQ+z
GiFPIpGw2+2QrHmorR2Px5kZeX9/32AwQLLmMZlMcgZYW4hOp4NkzUMhmgI1
Mwsnk0m9Xg/Jmsfv90ciEWZGFqHd3YaS2bO+vj43N8fMyNFo1Ov1QrLmSafT
ZrO5yhiF4RrJEUDpqX2XEx3qjRqOjIxwX/vcjOR66urMRBNFMheq2kdFQ0mY
rORQ6dnihL/a49HUMurq6hJh3ntjkuuqyztcLb8SRzJ7qDRRmZK04hVlsXi2
5CO1ocRmY2ODt9wsDUqurY4ufrS8XNtG4kjmgs/nW1paKrHVZZGsNxumrJA/
evasbkVC6evw8LA4JbcByTXV5T9Ws+yJJpk95+fnFouFgnaVXWv41UW6UTiV
e1usHas+cXBwMDg4KNTDphqQXENd4aW0XwkomQtkAbvdnu0wlB2vimfrfoQs
PDo6enx8zFtiJXIlS54tHpTwK2Elc4Hs7HA4dnbW5OZXxcxjZ7nGfUkmkyJb
WJ5kCXXFaf4FLi8RXDIXMpmM1Xrns7kLK0nnsFIuVLYArHBBOBzu7u4W3MJX
S66hrkDZJ1QhmQuUZ66shD6pKIQV3QsSS3Iue7WylyUSCYoDgUBAFctSrpRc
oa6ci+vUJZkXqVTK7XYbjcbFxUX5U+DoylAoZLPZKG9R3fzbNpTMC6ojyMgd
HR29vb1TU1PRaDQej1P+UGpVOhKLxWZnZ8m2dGUwGFT19Mjvv/++q6tLvuR3
3333gw8+ULVkjlB+u7Oz4/V6XS6XXq/XFSD70xEq5pubm9qw7eXDt+VLfvLk
CV3J+4cDcWnuOfN43B+oAznG7Wa3+hJz4wMgAtd8yi52rwDVkEuQY/D9BqA9
WvKMQbU8VxywIZlMPnjw4PrfI+xOQIA9rW3NYfs5kKflvU9I4IESybaKNtoA
CjE+Pn56etryr7137x4eYNu2KLd3SfUWA6BNoJtOt165wRck8O2J0oPF5LeU
ZSGB1zqvHuenI4zsnrHawefk5GRycjL76mx3RPf4laJ/DHCgeF/zr5ht3ZXd
2/rrj3MODb/SHhSsCrf1bLdf9/E/sNpy+iCYnbH17Q/fIl5pEApSuervbTbt
+eFvdB3f/MRurtTm5ubTzyfgVxqEwlXBr54+nft7nfniDROyW95bfmXXfQa/
0hqFeJXJZPr7P3yoc7L0K+Lou4c3dbfgV5rjIr/KZtHfPeRQJZ3tkl993ZZP
K9I02VZg/8PvyK/4tPjPdqke/LC/Hz3wGoPS9Rsl/VesyXnz3NOnlMOz/+NA
ObKNsqdP+f4GpUeOAGPEGQU+OjqaYdV1BpQmm64LkzMz6+oHilIcpBOD169f
O51OEYInaBq6fbdv306n07x/SBlYd692xJwEhQRe1YiTrlej3FRVoDSCTzJv
yUpYwJjT09Px8XHev6IeWHevOtQyBxgJvLoQM12vBg/OUhHqekgCHpylFh48
eJBMJnn/igbAunvxUeMadiTw4qPSso8HZ7Enk8lQvRbP4SqwurpKb+lelI7R
qDdXqcgJyySPTc7e/d1EDcmgUU5OToLBoMlkMhqNExMT+c0e4gXm5+fprcfj
MZvNBoPB7/eTwZt+6qwIUBt2ZmamIcki9/qKxps3b8hDenp6HA5HKBTKbrZ1
Ffv7+5FI5KOPPnr//fcTiYRaWoKXXEoeGBiQkCy1YU9e8tjYGDmhGiUzhrJu
q9VKRZIKr8xtREqhO+Lz+SwWi4oK8tWS626ppkbJLKEyGw6HbTZbcx5VCpVl
Kshut1vwUixX8lVb9alIMmPIwpOTkwsLC9f0qFJisZjT6RQ23WpAsgy/UoVk
xlARIwuvra1d25Uq2draGhoaorYVb4mVNCZZtl+JLJk9LpdLCafKQ+kHJcOi
1Q6NSW7Er4SVzJjt7e3p6emmXEYulMMEAgHeQos0LLlBvxJQMmPS6XRfX5/8
HSSbxuFwCLIEpg0lsycYDIZCIaUtfJjLOqjZxVtuljaUzBhqtnR2djIouXnI
yNwn/bahZPbs7e15PB42FiYoSlCsgGTNw6xGyJNIJOx2OyRrHmprx+NxZkbe
3983GAyQrHlMJpOcMeUWotPpIFnzUIimQM3MwslkUq/XQ7Lm8fv9kUiEmZFF
aHe3oWT2rK+vz83NMTNyNBr1er2QrHnS6bTZbJayx85yfqLko2cvqk9mBzUu
yI9tlBwoO17ByMgI90dgNSm5cLJc2aVuyc+IIpkLUu2j4mCY1LAYmbhgxuzp
KpOWnC+FWkZdXV0iPACkYcklh0rPktCLl8JLZg+VJipTVZ5RsF21lUtOVr2r
beLDQ0psNjY2eMvN0rBkaR+rki6wZC74fL6lpaUy0xVdo6afSJ6tdU8ofR0e
Hhan5DYtuSyuPXr2rHbdKZpk9pyfn1ssFgraUnatY+TqWlD64oODg8HBQaFW
FDYj+SKZKs0BSmrH8k8IKJkLZAG73X7RYSir8GYT2coTUteShUdHR4+Pj3lL
rKRxyeVna39EWMlcIDs7HI7c8oGrko3SolrXrZLJpMgWbkByuczc6Z1lKb8S
XDIXMpmM1Wq9fz94WcHVaBxJ2r2yMgiHw93d3YJbWJbkGrVk0RcL0lUhmQuU
Z66srNhsIwsVCWnB3LW7qooGTyQSFAcCgYAqlqVcKfmwTHVp2bns1Vr+N1VJ
5kUqlXK73UajcXFxUf4UOLoyFArZbDbKW1Q3/7YNJfOC6ohPPvnknXfe6e3t
nZqaikaj8Xic8odSq9KRWCw2OztLtu3o6Lh58+aPP/7I+4c3D0kmvyIh8iUH
g8E2nBF6HbJ7jPb3k6kpv6Xk1uv1ulwuvV6vK0BWpSNUzDc3N/O21czWM/Il
g0Zp7gGheHI1qEPTz/PHg+9AHa7z8DrVPVwUsOGaMUfkvUsAR8bHx09PT6/z
DSJsjQqEoiVtOuyWBUpp4V6BmulzANentZuPoM8BvFVg8xH0OYC3yuxsJfj+
g0BpFIot6HNocyYnJxUakc8/UV+JbwaCo2jbDX0O7UkL+xZqgR262xA2G5uq
dJMvIJtXj/NziUZ2zxhubFpsF5ztjugev1L67wGmFG9q/hXLXbOzfQ6r7pxP
w680BgWrwj092x3SfWph2G95EMzOuPz2h28Rr7QGBalc9Zfj1Ye6G5+/YDrb
P9vj8K+T8CutQeGq4FdHR1/f0t28dDI2ZPscum46dEH4laYoxCu6v05n/6e6
IcZ+Rbzc+ef3dT3wK21xkV9l+xYejPGpj852f6H75Z/Q56Apsq1Axzc/UZP/
p28cfNIc5u0FwIRXvy7pv+JAroNjDPMctMXr16+dTif3CQaY56AxZmZmBHmS
KuY5aAah5pxjnoM2yPUtOIUa/MU8Bw3AZt5Co2Ceg6qh6obuoICVDtZWqBqW
8xYaBWsrVIogfQu1QJ+DShGnb6EW6HNQHUL1LdQCfQ6qQy0NLvQ5qAgx+xZq
oZYi0Oacn5/39/erqHJBn4MqELlvoRbocxCcdDpNZV91jXf0OQiO+H0LtUCf
A3symUwymcxb3lVgdXWV3u7t7V2uhT85OZmcnOT7U5umos9BpmTQBOQnwWDQ
ZDIZjcaJiYn8Zj/xAvPz8/TW4/GYzWaDweD3++mFqhtWlGKNjY01JBlZmXyo
5FKR7OnpcTgcoVDo+fNvKzd/rdpEfX9/PxKJOJ1OuiOJRILBAvnWcil5YGAg
J/l5Yees5WcXm2pVbjqZl0x+qFLJjEmlUlarlYpkbuPF4tZlJfum362zbTzd
EZ/PZ7FYVFSQpSQfFvyq4FDZl9L7TqpRMkuozIbDYZvNVmXe0r0jS1/X3DqW
yjIVZLfbLXgpri256FclG5rW2SdXNZIZQxamlHthYUHKZg37VZ5YLEY1o7Ad
pHUlSwgs2TRXrZIZQ0WMLLy2tlbDWk36FbG1tTU0NERtK94SK7lKcrXAK+KV
+JLZQy3ouhZu3q8Oc+kHJcOi1Q5XSb4UWKgIZWkVWjJjtre3p6en69rpWn51
mNvYOhAI8BZaRIbkosDlZen2oLokMyadTvf19cnfWbhpHA6HIDsRNyK5kSAl
sGT2BIPBUCjUpOEagbIOanbxlpulEcnX8itxJDOGmi2dnZ0MglUeMjL3bWva
UDJ79vb2PB4PGwsTFCUoVkCy5mFWCeZJJBJ2ux2SNQ+1tePxODMj7+/vGwwG
SNY8JpOpMMDKCJ1OB8mah0I0BWpmFk4mk3q9HpI1j9/vj0QizIwsQru7DSWz
Z319fW5ujpmRo9Go1+uFZM2TTqfNZnPBBlVz9cqQOvviYsabxMQkqalZIyMj
3Ke+l0uuq66+ojraBZPMhUL7qGg1KY+QPFucm5Q9WHpHLu5S2bdQy6irq0uE
BS9VTcL62iUVFfvhK7ULKZk9VJqoTJXNLZIwrtTZsmkjRTtfzLDcqfwSSmw2
NjZ4y81SkFxXXaVPlSuq1C4dssSRzAWfz7cUfijpJIfSZsy9qeFXxY+UWJvS
1+HhYXFKblby0lI9ddWUKbo6XokmmT3n5+eWv/vt3YU/1LRt5azJygnfuVyj
pl8dHBwMDg4KtU4nK9lioXqqtrr6fnVYPyUTUDIXXv/385mZ335bXIQiI14d
FnPXXCUh7Vdk4dHR0ePjY94SK6Gbbrfbs32kTcSr0iBVtZ5CWMk8+PMf7/7x
Nw5HdvmAzPyq1gUll20mkyJbmFzLkZW8dpW6qlO1Q1xSbMnM+b+jlbtfvvhf
q9Ua/GxOsj2Yt115e7Akx6j4yItnn929b+/uFtzCmUzGar1DiqvU1fWrGvEq
HA53Cy+ZOX/+93zCML94x2aLxWJVmWpVOlE4VlF1JBIJh+vjubv/9F9qWJZC
qfXKSuiTCiHVHlZx5FJ77jNZyQ5HIBDASpw6pFIpt9ttNBoXFxflT4GjK0Oh
kM1mo7xFdfNv21AyL6iOICN3dHT09vZOTU1Fo9F4PE75Q6lV6QhFttnZWbIt
XRkMBlU9PbINJXOE8lvK571er8vl0uv1ugJkVTpCxXxzc1Njtm1DyQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO78Pxv3Zlc=

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->62045655],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnX9oW1eWx7W7w2RhWLdk6p1x4uLEIcG2MuSH0I7WJpsMzrQ2npDEtbNp
rC7JJE67QlsndbzJmDSalBhDEpAXpvVgCPpnjMFLR90widhCEISm2pp0TQup
WlyiDGXaLRgMbhpZT3buHkmW9etJfpL17rvv6fvh0VrvSYq+55177rm/3t38
677O039tMpn6/5b+03ni/C/eeOPEb156ll50v97/r6++3nuq/fVzva/2vmH7
9d/QyX/6K5Ppf+j/sb8ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAIA8hFvIwj4u56GiRWhLH+afn6eUoGw2yoNY/EOgJH/PZo/baaG3N
Qs3+r/Z3P+imw+V3JY5jnx6jl+2P2uue1FUvVndFuybYhNY/GYhLmIUpCm2R
tlhnrY4px9u33p5cjbGbY32Bvr1f7yUnHFoammNzWosAYhFggaZIE0Uht8+9
qjvlQk7Y+UVnfaQesQskoDDljDrN8+bSPCorfFHsapVaEbgqHHKqtnDbiU9O
rNGj0hm8O2gL275h32gtDmgDRRVyqosfXCyjUyW4+v7VHU92UHNSa4lAA1qk
FjWcKgFlXI0LjagQK43ri9cPPjyoklMlcN539kg9WgsF/Aiy4Lbvt42/O66q
XxHWWauP+bSWCzhhj9odUw61nWoynmiZJbPWcgEPqKW2IbKBQ7BKYJ43B1hA
a9FAdUbZaPujdj5ORVBgpPCotWigOtwqwQRDd4YskkVr0UB1WqQWl9/Fza/G
bo5VL1ZrLRqoTm20VsmYchkxMZPWooHqUK1EdRM3p/J4PVVLVVqLBqrTFe3q
C/Rx8yt0NVQIl55eOvLZEW5+NXBvoEPq0Fo0UJ0gC9Y9qVvdIW5cPtXdLzd1
xt3fHefU5RsK/Kr522Yv82otGvBg9Sbhsu/k+lXK2/L6XRrUGNwobQyzsNaK
AQ8ogFAYKehTpy67Zf2GLiZPKnCsrpmuK4tXtJYL+NEZ6Tz70dlCPiHrNnQy
Vf2RjxWqCylj37WwC8Gqophjc/WReqqnivOrDFcq5Ffj745v/277NJvWWijg
Dd10y7wlbx/pGuIVOdWe2T23lm5pLRFoA7mW9bFVfsWEfPq0en7l8XrgVCDE
Qk2RplcevKLMr2JnE0FK9rrzvnPzwmY4FWDxVTnnoufM8+bBu4PyfpXhQ/L9
V0N3hqyz1h6pBytxQDoBFmiVWmsWano/7lU+64/e6ZhybP6/zRbJginHIB99
7j7rfeu6p+u2Pt564MsDA/cGXH4XpUzpjkRnKLId/vwwhTh6pz1q3+3Y7ff7
tf7tQFCCweDOnTvD4ViPE6X0bubukDpapJaqpSoTMyUOciQ6Q5FtmA2vTDAO
hUINDQ2JDwKQhc1mCwRKnIs+PDx84cKF8v4eYABGR0dfe+21kj9OwYrccnoa
HaEgxTfffEMV2dzcmpYnk1NRNVqunwQMwKFDh7zeMsxmOXPmjNvtXvv3AANA
HkV+VZavotqQ4h6l8WX5NqBfqO4jT6B6sFxf6PP52trayvVtQKdQrk4Ze3m/
8/jx4x6Pp7zfCXREIBCgRlzZv5aiHyXwZYyBQEdQLkR3PxhU5XHZFK8oaqnx
zUBwXHHU+37KsijXUu/7gYCkD9moBAZ3KoDbp01xmkdm4q/XMmSjnNTgzsxI
s+n0bbX/PcCV1E1N/LXGIZuioKg4/buX4j4NvzIYFKyS93RmxGqyP7/mIRvl
xH3qRyO3Ea8MBwWpZPVHPrbJtP7kO1wXIFNVOHzuV/Aro0HhKulXXu+b5Fcr
TsaH2OBO/U8sppfhV4YiGa/iQzbP201Wzn5F+P/gfMa0AX5lLJbzq9iQzVvd
2tRHMyN/b9p2FoM7hiLWCvzZmf+02WyaNffj7YV6DO4Yi3D4vR9n9l/xJu7Q
5ycmjh49qsm/D9RA7SEb5WBwxzBwGLJRDgZ3DAOfIRvluN3uM2fOaP0rwJrg
OWSjnNjgDlbu6JayrLJRA3IqiqKoDXVKuVbZqEFscGd4WOtfAYqmjKts1AAr
d/RI2VfZqIHf79+3b5/WvwIUgRqrbNQAK3d0hEqrbNRAF3EVMJVX2ajBBAZ3
9IA4QzbKweCOJoRYyMM8LnIZ5mqRWhLH+afn6eUoGw2yVGgSashGOVQPbtq0
Kf1nK5cMisXHfPaovTZaW7NQs/+r/d0Puulw+V2J49inx+hl+6P2uid11YvV
XdGuCTYh2pCNchKDOyVI1vqH64YwC1OR3CJtsc5aHVOO1HP7k88hzt0Oaezm
WF+gr/nPzc/OPTu0NDTHhOtgL0xC8jNfP7P7290ZkvOTkLz3673khHqUzJkA
CzRFmqhI5jyrP/VA/gL7HdEd6fyisz5Sr6OCnF+yIvQomSdUZp1Rp3nenMe8
q2xylA6VZSrIrVKr4KV4NclFoBfJnCELt4XbTnxyopDtYnGqiB0lB+8O2sI2
YZ/Sr0hykQgumTNUxMjCFz+4qNR8ikPX1fev7niyg9pWWkvMpmjJihFWMn+o
Bb26hdN9qYgqMZZ+NC40ilY7KJJcKmJK5sz1xesHHx5UYq5Uc3DV7W8zcd53
9kg9WgtNoVxyyYgmmTNBFtz2/Tblm9GUjHXWKsjmNRUomT/2qN0x5VDbwpPx
rMMsmbWWG6MCJXOGmi0bIhs4lNwE1Jxf2c4Gkg3MKBttf9TOx8IERQmKFZBs
eLjVCAmG7gxZJAskGx5qa7v8Lm5GHrs5Vr1YDcmGpzZaq2SAtYyYmAmSDQ+F
aArU3Czs8Xqqlqog2fB0Rbv6An3cjCxCu7sCJfPn0tNLRz47ws3IA/cGOqQO
SDY8QRase1KXY4zkcI3sCKD81L6ViQ6FRg2bv232Mo3XPpciuZC6AjPRRJGs
CTnto5ShZEyWdir9amrCX/7xaGoZbZQ2hpn2896Lk1xQXcLh8vmVOJL5Q6WJ
ypSsFVcpi6mraR/JT9dM15XFK1rLjVGk5Pzq6M2n+vvz20gcyZrQGek8+9HZ
NFutFMlCs2EyCvmpy5cLViSUvu5a2CVOyS1Ccl51iY/lLXuiSebPHJurj9RT
0M6xax6/Wk43kpfiL1O1Y84nxt8d3/7d9mkm0MOmipCcR13yT3m/ElCyJpAF
LPOWWIeh4niVulrwI2ThPbN7bi3d0lpiNkoly15NnZTxK2ElawLZ2frY6vZd
VJpfpTIPd3+e++LxekS2sDLJMupS0/yTrLxFcMmaEGKhpsjul53LVpLPYeVc
KGMBWPINzvvOzQubBbfw6pLzqEuS8QldSNYEyjPPRR0vZhXCrO4FmSU5K71a
sbcN3Rmyzlp7pB5dLEtZVXKWukyW36cvyVoRYIFWqbVmoab3417lU+DonY4p
h3nebJEsupt/W4GStYLqiN7F3nVP1219vPXAlwcG7g24/C7KH9KtSmcG7w4e
/vww2ZbeaY/adT098o//+8eNNzcql/zDpR/+1PdTXUvWEMpv3czdIXW0SC1V
S1UmZkocZH86Q8V8mA0bw7YrD99WLvnMmTNut1vrHw7EpbTnzONxf6AA5Bg7
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
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->740460753]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "NodeEdgeThickness",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NodeEdgeThickness"]],
    "paclet:WaveletWare/ref/NodeEdgeThickness"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " controls the thickness of the edges of the nodes of the tree.  The default \
value is ",
 ButtonBox["Medium",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Medium"],
 ".  Other values can be ",
 ButtonBox["Tiny",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Tiny"],
 ", ",
 ButtonBox["Small",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Small"],
 ", ",
 ButtonBox["Large",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Large"],
 " or a positive number."
}], "ExampleText",
 CellID->41733359],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"NodeEdgeThickness", "\[Rule]", "Large"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"NodeEdgeThickness", "\[Rule]", ".015"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->595098710],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->738392584],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
YNtHiTaIRywvL3uxRGp1dTVUG+eJFe9yl1hTDJBQgYeOR+/d5AsD+HAy9XC9
B/gtoiwG8EHn8U2xBOHqwbGsDD5PnjxJJpPN344Prho3H3t6M6KAznMVvw1O
3TVFmrmtP/6p6dD0q+CByqr1WI8PFoyf/qOslNMP34ZHPX/3y7usrwIIKimz
+fuuGfZ8+ZfG859+I2+tVLFY3L31Jv0qgKC6avnV7u4vf2S8dPofKTRT3l/6
/qvGr+lXQaNVXzUajYWFixtGQqZfgcpnG+eMGP0qcJzGV80o+rMNBU3S8QH8
6uNKRfJticc0e4ELG5/Br9T0+I8P0A5eXFjgCHzAQLh+1jJ+JRvTm3+5uxuq
U5HDQLNTtrur9jt4PXNEJKPPLHClUknLGjojXtMM17WJmaUN9RNP6UzS6UGt
VkskEjpUnmRs8PiuXLlSr9dVf5EuvF5KQbxGz0VQDOB9jT7hej/eLVUlXqP5
IvOp7IQlkqlWq8vLy6q/xSC47953+GUNMAN4f6FnuN4PD87yEf46JIEHZ/mF
9fV1fx0ey333+uPHPewM4JWDR4CO3oDuuU/L/oCDs4ZKJqNSr9fFyVTtk9V7
iMViq6uriNKFL/k3VmnHhDaSz1+5lnntkoNk4p5nz57BQ2x9KR6PXzbpv/Ti
iy/Oz89/++23qr/+OEByJpM5d+7cSJKht1AosDs5FJgXhhIpZgwz78Pi4uLa
2tr+/r5tuofDw8Pt7e3l5eV2xgfDzPfnI1MPl9ydsCcAkiVjzSSCQgrrDc4h
0sPe3h6eiHi7X/KJuJLsnFLNj5IlUywWhX2i0SjK70geZQXF2czP1SSdTus5
6SxwK3lYqj4fSZYMgu22WR6KXFqTgYKPBsUw84zoOUA6guRhfuUXyZJBbGCY
qZZRq0/uUW1QikUEgrKsm51Hk+zOrzSXLBn0+0Sw6hSZT0LbzlqtdBpZsmu/
0layZOr1eiQSgRGy2ez43jPMzqgWcAtNYtpxJI/iVxpKlo9IxIafY7mMWxB4
iO6SDk1DCCVLplarieZgaE7SyRGDispXOoVQsnxyuRyEp1Ipry0M8vm8iGYp
OfCIMMOLcL0fdOTFgLbaObUQSpbMycmJCAAkWFiwtLSEOyrcRhFCyfI5OjoS
MxfSjJxOp3FHhce5hFCyfFCIIBkFSpqRNzc3cUeFq2hCKFk+1WoVktFnkWbk
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
CCGEEEIIIYQQQgghhBBCCCGEEEJc8v8Zn5lg
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->302097381],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnU9sG1d+x6dNiAhQjApx2RWqGNWqTUNUXiyTBRes6XbpdbiRlg1gx6BX
1hopE4sOo2ZDJYoQlUgqOIUwBwOhgF3GgAFDlxUEqAcmF+vIW1zkoqMOOvBU
+Kijj+6P88THx+EMNaQ4770Zfj+HRCTNGX5/83vv/d7f308/KL179y8Nw1gd
o/+8+/4XVz777P3/vDFBL3KfrH704SeFpflPPi98WPgs+cEL9Oa//oVh/C/9
v/n3cwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAUNBoNLa3
tzcsVlZW0ul0sVhkLx88eHB4eKj6B4Igsbu7m8/np6enjdOYnJxcWFggHzs+
Plb9q4GmPH36lCoicpVT3ambiYkJqspQgwEbpmmOjY3ZvCUSicTj8ZxFuVxm
LSB7mUqlyJe6HYwqOtRdgKBKJplMir4RjUbJczY3N/dOo1KpFAqF1157zdY4
7u/vq5YFVEIOIFZT5CFra2unulM35IRUg4neRTWbanFADRSfc6eiJm9xcXEA
jxKhtlJsHKkLqVoikE2tVhMbPmrRzuhUjO3tbQrJ4FqjCXX9eMUyPT398OHD
oTgVY2dnJ51Oc9dCrDU6zM3N8ZqKapghOhUnkUjwMB49xFFAbAEpuvbDqQiq
A3mViNZwFOCVVTab9cmpGNS1ZDciB3v27Jlq3cBHGo0Gr6yGFav3gFdZ1Nqq
lg58xDRN9qBnZ2f9dioil8ux21ElqVo68JFiscgedKFQkOBXVCWy28ViMdXS
gY/w4KpcLkvwq52dHXa7sbEx1dKBj1C9IS24YvAQ6+nTp6rVA7/gI5b+jTDY
4N0E1dKBj+TzefaUl5eXJThVtVrlo/qqpQMfoWqKPehMJiPBr0qlErsd1ZOq
pQMfqdfr7EGPj49TUN3LJx7dW8qtOgVhlVW2tm/p3qPT/Gp2dpY3u6qlA3/h
oXuvpvDEd7r9qu1trn7Hr9EaZEDQPgrwx009NcdJZ8unlu5VHP2GPmy9eZpj
8QUz165dUy0a+M7x8THfHJFKpVzdwtFt6M1280c+5toWFgoFXlk9efJEtWgg
g/39ff7QqW7qw686XMnVr8rlciQSYddfX19XLRfIg0/osM7aEOsrCtv4lakp
xEqGkYIeN4U9ogPYR+Cdw6de8RVFa9lsll+TOgiNRkO1UKAAPkxqdG+dcPar
5ruskrJ9XiqVxE0T5KhYJjrKUPxjCJBvUMTVXPEu+k2HD3WMX9G/JG+MRqPi
RbA7FRDUX+ODWpypqalMJkO1UPcMdbVapcicmlHbjlQDm1JBJxRumabp5awP
N15++eWVlRVUU6Cbw8PDmZmZd955py+Pou7k/fv3X3/9dXT9gCPJZJKPYdbr
9Y2NjbSF7UgQ9iYFZtTkcV+i6g5DVaCbBw8eFIvFgb9ODkZueXBwMMSfBILO
06dPKXQ/Y3REThWPx4f1k0AIoM5drVY7+3UodKf+49mvA0IAedSwlhxQa4hh
dvDcWt5AnjDE9VEUzGO3IKBYnSL24V4zn89jg/Mo8+TJE+rEDf2yVPtRAI81
oqMJxUL09H06xJjqK6q1/Lgy0Bx2vrF/16coC3OFowZVU34vuqNeIfUIMLkT
ah7fZXMwl7aOrNfilI1/tCd3jrYuGXcf+30/IJX2Q2V/nXHKpi+oVjz40w3L
p+FXIYMqq9YzPdpKGLcvnHnKxjuWT41vPUZ9FTqokmo1f+Rj08Yrd74dwpSN
d6gpND//N/hV2KDqquVXtdpX5FfcyeTQnNyZ+ckvjFvwq1DRqq+sKZsLt42E
ZL8i6n/++K+Mv4VfhYuT+Ko5ZfN1Tk17dLT1N8Y/forJnVDR7AX+bOV/ksmk
su6+1V+YweROuHj27LvzneNXsrEc+ovd3YWFBSX3B37g95SNdzC5ExokTNl4
B5M7oUHOlI13KpUKMuYEHZlTNt5pTu5g505gGcouGz8gp6JaFK1hQBnWLhs/
aE7umKbqXwH6Zoi7bPwAO3eCyNB32fhBvV7Hue7Bwo9dNn6AnTsBwqddNn4Q
iHoVPPd5l40f7GJyRxEU3FJjweZiVlZWKCahZo69pMbO5kL6TNl4p3typy/J
oC+oIFP44eUMvcnJSSryZPAff/xRnykb71A7SDLpZw8gWcPROT0hI1Op5Ckh
+uLFF1+8fv164IozSX777bfHx8cHkDwxMUFVWeAkS8Y0TdvheIZ1AjbVQrk2
dz7d2GB/pVIp8XRrToBOJD5VcrlcZi1gaCTLhEocdeJEQ0WjUTLj5uam7UD+
7oPVK5VKoVCwnU6s/9HEp0nuRUAlS4asIZZZMtfa2lpXoofTE/7RE6HiLJpa
2xjeg2RPBEiyZChY5Ra2J30QadZTnjJKUsMhthQaLkrxKtkz+kuWTK1WE1sB
T2niPVRd1Enn6f90s/Mgkj2gs2TJUD+IlzLqXDezh3jxJU9N4t7Ozg7PPk9o
Enj0Ibl/9JQsn7m5OV5sHVOXirTS0jimx3UlkUjwmFaH7lJfkgdDN8mSEZsD
CjX9sPCelReJ1w/Km4YRlCwfXnKz2axPFmZQP4vdiKytdih+BCVLptFo8JI7
rMC1B7z8KlyUMoKS5WOaJlM9Ozvrt4UJisnY7RSegD2CkuXD0ysXCgUJRqb6
gd0uFotBcojhkUa5XJZgZOqAs9uNjY1Bcojh+UklRBoMHm+oWpw5gpLlw4fv
/Otu2+AxMySHGJ4Ifnl5WYKFq9Uqu9309DQkhxgqs0x1JpORYORSqcRup3Bf
1QhKlk+9Xmeqx8fHKcIU7NGarnGcAWzP5YhTOXyhg+usIXXteRsUMMm91HWv
RNNLshJ4HCu0C21DOZhMeEv8tL3gz2U+mve4lUewfUvuqY45nKNf6SNZPlw7
dVtaM7BtK/Ysi+Knwldc4KtHlG+r71+yuzr6x0urqy420keyfI6Pj/nmiFQq
1bIVL5K9VsN0FPKle/fcG5JCocBLrvJTsPqW7KqOfc257GklWQn7+/vcAmS4
Tru6+NVJuNH6yHrZbh07v1EulyORCLv+SZ4a1fQn2UVd608Hv9JQshL47AZx
5a2sx/qq/al7eacYhl9Zq02FfUh2VNd+0+5X2kqWD2mnGKBljJn53PyXFfco
ttOxrI8rq12Wp9Alm81yC+t2HFA/kh3UtZf5t6B3NZesitaY4fk4WfmN6OLi
onMM61S0OzaALd37j1JJ3EFAxVbPNZOeJHep66y/T75RCohkJVAwwMrvZVYI
f5ug/zSXf9uGFxy25PBRrd9djEYNAc23anqRLKiz+9zDh5WFm7lfXwySZCVQ
54WP8HCmpqYymQwVye7p2mq1SmEqtSm27ZlGcHZojqBkJVDsYZqml4Mv3KAW
YWVlJUBldgQlK4SKnhDceiKdTlP4GtxO0MzMzJUrV/qS/Oqrr966dSu4khVS
r9c3NjbSFrbzMdibFKWQEwbdtuI5894l47g/0ANyjPigqb70THwAdOCMp+wi
ewXohlyCHEPtFUD4GEpaqKCcKw7kQB3YfD5/9utomwkIyGe4vTmknwMMcgNy
hiFeEAE88CPYDlCiDeAT6XS6Xq8P/bILCwu7u7tDvywIBP7lLuEpBvy4ONAZ
euj06P2bfEEAP5oMPVy3QX5LURYC+LDz+C6bM760dWTlApCw8nx/f//k2Kuj
rUvG3ce+3gwooP1c2V/dqbt8opnb+qvfWA4NvwofVFm1HuvRVsz4zT/L2ii6
c5s86qX7391HfRVCqJKymr/nzbDnu3PGS1//IG+tlGma6x++Bb8KIVRdtfxq
ff3mL42/O3khhWbK+5mf/MK4Bb8KG636qtFoxGIX7hhJmX5F1L6984oxDb8K
HSfxVTOK/vaOgibpaIv86qtaTfJtgc80e4GxO9+SX6np8R9tUTt4IRbDCHzI
oHB9Qhi/ko3lzTfX1ymGl39z4B/NTpnqc138njkCktFnFrhWq43gGWthpRmu
axMzSxvqB77SnqTTg4ODg2QyqUPlCQaGHl88Hj88PFT9QzrweykF8Bs9F0Eh
gA80+oTr3fi3VBX4jeaLzIeyExZIpl6va546BPvuA0dQ1gAjgA8Weobr3eDg
rAARrEMScHBWUMjn88FK/o599/oTxD3sCOCV0Gg0qP7ZsKCoiXp51HCwl9SI
2MbSA1r2bQdn9SUZ9MXu7i61aF4Ovp6cnFxYWCCDf/PNNwGNVVhM+OjRIwfJ
zVQYl2dcJAcljFQOWZhKJc/j1hcvvPDCe++9F7jizCSfO3duAMkTExNUlAIn
WTKmadpOtCYikQi1biyJSLlcZs0Be5lKpcSUNJwApRE5XfLnxdu5O5+GSLJM
qMRRvC0aKhqNkhk3Nzf3TqNSqRQKBVtKEf3ziXiV7JQIKqCSJUPWEMssmWtt
be1Ud+qGnggVZ9HU2mbr7kNyz1R9AZIsGYrPuYWp/l9cXBzAo0SorRRbCg0H
3vuTfFoKyEBIlkytVhNbge7MWYNBnXSes1s3O/ct2YNfaS5ZMtQP4qWMOtfN
lH/DY2dnJ51OcztrEngMItmbX2krWT5zc3O82FJxO7MrOZBIJHhMq0N3aRDJ
nv1KT8mSEZsDCjUHdZxToAqB1w/Km4YRlCwfXnKz2axPFmZQP4vdiKytdk3y
CEqWTKPR4CV3WLF6D3j5VbjOYQQly8c0TaZ6dnbWbwsTuVyO3U7hRsIRlCyf
YrHIVBcKBQlGpvqB3S4Wi0FyiOGRRrlclmBk6oCz242NjUFyiKFCJC3SYPB4
Q9Vi8hGULB8+fOdfd9sGj5khOcTk83kmeXl5WYKFq9Uqu9309DQkhxgqs0x1
JpORYORSqcRup3Cn6ghKlk+9Xmeqx8fHKcLsNEllla1gW7r3qNtezUmNE9jc
hvBGx/si1LXnbVDwJLc+7FTGdTt+RwvJSuBxbGe70J4Mc1zOtsrN2Py4y6TC
5+33Wj1u5RHsIJKFt8RPSejJn3pLlg/XTt0WYQa2bTAHKwsfdr1yMfHeHl89
ovwAxkEkO/tYl3RdJcvn+PiYb45IpVJt07Vdw9lP3LzI8ZkUCgVecpUf3nJG
yR312tK9ey5tp1aSlbC/v88tQAbqsmsPI3e3gg7/uFwuRyIRdn3lhyEzBpR8
EkyJMYDQOgrf0FCyEvjsBuu5eCu8zUDW/kHXv6UYhl9ZQqpB7wwkufNTl69o
K1k+pJ1iAMEalz/KfdQr2BCLqotbUeiSzWb5NSlabjQaqoW26Vtyp0zr48pq
p199+UetJauCjxkaxvk35nM3F24529jFqcQCXCqVxB0EVGz1XDPpVbJLK9kO
3B/du3XrgwtBkKwECgZahpm53BqvqbDl3y1zuw9VVf6Qe3/h1mI0GjUENN+q
6UXyXodqsYkkyYxfzwRHshKo88JHeDhTU1OZTIZqoe7p2mq1SmEqtSm27ZlG
cHZojqBkJVDsYZqml7M+3KBGcGVlJUBldgQlK+T777/v9xyMixcvvvnmm8Ht
BFFtI8bzXqDuJHVSgitZPvyA0Hq9vrGxkbawnY/B3qQohZ4Is204Tq7uSzLw
zsDn+ePgO9AD2+F1fRG4w0WBHM5Y5+icuwQohOIHCjDOcgUdUqMCrRhKOlFk
ywIiQ8wViHS3gDPc5CPhGHMAZ2ToyUcw5gCe+5PZSvP8g8BvfKpbMOYw4szN
zfk0F88Oe/fjykBzfO27YcxhNBni2IIbyNA9gshJbBrQJF/AM4/vsgUfl7aO
JCY2bfcLjrYuGXcf+30/IJX2Q2V/ycya3Rxz+OKq5dPwq5BBlVXrmR5t/dy4
MSNx3HLnNnnUS/e/u4/6KmxQJWU1fxaPLxgTHz6Sus6/OeLwhzn4Vdig6qrl
V7XaV9PGK9zJ5NAcc5h6JWHchl+FilZ9Rc83mYzdMH4u2a+I3cp7f238Pfwq
XJzEV82xhfyv1LRHR1vjxvk/YcwhVDR7gYmvf6Au/w9fJ9SEOdL7C0AKj38m
jF8pwBrg+BXWOYSLg4ODZDKpfIEB1jmEjGvXrtVqNdW/ognWOYQGrdacY51D
OLDGFpJaTf5inUMIkLNuoV+wziHQUHNDT1DDRgd7KwKNzHUL/YK9FQFFk7EF
NzDmEFD0GVtwA2MOgUOrsQU3MOYQOILS4cKYQ4DQc2zBjaAUgRHn+Pg4FosF
qHHBmEMg0HlswQ2MOWjO4eFhEPP+YMxBCY1GY3t7m/XKqTpKp9PFYpG9fPDg
gbhnWf+xBTdsYw7eJYN+oaYhn897SYgwOTlJTcnHH3989epV1b96QNiYA/lM
X5Lp3yPdg0eoUaBSyfN79sW5c+eoXAeuODPJYjow79C3gihZMqZp2jIdWOnM
5q9enWdJpH5f/Hzj0zs8r1YqlXJ8HAFKL+Uk2YhEIvE4z7VF3F5e3wiNZJlQ
iUsmk6KhotEomXFz87/ayf9Y6rKuHOrUASwUCrZUU/rnmXKXvNnK+tdK0db8
syNBYEAlS4asIZZZMtfa2lp37sjOvx1Sx9IToeIsmlrbCbiekrlAMWG8c57c
AEmWDMXn3MJU/y8uLnZarg+/YpTLZbGl0HDs/TTJDgLbiUqd0F+yZGq1mtgK
dGdUHMCv9qxUy/F4XE87e5DcLdC1vgqEZMlQP4iXMupcP2SpYIfhV8TOzk46
neZ21iTw8CaZC2w1hKdo1VqyfObm5nixpeLmYq0B/YqRSCR4TKtDd8mb5LbA
1dWlrgzLAZMsGbE5oFDTq9X6hCoEXj8obxr6lOytktJbsnx4yc1mswO5jFeo
n8VuRNZWOwfXp+QB/UoryZJpNBq85LoHrkODl1+FqSdHULJ8TNNkqmdnZ/22
MEEBCrsd1RiQHGKKxSJTXSgUJBiZ6gd2u1gsBskhhkca5XJZgpGpA85uNzY2
BskhhgqRtEiDweMNVUuUR1CyfPjwnX8jDDZ4zAzJISafzzPJy8vLEixcrVbZ
7aanpyE5xFCZZaozmYwEI5dKJXY7qjQgOcTU63Wmenx8nCLMk7kw1/kKp0/Z
WqxcLtc9zy8szWJQ1563QdpI7qmut6Ie2nWSrAQexy4v3+VW6/KIjvfEpXyr
4vo+8YmcPKX2VXiPW3kEK0he7qmuE7ui9ji8Xbt+kuXDtU9M/FMpV2qvX7Mb
V1h5xD/tWDbStvPJCstKx0X46hHlJzYIkidak85O6uw+1anIrt3BF/WRLJ/j
4+OTzRHn49evz3U7yZ6zGa0XLn7V/krL2oVCgZfcJ0+e6CLZMFKplKu6bjpc
7pT6SivJStjf32+Kn7mcm49TsXS2rX3VpH3BtxVrOPtVuVyORCLMwuvr66rl
NjmRbNGU7Kyut1/t9QjJNJSshObsxvn4/Hz8vNVz8Vpf7bVjV6uRcPCrO8vL
/AlqtQmaT+gQV97K9l1fiZVU536KZV0ly4e0X7v27uXc5RlmjV9e/ffcR6fH
V27/wGL7j1/eyL0707IwRcuNRkO10DaW5GutXzczn5v/stI7cO/8yKmKo2gt
m80aukpWxP/9/nc5q8ZqVl25f/mHzn0E7fLZ2R8UYgzhaZRKpYkLiXnuqPG4
nmsmW8OkTcXzb0RJcg+36l1f3SXJwqYJbSWr4Mf3WcDA3It6TBcS9Oq/T5Z/
O4UTrffYmw8fPqRHE41GW8+q6Veab9Wk+Mc4iS8tftuU3Fzx3u1htne49tzN
5E+jhoDmkpVAnRc+wsOZmprKZDJUC3VP11arVQpTqU2xbc80grNDcwQlK4Fi
D9M0vRx84Qa1CCsrKwEqsyMoWSFU9ITg1hPUnaTwNbidoBGUrJB6vb6xsZG2
sJ2Pwd6kKIWeSJhsO4KSAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAEBf/D+PTYov
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->504860724]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "NodeSize",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NodeSize"]],"paclet:WaveletWare/ref/NodeSize"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " controls the size of each node of the tree."
}], "ExampleText",
 CellID->814948150],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"NodeSize", "\[Rule]", ".3"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->11837687],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->205174279],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
EdJOCxAKhRTeJmdiafRTq9V8Ph9ppwWYmZlReMeyiaXRj7LpHQ2BgT3HcSjN
oFSr1UAgQNppAeLxuMInRk0sjX4onLziUT7PY2Jp9NNoNCwWC2mnBfB6vQqX
PjOxNEMwPDzc96bc/vfqCR09OLsTTuCGJdG3ZtlsNuWPtw+SJlKj0Dfvo1EX
afTDsmw2mx3oplBECB5t3bN0+mZ7S5213uCG2NnZgZNaY2kiNQp+89Y8/GWN
ekmjn77j8bZ7jgRMFzracTtJy/+zOy/3ROWr2dnZ3d1djaWJ1Cj0zS9rlJCy
1JJmCOx2e6lUEnChR5D0OzrwTwa1QqVSGR0dVaun6ClNpEbhby4zX6krjX62
trbm5+cFjLh8v2Sng8JHO/tB6XGVy+VisZjm0kRq7PnN5Twioq40+oGhk8vl
EjivZeSrl62attl5SIsrOKOdTqeKGzD1lCZSo+A3b09Sop+nUF2aIehRikiv
r3r9Qr9faxGNRiEGdJEmXkXXIZEpTntphiCdTmcymW43edd6jQe7jnbWHpf+
pG9ccRwXDof1kiZSo9A3l56vtJNGP9BlTExMwEC405KuQuJyBdtVZpy/J3Ae
9245OJcDgYBG3UQPaSI1Cr1zoVFEstJUmiE4OTkJBoO9/dcKHZw3sTRDoL//
ujlvYmmGgPdfu2V82ikWi+Pj47o5b2JphuBi2THt1vOBcffU1FQkEtF5ntDE
0owCv/5Y75GUfHK5nMfjOTg4QGlXEzi7YZBus9lSqVS5XFZuezabdTgcsViM
+EqJJpZmFCCfQ01y8+bNubk5eY8PQ7XMsuzIyAj8lyrbTSzNKMAJDs77/X6L
xQL1STKZ5DiuV1uA23B0YWEhFApZrVav15vP56ktYk0szUA0Gg2oTwqFQjgc
hrbgd9OFFvH5fOAz/xLchqNra2uHh4cGegzTxNIMCrRIrVYzpc8mloYgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIo
4f8BxCyMgQ==
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->294329022]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "NodeFontSize",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NodeFontSize"]],"paclet:WaveletWare/ref/NodeFontSize"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " controls the label font size for each node of the tree."
}], "ExampleText",
 CellID->658376954],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"NodeFontSize", "\[Rule]", "8"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->359996803],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->233692661],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
IaZkxmxvb09NTcmyV3UXbyV7wVehHCYSifAWeokCyc0immTGFIvFvr4+mZvR
1OKV/C27L3G73YJ0aCuS3AriSGZPNBqNxWJyLdVsvHpZyTqo2cVbbhllkltA
HMmMoWZLZ2cng5JbhYzMvSvegJLZk81mA4EAGwsTFCUoVkCy7mFWI1TJZDIu
lwuSdQ+1tdPpNDMj53I5s9kMybrHarWqsRf8DUiSBMm6h0I0BWpmFs7n8yaT
CZJ1TzgcTiQSzIwsQrvbgJLZs76+PjMzc6NhzkcELzus6ocIFXZnJZPJYDCo
PcnXZdK53A48ESSzp1gs2my2G8xSs2Cto/1iaLDS4355VR5er5f72ucmJF+X
WfY7uX4lgmQu3Nw+uhiwuTJyc25YegKE3OkN1DLq6uoSYd67QsnXZO5tLG9s
yBvHEkcye6g0UZlS5ldVY5N5FxQMF1Jis7m5yVtuGYWS967IvPzndsSRzIVQ
KLS0tPROyzSuFMqmlT8MTenr8PCwOCW3acm1VOv2mlA0yew5PT212+0UtN9l
nroktuo+55atz9tvqQf39/cHBweFetlU85LPP3GLVwkomQtkAZfLpUaHIVl4
ZGTk8PCQt8TrGFAyF8jObre79eUD9eTzeZEtbEDJXCiVSg6HY25uri0Wjsfj
3d3dglvYgJK5QHnmysqK0+lMpVJNmzeTyVAciEQimliWYkDJvCgUCn6/32Kx
LC4uyp8CR5+MxWL0gChv0dz8WwNK5gXVEWTkjo6O3t7eycnJZDKZTqcpf6i3
Kl2hYj49PU22pU9Go1FNT4/86aefurq65Et+//33P/roI01L5gjlt5TcBoNB
n89nMpmkGmR/ukLFfGtrSx+2vXj5tnzJT58+pU/yvnEgLs29Zx6v+wM3QI5x
v9mtvsTc+ACIQItv2cXuFeBtyCXIMfh+A9AfbXnHoFbeKw7YkM/nHz9+3Pr3
CLsTEGBPe1tz2H4OVGl77xMSeKBGsq2hjTaASoyNjR0fH7f9ax89eoQX2BoW
9fYueXuLAWAQ6KHTo1dv8AUJvDFRe7CY/JayLCTweufVk+p0BO/uCasdfI6O
jiYmJspHJ7te6ckrVf8Y4MDlc60eMdu6q7y39bd/qjg0/Ep/ULCqPdaT3X7p
T//Kasvp/Wh5xtb3P3+PeKVDKEhVqr835bTn53+SOr77ld1cqa2trWdfjsOv
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
AAAAAAAAAAAAAAAAAAAAAAAAgDv/D2eDUzw=
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->387982082]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "NodeFontColor",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NodeFontColor"]],"paclet:WaveletWare/ref/NodeFontColor"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " controls the label font color for each node of the tree."
}], "ExampleText",
 CellID->175491451],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"NodeFontColor", "\[Rule]", 
    RowBox[{"Darker", "[", "Green", "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->113189662],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->50493065],

Cell[BoxData[
 GraphicsBox[
  TagBox[{{
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.21270038138513625, 2.286866558889224},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 2.7122673216594966`}, {0., 
        1.8614657961189516`}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"1\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.6381011441554088, 2.286866558889224},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 2.7122673216594966`}, {0.850801525540545,
         1.8614657961189516`}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.6381011441554088, 1.4055325476390763},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.850801525540545, 1.8614657961189516`}, {0.4254007627702725,
         0.9495992991592013}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"1\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {1.0635019069256813, 1.4055325476390763},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.850801525540545, 1.8614657961189516`}, {
        1.2762022883108175`, 0.9495992991592013}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.21270038138513625, 0.47479964957960064},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 0.9495992991592013}, {0., 0.}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"1\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.6381011441554088, 0.47479964957960064},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 0.9495992991592013}, {0.850801525540545, 
        0.}}]}}}, {
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.4254007627702725, 2.7122673216594966}, 0.2], InsetBox[
       StyleBox["\<\" \\n1.0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`LineColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`FrontFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`BackFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`GraphicsColor -> RGBColor[0, 
          Rational[2, 3], 0]], {0.4254007627702725, 2.7122673216594966}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0., 1.8614657961189516}, 0.2], InsetBox[
       StyleBox["\<\"s\\n0.36\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`LineColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`FrontFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`BackFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`GraphicsColor -> RGBColor[0, 
          Rational[2, 3], 0]], {0., 1.8614657961189516}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.850801525540545, 1.8614657961189516}, 0.2], InsetBox[
       StyleBox["\<\" \\n0.64\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`LineColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`FrontFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`BackFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`GraphicsColor -> RGBColor[0, 
          Rational[2, 3], 0]], {0.850801525540545, 1.8614657961189516}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.4254007627702725, 0.9495992991592013}, 0.2], InsetBox[
       StyleBox["\<\" \\n0.27\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`LineColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`FrontFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`BackFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`GraphicsColor -> RGBColor[0, 
          Rational[2, 3], 0]], {0.4254007627702725, 0.9495992991592013}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{1.2762022883108175, 0.9495992991592013}, 0.2], InsetBox[
       StyleBox["\<\"i\\n0.36\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`LineColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`FrontFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`BackFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`GraphicsColor -> RGBColor[0, 
          Rational[2, 3], 0]], {1.2762022883108175, 0.9495992991592013}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], DiskBox[{0., 0.}, 0.2], 
      InsetBox[
       StyleBox["\<\"m\\n0.091\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`LineColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`FrontFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`BackFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`GraphicsColor -> RGBColor[0, 
          Rational[2, 3], 0]], {0., 0.}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.850801525540545, 0.}, 0.2], InsetBox[
       StyleBox["\<\"p\\n0.18\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`LineColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`FrontFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`BackFaceColor -> RGBColor[0, 
          Rational[2, 3], 0],
        $CellContext`GraphicsColor -> RGBColor[0, 
          Rational[2, 3], 0]], {0.850801525540545, 0.}]}}},
   Annotation[#, 
    VertexCoordinateRules -> {{0.4254007627702725, 2.7122673216594966`}, {0., 
     1.8614657961189516`}, {0.850801525540545, 1.8614657961189516`}, {
     0.4254007627702725, 0.9495992991592013}, {1.2762022883108175`, 
     0.9495992991592013}, {0., 0.}, {0.850801525540545, 0.}}]& ],
  AspectRatio->1.4578286677041756`,
  FrameTicks->None,
  ImageSize->200,
  PlotLabel->FormBox[
    StyleBox["\"\"", 
     GrayLevel[0.5], Plain, 24, StripOnInput -> False], TraditionalForm],
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->313182366]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "BranchLength",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BranchLength"]],"paclet:WaveletWare/ref/BranchLength"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " controls the lengths of the edges between the nodes of the tree.  The \
default value is .1 and based on the number of nodes, can be changed to \
produce a less distorted tree."
}], "ExampleText",
 CellID->121570406],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"BranchLength", "\[Rule]", ".6"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->614013900],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->127278850],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnU1MG9mWxz0zC6Zbk36Z0HkTYkeQIBDBYmLGikLMRDAyIAxBnX6PoACO
yOMjzRCeE7WTOO3RgBgpyognjVErHqtRLG8aIeUpSm+SLN1SS5PZPHnTEgsW
LFl62ct+xy5/4nK5qlxV9/r6/1skxuWP+p976txzP1zn4uLD393/W5vNFvx7
+ud3fwj929df/+Gb35+mP24Hgv/+VWBl2Rd4vPLVytcDi3+Xednf2Gz/T/9n
Hv8KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAhEOp1OJpPHx8esTwQ0KuQ8b9++DYVCg4ODDofDluXUqVMul6u1tVX68+zZ
s3Q0EAjs7+8fHR2xPmXAL+QeT58+JUci5/F4PHNzc5ubm9Fo9LUcu7u7dHRh
YWFoaKitrY3cbGVl5eDggLUIwBGJRMLtdpN7+P3+ao6kDLkZ+VV7e7vT6YzF
Yr/88gtrTYAlHz9+JE8YGRl5/vy5DneqZHt72+fz2e126klZiwMMoCRqfn6e
nIo8wRCPKoXCF/WkXq8XPWNTQc195cqV9fV1wz2qlHA43NfX9+7dO9ZygRUk
k0lqbn15lFYoc7tx48arV69Yiwbmsre3d+3aNWpuC5xKgr5xbGyMYhdr6cAs
KEvv7++nhrbMqQqMjo7G43HWBgDGk06nL1++bE33Vwk5c3d3N9J48ZiYmAiF
QkycSiISifT29mJqSyRSqVRXVxdDp5Lw+XyxWIy1MYBh+P3+tbU11m6VmTV1
Op2sjQGM4fj4+Pz580zS9UrIr2j4wNokwAASicTIyAhrh8qxsLAQCARYmwQY
AKXrc3NzrB0qx5MnTyYnJ1mbBBjA9PT0w4cPWTtUDhoVdnZ2sjYJMAC3223U
doX6oTSvpaWFtUmAAVC/Q70Pa4fKEY1GHQ4Ha5MAA6A8mbJl1g6VIxwOe71e
1iYBBhCLxXw+H2uHyrGShbVJgAHonGyPby3fDkZkDkSCt7Msb8W1+5XH48FW
UmGgroc6IA3Nn/OdSr8qeltVv6vO7u6u3W7HEqEwUIigQKHFp5a3IrJ+Qwfz
T2p3rJmZmY2NDdbGAEbS2dkZiWjxAlm3oSeL3R/5mIa+MJFIXLx4Eb9sFYyD
g4Pu7m4Nq4SyflXmStr8anBw8M2bN6zNAIwnHo+Pjo7W5Vd649Xi4uKDBw9Y
GwCYxdLS0uzsrH6/0pVfhUKh8fFxpOtiEwwGJycn9fpV5lkpSKl0K4pUExMT
cKpm4OXLly6Xi0b9av2qzIfUzl9Rok4ehe6vqUgmk3a7/e7duzUDjj7W19dp
9BeNRlkLBVZDfdPjx4/b29uN3UUTDoedTuf8/DymFJqZg4OD6enp1tZWn8+n
bYKrHApN9DltbW1erxc7jYHETz/9RN1iZ2dnV1cXOdja2poaHyNfolg3NTVF
AcrhcFDHt7+/z1oK4AXqEAcGBlKp1K/ZRepYLOb3+8nHpHv0SdzOc/XqVekZ
CnHkSxSjyAOlAHV0dNTT04OhH5DYzFL5vHRPUYnNPB8+fJCekU2faAx47949
088YcA+FGgpWBn7grVu3sBOmyaE+i3o0Y2+bQHGMPhODwWZmdXXVjB+2U7yi
qGX4xwIueX9fuke2Z+cw+zflSMPDwyZ9GWVZlGtlHh3ueGz335v0NYAxxdaV
HlFOTmM383or+nzqDY8Ss1lXhl+JCgWrfONmHWu0EE9M479vkkf9Zuc94pW4
kC/luz/yMa+t+19u3rHgax89ehT5jy/hV8JC4SrvV8fHe6dtn7z4S9qCr82M
Ny/b+20z8CsxKYlX4+Nun623ELzM5uOfH/3Gdv4HTMKLSS6/isViq7ODlnZM
hzsXbO55ufl80PhkknX3xo80Bvz5TwOW5juHOwO2pX8eHsYmB0F5/9vy+SuL
yA4/vzs4cLlcWJIWjxcvXjx79ozhCUQiERoeMjwBYDipVGpgYIB5uBgeHk4m
k2zPARhF6fYqthwdHVFvmE5bMcUBzIa6P+oEWZ9FDmzQ4hyVhbxNXVzWh5oN
WihTbgG6C3lTD9jT08NbXe8TG7RQptxi6i/k/eWXX5q9uKwPcqSxsTGUKbcY
owp5k/05LOQtqTtz5gz5EsqUW4PYhbzFVscnGgp552+QIHefRnmYF/JGmXIm
aCnkXbxTkNYbMbIq5I0y5UzQWMhb213yTmB9IW+UKWeCnkLemTil/1bXVhby
RplyJtRbyLuO0GVBIW+UKWeCzkLepb5Uh1+ZXcgbZcpZobuQd3E4qPW+/Cc+
x8xC3ihTzgSxC3mLrY5nxC7kLbY6bhG7kLfY6nhG7ELeYqvjGbELeYutjmfE
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
AAAAAACAbv4KzI/uSA==
    "], {{0, 371}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 371},
  PlotRange->{{0, 200}, {0, 371}}]], "Output",
 ImageSize->{204, 371},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->166359594]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "BranchColor",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BranchColor"]],"paclet:WaveletWare/ref/BranchColor"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " controls the color of the lines connecting the nodes of the tree."
}], "ExampleText",
 CellID->857741043],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"BranchColor", "\[Rule]", "Orange"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->722529988],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->435263142],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnX9oo/d9x7WtqwcL2pHVa2SrKJaxiSWD66iixqrnFLmJhWp8VnReYuu2
uDlfb6qIzrE1p5pj9ZiFwWdij+aqInIosBoHN+sdLD539JqjNExbx2a2DgQz
m2Blu0EGorSgP/KH9nkky/r1SJZkPd/n+zx6vzgS6Xkk2+/P8/l+vp/v756v
+V3Xf1Oj0Sz/Dv3HtbD65ddfX/jmi5fozZXXlv/0668tXnO8trL49cXXR772
W3TxD39Do/l7+r/wOgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAACoQjKZjMVioSy2PKurq/Q2EokkEgm5/0CgJI6Ojjwej16v1+l0ExMT
V7KE8szNzdFbh8NhMBg6Ozvdbvf+/r7cfzLgl3Q6TVGot7fXarV6vd47d+4c
nEc0GvX7/ePj4+SE4XA4lUrJLQLwRTweN5lMFIV2dnbOdadKyAldLpfRaETs
AjkoTPl8PrPZ3JxHlYUvil12ux2Bq80hp5qcnFxYWLigRxUTDAZHRkYeP34s
tzggDxRVyKnW1tZa6FQ5tra2hoaGqDkpt0QgAzabTQqnykEZ18DAACrEdmN7
e3t6eloip8pBadv8/LzcQgE7EolEf3//3t6epH5FWK3Wo6MjueUCRng8Hq/X
K7VTHWQTLWppyi0XsIBaal1dXQyCVQ7yq3g8LrdoIDmRSMThcLBxKoICI4VH
uUUDyWFWCeYIh8MWi0Vu0UBybDZbKBRi5lfRaLSzs1Nu0UBy9Hp9PWPKLUSj
0cgtGkgO1UpUNzFzqlgsptVq5RYNJMftdvv9fmZ+ha6GNmF9fX12dpaZXwUC
AafTKbdoIDmJRMJgMJzvEHdvXbuyLDZ1Zmc5N4X02q27dfjV6OjovXv35BYN
WHB+k/DUdyr9quBtVf2uCGoMdnd3p9NpuRUDFlAAoTBS06eu3doR9Ru6mb9Y
h2NRLrexsSG3XMAOl8u1tLRUyydE3YYuFqo/8rFadSFl7MPDwwhWbUUqlTIa
jVRPNeZXJa5Uy6/29vYGBwePj4/lFgpYQw/dYrFU7SO9QLwipxobGzs8PJRb
IpAHci2r1Sq+YkI8fTo/v4rFYnAqkEwmTSbT1atX6/Mr4WouSIne9/l8PT09
cCqQya7KWVlZMZvNwWBQ3K9KfEi8/yocDlPom5+fx0ocUEw8Hrfb7TqdbnFx
sf5Zf/RJr9dr7u+hVA1TjkE1kvv+xSlrR0dHX1/f1NRUIBAIhUKUMhU7El2h
yDYzM0Mhjj7p8Xjibz6bST6S+28HvPJxIvPdz2c+EXqcKKWnfN7pdNpsNq1W
q8lDjkRXKLJtbm4WJhinkpm3n8l9EYBy3hnJ/KLZueg/3cw8fKOlfw1QBf8Y
yXxwo/mvU7Ait3yMjlBQxK8eCxVZ+mLLk8mpqBoF4Iz3LmcSrZjN8sObmfhO
C34OUAHkUeRXLYFqQ4p7lMaDNofqPvKEX7WuM/PkKPO9yZb9NKBQKFenjL21
3H8lcxxr8c8ECuIXcaER13Io+lEC38IYCBQE5UL09D+WZrtsilcUtUAb8igk
/JMOyrJOMGLYZhQN2UgFBnfUz4PrueG90d2T3IWLDNnUz9ngzsnuqOb6A8l/
H2BJ4aGevrrgkE1DUFR8/8WsT8OvVAYFq/wzPdmdesLz64sP2dTNR9/QHN/4
3d0HiFeqg4LUWfWXeXD80pN/8yHbBchUFd7/KvxKbVC4OvOrxJvkV2dOxghK
3d/67IuXXoZfqYqzeCUM2Xxu5Qkra78iPvL98ytd8Ct1kc+vKFd/cEWe+uhk
9/By/79gcEdVCK3Axe3vZ94Zka25n20v/BKDOyrjk/v/dUPzzGeK+q8Yk3Xo
45/vZ95/SZbfDyRB6iGb+sHgjmpgMGRTPxjcUQ1shmzqJ74jTFcGioblkE39
UPzEyh3l0pJVNlJATkVRFLWhQmnVKhspePiGMNsBKI4WrrKRAqzcUSItX2Uj
BclHmXefk/uPAI0gxSobKcDKHQUh0SobKVBEXAUZiVfZSAEGdxQBP0M29YPB
HTlIJpOxWCyUxZZndXWV3kYikUSiKDRxNWRTP1QP7j5d/Gc3IBk0yNHRkcfj
0ev1Op1uYmIit1lsKM/c3By9dTgcBoOhs7PT7Xbv7+9zN2RTP9nBnWYkg/pI
p9NUJHt7e61Wq9frLezbn9+HuPI4pGg06vf7x780qv+DS+FwOJXir4O9JqeS
db9n/cKzJZKrcyp5fJycUImSGROPx00mExXJir36Cxvy1zjviJ6Iy+UyGo0K
KsjVJdeFEiWzhMqsz+czm81VzHvOIUfFUFmmgmy32zkvxedJbgClSGYMWXhy
cnJhYaGW7YQ41cCJksFgcGRkhNtd+uuS3CCcS2YMFTGy8NraWr3mqzt0bW1t
DQ0NUdtKbonlNCy5briVzB5qQZ9v4WJfaqBKFNKPgYEB3mqHuiQ3C5+SGbO9
vT09PV2PuQrNwXOPvy2Fcpj5+Xm5hRaoX3LT8CaZMYlEor+/v/7DaJrGarVy
cnhNG0pmj8fj8Xq9Ulv4IJt1ULNLbrkCbSiZMdRs6erqYlByc5CRC8fZQLJ6
iUQiDoeDjYUJihIUKyBZ9TCrEXKEw2GLxQLJqofa2qFQiJmRo9FoZ2cnJKse
vV5fzwBrC9FoNJCseihEU6BmZuFYLKbVaiFZ9bjdbr/fz8zIPLS721Aye9bX
12dnZ5kZORAIOJ1OSFY9iUTCYDBUGCM/XCM6Aig+te9sokOtUcPR0dF792Re
+9yM5FrqasxE40WyLFS0jwqGEjFZ0aXiu4UJf9XHo6ll1N3dnU7LP++9Mck1
1eUcrppf8SOZPVSaqEyJWvGcsli4W/SV6lBis7GxIbdcgQYlV1dHH762vFzd
RvxIlgWXy7W0tFRkq7MiWWs2TEkhv3brVs2KhNLX4eFhfkpuA5Krqst9rWrZ
400ye1KplNFopKBdYdcqfnWabuRvZd8WaseKb+zt7Q0ODh4fc7TZVAOSq6jL
vxT3Kw4lywJZwGKxCB2Gdcerwt2aXyELj42NHR4eyi2xnHoli94tXBTxK24l
ywLZ2Wq17uys1ZtfFTKPneUqzyUWi/Fs4foki6grTPPPc/YRziXLQjKZNJme
fXn21EriOayYC5UsAMt/wOfz9fT0cG7h8yVXUZen5BuKkCwLlGeurHhfKCuE
Zd0LIktyznq1hI+Fw2GKA/Pz84pYlnKu5DJ1pZx+TlmS5SIej9vtdp1Ot7i4
WP8UOPqk1+s1m82Utyhu/m0bSpYLqiPIyB0dHX19fVNTU4FAIBQKUf5QbFW6
EgwGZ2ZmyLb0SY/Ho+jpkcn4Dxaf625A8qc/7Rl9StGSZYTy252dHafTabPZ
tFqtJg/Zn65QMd/c3FSJbfObbzcg+Yc3hQ1DAKhGc/vMY7s/UANyjKaP+uLz
4APAAxfcZRenV4BKyCXIMeT9CUB9tGSPQaXsKw7YcBwTtnC/ONyeBATY09rW
HI6fAzla3vuEBB5IkWwr6KANIBHvPiecu9Ry3n9JOMACtCfSnV1SccQAaBfo
odOjl27wBQl8eyL1YDH5LWVZSOBVzoPruekIo7snGVYn+JwcCWc5CS92RzXX
H0j7ywB7Cs/19BWzo7veu5zZez7r0PAr9UHBKv9YT3bfeOb5/2V15PSPb2iS
Nzu+/cFtxCsVQkEqV/0Rn9z/v5sd0X9lOFfqp5uZ70/Ar1QIhaszv3o4+4Mv
GfJvmEBZ3FufffHSy/ArtXEWr1LJzNuf+8anRpj6FfHhqz956Wn4lerI51eU
Vn34qgxV0sku+dU/JdpxtyJVI7QC37j9HfIreVr8J7tUD/767WfQA682Prn/
2Kd5+pKmkGixJOvN//HwDSGHB2qCHig9VnmReuQIMIafUWBKsVh1nQHJoUfJ
T87MrKsfSMrZIB0nPD4WxqN5CJ6gaejxfffzwigzV2DdvdLhcxIUEnhFw0+6
Xol0U1WB1HA+ybwlK2EBY5KPhDURPIN194pDKXOAkcArCz7T9UqwcZaCUNYm
Cdg4Syncf0XYx0NBYN09/yhxDTsSeP5RaNnHxlnMSSaTsVgslMWWZ3V1ld5G
IpFEomiMRrm5SmlOWCJ5fHLmylcnqkkGDXJ0dOTxePR6vU6nm5iYyB32EMoz
NzdHbx0Oh8Fg6OzsdLvd+7FI87vO8kB852jjcmOS9znu9eWMdDpNRbK3t9dq
tXq9XuGwrfOIRqN+v3/c9kX9U58Jh8OplEJagnkKkocGRCSLHdhzKnl8nJxQ
iZIZE4/HTSYTFcmdnXMPXxWBnojL5TIajQoqyOdLrnmkmhIls4TKrM/nM5vN
zXlUMVSWqSDb7XbOS3G9ks87qk9BkhlDFp6cnFxYWLigRxUTDAZHRka4PVqr
Acl1+JUiJDOGihhZeG1t7cKuVM7W1tbQ0BC1reSWWE5jkuv2K54ls8dms0nh
VDko/RgYGOCtdmhMciN+xa1kxmxvb09PTzflMvVCOcz8/LzcQgs0LLlBv+JQ
MmMSiUR/f3/9J0g2jdVq5eTEyTaUzB6Px+P1eqW28EE266Bml9xyBdpQMmOo
2dLV1cWg5OYgI8t+7GYbSmZPJBJxOBxsLExQlKBYAcmqh1mNkCMcDlssFkhW
PdTWDoVCzIwcjUY7OzshWfXo9fp6xpRbiEajgWTVQyGaAjUzC8diMa1WC8mq
x+12+/1+Zkbmod3dhpLZs76+Pjs7y8zIgUDA6XRCsupJJBIGg0HMHjvLuYmS
127drbwpDGqckhvbKLpQcr2M0dHRe/dk3gKrScn5m6XKznSLfocXybIg1j4q
DIaJDYuRifNmFG5XmLTofjHUMuru7k6n5d8ApGHJRZeK75LQ05fcS2YPlSYq
UxWekbddpZWLbla8q27igwNKbDY2NuSWK9CwZHEfq5DOsWRZcLlcS0tLJaYr
uEZVPxG9W+2ZUPo6PDzMT8ltWnJJXLt261b1upM3yexJpVJGo5GCtphdaxi5
shYU//De3t7g4ODxMUcrCpuRfJpMFecARbVj6Tc4lCwLZAGLxXLaYVhX4RUS
2fIbYp8lC4+NjR0eHsotsZzGJZferf4VbiXLAtnZarVmlw+cl2wUF9WabhWL
xXi2cAOSS2Vmb+8si/kV55JlIZlMmkymq1c9ZxVclcaRqN3LKwOfz9fT08O5
heuSXKWWLPhiXroiJMsC5ZkrKytm8+hCWUKaN3f1rqqCwcPhMMWB+fl5RSxL
OVfyQYnq4rJz1qu1/GeKkiwX8XjcbrfrdLrFxcX6p8DRJ71er9lsprxFcfNv
21CyXFAdsTj7Qsdvf6qvr29qaioQCIRCIcofiq1KV4LB4MzMDNm2o6PD88Un
4x9+IPcf3jyC5MVFEtKAZI+nDWeEXohP0sL+Kqkk5beU3DqdTpvNptVqNXnI
qnSFivnm5uapbdVy9EwDkkGjNLdBKHauBjVoej9/bHwHanCRzesUt7koYMMF
Yw7PZ5cAGXn3OeGoiIvAw9GogCta0qbDaVmgmBaeFaiWPgfQAlp7+Aj6HEBG
gsNH0OcAMtKcbMX5+YNAaiSKLehzaHO+NymcGi8Fj0LCP9CGSNp2Q59De9LC
voVq4ITuNoTNwaYKPeQL1MuD67m5RKO7JxmGB5uetQtOdkc11x9I/vsASwoP
9fQVy1OzqSr8K3vWp+FXKoOCVf6Znuz+yVMv/pJhv+WPb2iSNzu+/cFtxCu1
QUEqV/0JPPg3z6V7P2E72/9RKPPXk/ArtUHh6syvEm8ev/TkmZMxgtqet5+c
esIDv1IVZ/GKnu87z/zFU0Os/Yr40R//yN0Lv1IX+fyKcvX3xuWpj052//3G
73+EPgdVIbQCp976O2ry/+dbVnnSHObtBcCEBw8nNTdHNIVEizHZDo7/wTwH
lUEV0Dsj8k8wwDwHlfHeZWGUmQcwz0E1cDXnHPMc1IHQtzDC1+Av5jmoADbz
FhoF8xwUDVU39AQ5rHSwtkLRsJy30Cjoc1AonPQtVAN9DgqFn76FaqDPQXFw
1bdQDfQ5KA6lNLjQ56Ag+OxbqIZSikCbk04JayIUVLmgz0ER8Ny3UA30OXDO
xwmh7Cuu8Y4+B87hv2+hGuhzYE4ymYzFYqEstjyrq6v0NhKJJBL5tfAnR8I+
HgqltM+hXsmgcY6Ojjwej16v1+l0ExMTucN+Qnnm5uborcPhMBgMnZ2dbrd7
/5pB2Q2rn+8f/fl4Y5L3kZXVSzqdpiLZ29trtVq9Xu+dO7fLD3+tOEQ9Go36
/f5x2wg9kXA4nEpJv0C+pRQkDw1kJd/Jn5y1fOv0UK3yQydPJY+PK1QyY+Lx
uMlkoiKZPXixcHRZ0bnpV2ocG09PxOVyGY1GBRVkMckHeb/KO5TwUvzcSSVK
ZgmVWZ/PZzabK8xbfHZk8euqR8dSWaaCbLfbOS/F1SUX/KroQNMa5+QqRjJj
yMKTk5MLCwtiNmvYr3IEg8GRkRFuj1ysKVlEYNGhuUqVzBgqYmThtbW1KtZq
0q+Ira2toaEhalvJLbGc8yRXCjwnXvEvmT3Ugq5p4eb96iCbfgwMDPBWO5wn
+UxgviKsSyvXkhmzvb09PT1d004X8quD7MHW8/PzcgstUIfkgsDlZfH2oLIk
MyaRSPT399d/snDTWK1WTk4ibkRyI0GKY8ns8Xg8Xq+3ScM1AmUd1OySW65A
I5Iv5Ff8SGYMNVu6uroYBKscZGTZzyZuQ8nsiUQiDoeDjYUJihIUKyBZ9TCr
BHOEw2GLxQLJqofa2qFQiJmRo9FoZ2cnJKsevV6fH2BlhEajgWTVQyGaAjUz
C8diMa1WC8mqx+12+/1+Zkbmod3dhpLZs76+Pjs7y8zIgUDA6XRCsupJJBIG
gyFvg4q5eiWI3b17OuNNZGKS2NSs0dHRe/dknvpeKrmmutqKamjnTLIs5NtH
BauJeYTo3cLcJOFi8RM5fUolP4VaRt3d3em0/AteKpqEtbWLKir0w5dr51Iy
e6g0UZkqmVskYlyxuyXTRgp2Pp1huVP+Qyix2djYkFuuQF5yTXXlPlWqqFy7
eMjiR7IsuFyuJd+rok5yIG7G7JsqflX4SpG1KX0dHh7mp+QKkpeWaqmrpETR
+fGKN8nsSaVSxi985crCN6vatnzWZPmE72yuUdWv9vb2BgcHj485WqcjSDYa
qZ6qrq62Xx3UTsk4lCwLxw/vXL78lduFRSh1xKuDQu6arSTE/YosPDY2dnh4
KLfEcuihWywWoY+0iXhVHKQq1lNwK1kOfvatK9/6stUqLB+oM7+q9oGij23G
YjxbmFzLKkheO09dxa3qIS7Gt2Tm/Pe9lSuv3f0Hk8nkeXlWtD2Ys11pe7Ao
xyj7yt1bL1+5aunp4dzCyWTSZHqWFFeoq+lXVeKVz+fr4V4yc372l7mEYW7x
WbM5GAxWZKoV6UT+WlnVEQ6HrbbnZ6/80d8qYVkKpdYrK94XyoRUeljZlTPt
2e8Ikq3W+fl5rMSpQTwet9vtOp1ucXGx/ilw9Emv12s2mylvUdz82zaULBdU
R5CROzo6+vr6pqamAoFAKBSi/KHYqnSFItvMzAzZlj7p8XgUPT2yDSXLCOW3
lM87nU6bzabVajV5yKp0hYr55uamymzbhpIBAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACy8/9pZMsn
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->87834694]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "BranchFontSize",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BranchFontSize"]],"paclet:WaveletWare/ref/BranchFontSize"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " controls the font size used to label the branches of the tree."
}], "ExampleText",
 CellID->302397523],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"BranchFontSize", "\[Rule]", "8"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->39107704],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->491792953],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
jyLveuz8rk/OdL3+i83kzXeXGH0dYMvp04JbvX+/dPfuo709ll99efnm1q3b
2HtCkxT9im7u7Vu33rDuVjr94os/MKt5AUuK9eDCwudfDD9+x/rL806NBF6j
nH5RytvZfzX5FYXK4eFh9MBrDLqhdFuVTXK2trb22KZ2QG7ohtJtVfY3yD1y
BBjDzygwy64zIDdc5czMuvqBrPA2SPf27Vun08lD8ARtQ7fv7t272WxW6R9S
Bdbdqx0+J0EhgVc1/KTr9cg3VRXIDeeTzDuyEhYw5vz8fHp6Wulf0Qisu1cd
apkDjAReXfCZrteDB2epCHU9JAEPzlILjx49SqfTSv+KFsC6e/5R4xp2JPD8
o9KyjwdnsSeXy1G9Fi/gKrG5uUkv6V5UjtGoN1epyQmrJE/NLt7/9YyIZNAq
Z2dnwWDQZDIZjcaZmZniZg/xEsvLy/TS4/GYzWaDweD3+8ngbT91lgeoDbuw
sNCSZJ57fXnj8vKSPGRgYMDhcIRCofxmW81IpVKRSOSzzz775JNPEomEWlqC
11xLHhkZEZAstGFPUfLU1BQ5oRolM4aybqvVSkWSCq/EbUQqoTvi8/ksFouK
CnJzyQ23VFOjZJZQmQ2HwzabrT2PqoTKMhVkt9vNeSmWKrnZVn0qkswYsvDs
7OzKysoNPaqSWCzmdDq5TbdakCzBr1QhmTFUxMjC29vbN3alWvb398fGxjhc
aNyaZMl+xbNk9rhcLjmcqgilH5QM81Y7tCa5Fb/iVjJjDg4O5ufn23IZqVAO
EwgElBZapmXJLfoVh5IZk81mh4aGpO8g2TYOh4OTJTBdKJk9wWAwFArJbeHj
QtZBzS6l5ebpQsmMoWZLb28vg5JbhIys+KTfLpTMnmQy6fF42FiYoChBsQKS
NQ+zGqFIIpGw2+2QrHmorR2Px5kZOZVKGQwGSNY8JpNJyphyB9HpdJCseShE
U6BmZuF0Oq3X6yFZ8/j9/kgkwszIPLS7u1Aye3Z2dpaWlpgZORqNer1eSNY8
2WzWbDYL2eNwvThR8snzl/Un84MaVxTHNioOVB2vYWJiQvFHYLUpuXSyWtm1
bsH38CJZEYTaR+XBMKFhMTJxyYz503UmrThfCbWM+vr6eHgASMuSKw5VniWh
V39yL5k9VJqoTNV5Rsl29VauOFn3StzEx8eU2Ozu7iotN0/LkoV9rE46x5IV
wefzra2tVZmu7BqifiJ4VuyeUPo6Pj7OT8ltW3JVXHvy/Ll43cmbZPZcXFxY
LBYK2kJ2bWDk+lpQ+OKjo6PR0VGuVhS2I/kqmarMASpqx+p3cChZEcgCdrv9
qsNQUuHNJ7K1J4SuJQtPTk6enJwoLbGW1iVXnxV/C7eSFYHs7HA4CssHmiUb
lUW1oVul02meLdyC5GqZhdOH60J+xblkRcjlclar9eHD4HUFJ9I4ErR7bWUQ
Dof7+/s5t7AkySK1ZNkXS9JVIVkRKM/c2Niw2SZWahLSkrnFu6rKBk8kEhQH
AoGAKpalNJV8XKW6suxc92qt/7OqJCtFJpNxu91Go3F1dVX6FDi6MhQK2Ww2
yltUN/+2CyUrBdURX3755QcffDA4ODg3NxeNRuPxOOUPlValI7FYbHFxkWzb
09Pz8ccf//jjj0r/8PYhyeRXJES65GAw2IUzQm/C9fZblN9Scuv1el0ul16v
15Ugq9IRKuZ7e3tF22pm6xnpkkGrtPeAUDy5GjSg7ef548F3oAE3eXid6h4u
Cthww5jD894lQEGmp6fPz89v8gk8bI0KuKIjbTrslgUq6eBegZrpcwA3p7Ob
j6DPAbyXYfMR9DmA9/LsbMX5/oNAbmSKLehz6HJmZ2dlGpEvPlFfjk8GnCNr
2w19Dt1JB/sWxMAO3V0Im41NVbrJF2gPZhubos+hCzh9Wpil9vSU6a7ZhT6H
zaf0rUCLvPt+onBvT38zFh1hGEN++u8/9ZA3P37D7BsBS05LIcN++/a/sJ3t
H48H7PbufVq+tin61evXrz+/c4dxnXR5+eZnP/s5+hw0CdWDj99cOp3DVA++
Y/3lp273JvocNMrp56W8nf1XU7BEn4MmoWpI2V2Y0eegSVj2LYiBeQ4ag2KF
0+lUfIIB5jlojIWFBU6epIp5DpqBqznnmOegDeg+Ug3IVUMM8xw0AJt5C62C
PgdVo3jfghjoc1A1PPQtiIE+B5XCSd+CGOhzUCn89C2IgT4H1cFV34IY6HNQ
HWppcKHPQUXw2bcghlqKQJdzcXExPDysosoFfQ6qgOe+BTHQ58A52WyWyr7q
Gu/oc+Ac/vsWxECfA3tyuVw6nS5a3lVic3OTXiaTyeu18GdnZ7Ozs8r+1Lap
6XOQKBm0AflJMBg0mUxGo3FmZqa42U+8xPLyMr30eDxms9lgMPj9fvpD1Q0r
SrGmpqZakoysTDpUcqlIDgwMOByOUCj04sV3tZu/1m2inkqlIpGI0+mkO5JI
JBgskO8s15JHRkYKkl+Uds5af361qVbtppNFyeSHKpXMmEwmY7VaqUgWNl4s
b11WsW/6/QbbxtMd8fl8FotFRQVZSPJxya9KDpX/U3jfSTVKZgmV2XA4bLPZ
6sxbuXdk5d+iW8dSWaaC7Ha7OS/F4pLLflWxoWmDfXJVI5kxZGFKuVdWVoRs
1rJfFYnFYlQzcttB2lCygMCKTXPVKpkxVMTIwtvb2yLWatOviP39/bGxMWpb
KS2xlmaS6wU2iVf8S2YPtaAbWrh9vzoupB+UDPNWOzSTfC2wVBFK0sq1ZMYc
HBzMz883tNON/Oq4sLF1IMDR41wkSC4LXF8Xbg+qSzJjstns0NCQ9J2F28bh
cHCyE3ErklsJUhxLZk8wGAyFQm0arhUo66Bml9Jy87Qi+UZ+xY9kxlCzpbe3
l0GwKkJGVnzbmi6UzJ5kMunxeNhYmKAoQbECkjUPs0qwSCKRsNvtkKx5qK0d
j8eZGTmVShkMBkjWPCaTqTTAygidTgfJmodCNAVqZhZOp9N6vR6SNY/f749E
IsyMzEO7uwsls2dnZ2dpaYmZkaPRqNfrhWTNk81mzWZzyQZ1c/WqEDr78mrG
m8DEJKGpWRMTE4pPfa+W3FBdY0UNtHMmWRFK7aOy1YQ8QvBseW5S/mDlHbm6
S1WfQi2jvr4+Hha81DUJG2sXVFTuh6/VzqVk9lBpojJVNbdIwLhCZ6umjZTt
fDXD8rD2Qyix2d3dVVpunpLkhupqfapaUa124ZDFj2RF8Pl8a+HHgk5yLGzG
wgsRvyq/pcLalL6Oj4/zU3LzktfWGqmrp0pR83jFm2T2XFxcWP7+V/dXfi9q
29pZk7UTvgu5hqhfHR0djY6OcrVOJy/ZYqF6SlxdY786bpyScShZEd7+14uF
hV99V16EIiFeHZdz10IlIexXZOHJycmTkxOlJdZCN91ut+f7SNuIV5VBqm49
BbeSleAvf7z/x186HPnlAxLzK7ELKi7bS6d5tjC5liMvebuZurpT4iEuzbdk
5vzf643737z8X6vVGvxqSbA9WLRddXuwIseoecvL51/df2jv7+fcwrlczmq9
R4rr1DX0K5F4FQ6H+7mXzJy//FsxYVhevWezxWKxuky1Lp0oHaupOhKJhMP1
xdL9f/xPNSxLodR6YyP0ZY2Qeg+rOXKtvfCevGSHIxAIYCVOAzKZjNvtNhqN
q6ur0qfA0ZWhUMhms1Heorr5t10oWSmojiAj9/T0DA4Ozs3NRaPReDxO+UOl
VekIRbbFxUWyLV0ZDAZVPT2yCyUrCOW3lM97vV6Xy6XX63UlyKp0hIr53t6e
xmzbhZIBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACK8//AsPkE
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->872898113]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "BranchFontColor",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BranchFontColor"]],"paclet:WaveletWare/ref/BranchFontColor"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " controls the color of the labels for the branches of the tree."
}], "ExampleText",
 CellID->141435459],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"BranchFontColor", "\[Rule]", 
    RowBox[{"Darker", "[", "Green", "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->39108138],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->174949575],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
l4vzUnyR5DpQi2TGkIWpTTQ3N1fLdpk4VceOkqurq5Rucds1JElynXAumTFU
xMjCa2trUs0nOXRtbW0NDAxwOAZXt2TJcCuZPdSCvtjCxb5UR5WYST/6+vp4
qx0kSW4UPiUz5uHDh5OTk1LMVWgOXrj9bSmUw/j9fqWFFpAuuWF4k8yYVCrV
09MjfTOahrHb7Zx0aLegZPYEAoFgMCi3hfezWQc1u5SWm6EFJTOGmi3t7e0M
Sm4OMrLiXfEtKJk9u7u7brebjYUJihIUKyBZ8zCrEXLEYjGbzQbJmofa2tFo
lJmR4/G4Xq+HZM1jNBqlDLA2EUEQIFnzUIimQM3MwolEQqfTQbLm8fl84XCY
mZF5aHe3oGT2rK+vz8zMMDNyJBLxeDyQrHlSqZTJZKowRn64RnQEUHxq3/lE
h1qjhkNDQ4qvfW5Eci11NWai8SJZESraRwVDiZis6FDx2cKEv+rj0dQy6ujo
4GHee32Sa6rLOVw1v+JHMnuoNFGZErXiBWWxcLboK9WhxGZjY0NpuRnqlFxd
HX347tJSdRvxI1kRvF7v4uJika3Oi2St2TAlhfzugwc1KxJKXwcHB/kpuXVI
rqou97WqZY83yew5OTkxm80UtCvsWsWvztKN/Kns20LtWPGNvb29/v5+rh42
VYfkKuryL8X9ikPJikAWsNlsmQ5DyfGqcLbmV8jCw8PDh4eHSkssR6pk0bOF
gyJ+xa1kRSA72+327e01qflVIfPYXqpyXxKJBM8WliZZRF1hmn+e849wLlkR
0um0xXLjw5kzK4nnsGIuVLIALP+BUCjU2dnJuYUvllxFXZ6Sb6hCsiJQnrm8
HHy/rBCWdS+ILMk579XKfCwWi1Ec8Pv9qliWcqHkMnWlnH1OXZKVIplMulwu
g8EwPz8vfQocfTIYDFqtVspbVDf/tgUlKwXVEWTktra27u7uiYmJSCQSjUYp
fyi2Kh1ZXV2dnp4m29InA4GAqqdHfvPNNx0dHdIlv/nmm++8846qJSsI5bfb
29sej8fpdOp0OiEP2Z+OUDHf3NzUhm3PH74tXfK9e/fok0pfOOCXxp4zj8f9
gRqQY1xvdKsvPjc+ADxwyafsYvcKUAm5BDmGsr8AtEdTnjGolueKAzYkEok7
d+5c/ne43QkIsKe5rTlsPwdyNL33CQk8kCPZVtFGG0AmRkdHj4+Pm/6zt27d
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
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->168801680]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "BranchThickness",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BranchThickness"]],"paclet:WaveletWare/ref/BranchThickness"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " controls the thickness of the branches connecting the nodes of the tree.  \
The default value is ",
 ButtonBox["Medium",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Medium"],
 ".  Other values can be ",
 ButtonBox["Tiny",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Tiny"],
 ", ",
 ButtonBox["Small",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Small"],
 ", ",
 ButtonBox["Large",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Large"],
 " or a positive number."
}], "ExampleText",
 CellID->243930162],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"BranchThickness", "\[Rule]", "Large"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"BranchThickness", "\[Rule]", ".015"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->178145126],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->62242545],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnV1MW2eax89umkJajUvbcRPAlYMRCGxaSlyPEF5KZ6AzeF0EuIRNsTMq
MyHTtaw6FLxkWBZPulioFA2stFlLliJfoUjcRFqJRCutlLv17tzkZiVX4oKr
VS99mcvsYx/8fY45/nrPe47/v4sE+/jr/5znfd7n/e75XdBz968FQVhrp388
yxu//Pbb5T9+0UEPbn6z9vd/+Gbljuub9ZU/rHw7+rtL9OQnfyUI/03/p/9+
BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJDh7OwsHo+H
MzizbGxs0MNoNJpMJtX+gUBLPHv2zOfzmUymzs7OqampmxnCWZaWluihy+Uy
m81Go3FhYeHx48dq/2TALy9fvqQo1Nvb63A4/H7/w4cPjy8iFosFg8GJiQly
wkgkkkql1BYB+CKRSFitVopCBwcHF7pTOeSEHo/HYrEgdgERClOBQMBms9Xm
USXhi2LX5OQkAleLQ041PT29vLxcp0cVsrm5OTo6+tNPP6ktDqgDRRVyqq2t
rQY6lcje3t7w8DA1J9WWCFTA6XQ2w6lEKOMaHBxEhdhq7O/vz87ONsmpRCht
83q9agsF7Egmk/39/UdHR031K8LhcDx79kxtuYARPp/P7/c326mOM4kWtTTV
lgtYQC21rq4uBsFKhPwqkUioLRo0nWg06nK52DgVQYGRwqPaokHTYVYJikQi
EbvdrrZo0HScTmc4HGbmV7FYzGg0qi0aNB2TyaRkTLmBCIKgtmjQdKhWorqJ
mVPF43GDwaC2aNB0FhYWgsEgM79CV0OLsL29vbi4yMyvQqGQ2+1WWzRoOslk
0mw2X+wQjx7cubkmNXXmYE2cQnrnwSMFfjU2NvbkyRO1RQMWXNwkPPedcr/K
e5us3xVAjcHu7u6XL1+qrRiwgAIIhZGKPnXnwYGk39DF7JMKHItyuZ2dHbXl
AnZ4PJ7V1dVKPiHpNvRkvvojH6tUF1LGPjIygmDVUqRSKYvFQvVUdX5V5EqV
/Oro6GhoaOjFixdqCwWsoZtut9tl+0jriFfkVOPj4ycnJ2pLBOpAruVwOKRX
TEinTxfnV/F4HE4Fzs7OrFbr7du3lflV+lkxSEleDwQCPT09cCrwKrMqZ319
3WazbW5uSvtVkQ9J919FIhEKfV6vFytxQCGJRGJycvLdd99dWVlRPuuPXun3
+7u7u/v7+zHlGEhC6ZYgCG1tba+//npfX9/MzEwoFAqHw5QyFToSPUORbX5+
nkIcvXhsbIzede3aNXQpAEk++ugj8pD79++/yvgY5fNut9vpdBoMBiELORI9
Q5Ftd3c3N8F4dHSULn399deq/nzAI+Qn5BvXr1+vIeyQE7a3t9PbMZUdFEKt
QtExas6RqHKkt1PEQ20IckxPT5NXfPXVVzV/ArnTwMAAfQg5WON+F9AwlJaL
iXedXQTPnz+nz6G4h638APkSeRT5A3lX/Z9GqTt9FKXx9X8U0DRU95EnUD3Y
kE9LpVKil0aj0YZ8INAilKWLNVcD9xR68uQJfWZHRwc63lsTyrSvX79OPrC7
u9vYT56bm6OPpX8b+7FAE9y/f1/sGWj4J1OkonhFH46Z7a2GOGRDNGnqHeVX
YhsTW6u1FIVDNk0CgzstwNO7YngaOzytb8hGOclkMj+4c3o4Jtx92rwvAyqQ
v6npv76M1zlkoxxxcGfg/Y6MT8OvdAYFq+w9PT3sEN6vc8hGORQPRZ+a9k4j
XukNClKZ6u9Veshmle6ywVjvkI1yqBJMd5G1XR4RFuFXuoLCVcavMkM2b9Nd
Xvo+zvL7xcGdnwnvwa90RTZeiUM27wsd58GLFenBHWN6ZmAAgzu6Ip1f/bM4
ZNN22S58yT5uPPm339O3v97ejsEdHXH6w6jQ9k433dn1z83qpM+nhz8XejG4
ozPu318UCvqvVOD00CH43swM7uAsOX3Q7CEb5WBwR08wGLJRzqefforBHR3A
ZshGObnBnefPn6v9W0CN1L/KphmcD+4MDHDi6qBa6l9l0wzIncSqGSt3tEij
Vtk0g/PBnfZ21ZsSoCoau8qmGWDljhZp7CqbZkC1IVbuaItmrLJpBuLKnXYM
7miB5q2yaQa3bt3iPK4CkeatsmkGuZU7GNzhGX6GbJSTa7dicIcxlCaR8cMZ
nFk2NjboISW9hZtscDVkoxxxcKewn025ZFAtlH77fD6TydTZ2Tk1NSVuFhvO
srS0RA9dLpfZbDYajQsLC2Kuws+QjXJygzvff/99VZJReyqHvIKKZG9vr8Ph
8Pv9+X37s/sQlx+HFIvFgsHgjRs36O5QqddchUKS5+bmrly5MjAwUCRZHlHy
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
4lkye5xOZzOcSoTSj8HBQd5qh+okV+NX3EpmzP7+/uzsbE0uoxTKYbxer9pC
81QtuUq/4lAyY5LJJLWslZ8gWTMOh4OTztIWlMwen8/n9/ubbeHjTNZBzS61
5aZpQcmMoWZLV1cXg5IrQkZWffVEC0pmTzQadblcbCxMUJSgWAHJuodZjSAS
iUTsdjsk6x5qa4fDYWZGjsViRqMRknWPyWRSMqbcQARBgGTdQyGaAjUzC8fj
cYPBAMm6Z2FhIRgMMjMyD+3uFpTMnu3t7cXFRWZGDoVCbrcbknVPMpk0m81S
9jhYEydK3nnwqPxielDjHHFso+CJoudLGBsbU303sxolZy8WK8vplnwPL5JV
Qap9lB8MkxoWIxNnzZi+XGbSguuFUMuou7ubh8UUVUsueKrwKgk9/5N7yeyh
0kRlqswzsrYrt3LBxbJH8iY+PqbEZmdnR225aaqWLO1jZdI5lqwKHo9ndXW1
yHR515D1E8mrcveE0teRkRF+Sm7Nkovi2p0HD+TrTt4ksyeVSlksFgraUnat
YOTyWlD6xUdHR0NDQ1wdLlmL5PNkqjAHKKgdi9/BoWRVIAvY7fbzDkNFhTed
yJZekHotWXh8fPzk5ERtiaVUL7n4qvxbuJWsCmRnh8ORWT5wUbJRWFQrulU8
HufZwlVILpaZuXywJuVXnEtWhbOzM6vVevu2L1fByTSOJO1eWhkEAoGenh7O
LaxIskwtmffFrHRNSFYFyjPX19dttrHlkoQ0a275rqq8wSORCMUBr9eriWUp
F0o+LlJdWHZyvVpr/6ApyWqRSCQmJyc7OztXVlaUT4GjV/r9/oGBAcpbNDf/
th7JNptNi5LV4scff3zrrbcuXbp0/fr1mZmZUCgUDocpfyi0Kj2zubk5Pz9P
tn3ttdfa29s/+eQTtX947VC1SH7V1tbW19enRDK90ufzteCM0HoQ9/MfHR2l
/JaSW7fb7XQ6DQaDkIWsSs9QMd/d3SXb5nau1sHIhULJav9M7ZHbXKWqThhs
fAcqI24QWu1+/tj4DlSgnt2nxc1FqUJEywiUUOdu+WKsu3fvXmN/FdA0cfFo
7zrO1xaPRiUwQAZEcoeP1NmmE4+71eiGkKDhNOqsQD31OYA6qa1vQQ70OQAR
Md++detWQz4NfQ7gVXNOtkKfA2jSUdrieanoc2hN6u9bkCN3Qjf6HFqNXN9C
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
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->433827889],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
DuP3+5UWWqJhyQ36FYWSCZPJZKBlLf0Eyaax2+2UdGp1oGTyBAKBYDAot4WP
81kHNLuUlpujAyUTBpotfX19BEouCxhZ8WkzHSiZPIlEwu12k7EwAFECYgVK
1jzEagSWeDxus9lQsuaBtnYsFiNm5GQyqdfrUbLmMRgMUsaU2wjDMChZ80CI
hkBNzMKpVEqn06FkzePz+cLhMDEj09Du7kDJ5Nne3l5aWiJm5Egk4vF4ULLm
yWQyRqNRyB4H6+xEyYdPXlZfzA1qFGDHNnhvlL1fgcPhUHyXvCYlFy+WK+N0
C36HFsmKINQ+Kg2GCQ2LgYmLZsxdrjIp7zofaBn19/fTMOm9Ycm8t/hXQWjh
n9RLJg+UJihTVZ5RtF21lXkXq16Jm/j4GBKbnZ0dpeXmaFiysI9VSadYsiJ4
vd61tbUy05VcQ9RPBK+KPRNIX61WKz0lt2nJZXHt4ZMn4nUnbZLJc3FxYTKZ
IGgL2bWGkatrQeEPHx4ejo2NUbX/VTOSC8kUPwfg1Y7l36BQsiKABWw2W6HD
UFLhzSWylReEPgsWnpycPDk5UVpiJY1LLr8q/hVqJSsC2Nlut+eXD9RLNvhF
taZbpVIpmi3cgORymfnLB+tCfkW5ZEXIZrNms/n+/QBXwYk0jgTtXlkZhEKh
wcFByi0sSbJILVnyxaJ0VUhWBMgzNzY2LBbHSkVCWjS3eFdVyeDxeBzigN/v
V8WylLqSj8tU88sO16u1/i+qkqwU6XTa5XL19vaurq5KnwIHnwwGgwMDA5C3
qG7+bSuSLRaLGiUrxeeff97d3d3V1XXr1q07d+5EIpFYLAb5A9+q8E40Gl1Y
WBgdHYVPslu1q7eHGapF8CtQPTw8PDs7W1syuBN8MhAIdOCM0KbJH79V2M//
u+++g+TW4/E4nU6dTsdt7gFWhXegmO/u7oJtuaNnVLeZTDWQ0kuRrPRtqg/u
+C3puyPyD39X0eZXCDGa3s+f26wPHAwzWKSCVjYI5b6r+NFdCFW0uEEoF+vg
6ziQgbDwc6Smz9fmcjM8LQth4dp04F1Nt+n4bUn19jkg7YLvDy1uPaelPgek
RZroWxCDf9wt9jl0MvzDR9qSb3Ob7VNy/C6iCHIcPoJ9Dh2OTEdpn56ecj+L
G+l3Gm3pWxAD+xw6lsePH7fetyAGhCmujYkzSToHqPXa1bcgBr/PQY7fRyik
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
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->176357085]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "ShowString",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ShowString"]],"paclet:WaveletWare/ref/ShowString"},
   "RefLink",
   BaseStyle->"InlineFormula"]], "InlineFormula"],
 " can be set to a string that serves as a label of the plot."
}], "ExampleText",
 CellID->607661633],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ShowString", "\[Rule]", "\"\<mississippi\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->415822390],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->855048825],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
yw==
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->15125746]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "ImageSize",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[TextData[{
 "The option ",
 ButtonBox["ImageSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ImageSize"],
 " controls the size of the tree plot."
}], "ExampleText",
 CellID->312694359],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->440287942],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->223749417],

Cell[BoxData[
 GraphicsBox[
  TagBox[{{
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.21270038138513625, 2.286866558889224},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 2.7122673216594966`}, {0., 
        1.8614657961189516`}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"1\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.6381011441554088, 2.286866558889224},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 2.7122673216594966`}, {0.850801525540545,
         1.8614657961189516`}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.6381011441554088, 1.4055325476390763},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.850801525540545, 1.8614657961189516`}, {0.4254007627702725,
         0.9495992991592013}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"1\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {1.0635019069256813, 1.4055325476390763},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.850801525540545, 1.8614657961189516`}, {
        1.2762022883108175`, 0.9495992991592013}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.21270038138513625, 0.47479964957960064},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 0.9495992991592013}, {0., 0.}}]}}, 
     {Thickness[Medium], InsetBox[
       StyleBox["\<\"1\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->GrayLevel[0],
        $CellContext`LineColor -> GrayLevel[0],
        $CellContext`FrontFaceColor -> GrayLevel[0],
        $CellContext`BackFaceColor -> GrayLevel[0],
        $CellContext`GraphicsColor -> GrayLevel[0]], {0.6381011441554088, 0.47479964957960064},
       Background->GrayLevel[1]], 
      {GrayLevel[0], 
       LineBox[{{0.4254007627702725, 0.9495992991592013}, {0.850801525540545, 
        0.}}]}}}, {
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.4254007627702725, 2.7122673216594966}, 0.2], InsetBox[
       StyleBox["\<\" \\n1.0\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0.4254007627702725, 2.7122673216594966}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0., 1.8614657961189516}, 0.2], InsetBox[
       StyleBox["\<\"s\\n0.36\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0., 1.8614657961189516}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.850801525540545, 1.8614657961189516}, 0.2], InsetBox[
       StyleBox["\<\" \\n0.64\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0.850801525540545, 1.8614657961189516}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.4254007627702725, 0.9495992991592013}, 0.2], InsetBox[
       StyleBox["\<\" \\n0.27\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0.4254007627702725, 0.9495992991592013}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{1.2762022883108175, 0.9495992991592013}, 0.2], InsetBox[
       StyleBox["\<\"i\\n0.36\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {1.2762022883108175, 0.9495992991592013}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], DiskBox[{0., 0.}, 0.2], 
      InsetBox[
       StyleBox["\<\"m\\n0.091\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0., 0.}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Medium]}], 
      DiskBox[{0.850801525540545, 0.}, 0.2], InsetBox[
       StyleBox["\<\"p\\n0.18\"\>",
        StripOnInput->False,
        FontSize->12,
        FontColor->RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`LineColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`FrontFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`BackFaceColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`],
        $CellContext`GraphicsColor -> 
        RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 
          0.33333333333333337`]], {0.850801525540545, 0.}]}}},
   Annotation[#, 
    VertexCoordinateRules -> {{0.4254007627702725, 2.7122673216594966`}, {0., 
     1.8614657961189516`}, {0.850801525540545, 1.8614657961189516`}, {
     0.4254007627702725, 0.9495992991592013}, {1.2762022883108175`, 
     0.9495992991592013}, {0., 0.}, {0.850801525540545, 0.}}]& ],
  AspectRatio->1.4578286677041756`,
  FrameTicks->None,
  ImageSize->300,
  PlotLabel->FormBox[
    StyleBox["\"\"", 
     GrayLevel[0.5], Plain, 24, StripOnInput -> False], TraditionalForm],
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 ImageSize->{304, 464},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->373383740]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[Cell[BoxData[
 TemplateBox[{Cell[
    TextData["MakeHuffmanCodes"]],"paclet:WaveletWare/ref/MakeHuffmanCodes"},
  "RefLink",
  BaseStyle->{
   "InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Categorical"]],
   "paclet:WaveletWare/guide/List of Functions - Categorical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->407433163],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Options and Values"]],
   "paclet:WaveletWare/guide/List of Options and Values"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->795991071],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Functions - Alphabetical"]],
   "paclet:WaveletWare/guide/List of Functions - Alphabetical"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->163550859]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"HuffmanTree",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:WaveletWare/guide/WaveletWare", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 8, 25, 9, 48, 31.1864784}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "WaveletWare`ImageProcessing`", "keywords" -> {}, "specialkeywords" -> {},
     "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Wavelet Ware Package Symbol", "language" -> "en", "paclet" -> 
    "WaveletWare Package", "status" -> "None", "summary" -> 
    "HuffmanTree[codes, opts] takes the Huffman codes generated by \
MakeHuffmanCodes (first argument) and makes a Huffman tree from them.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "HuffmanTree", 
    "titlemodifier" -> "", "windowtitle" -> "HuffmanTree", "type" -> "Symbol",
     "uri" -> "WaveletWare/ref/HuffmanTree"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[15957, 468, 388, 15, 30, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->129106048]},
 "RasterizedOutput"->{
  Cell[30305, 838, 14673, 248, 429, "Output",
   CellTags->"RasterizedOutput",
   CellID->284296212],
  Cell[46286, 1139, 8338, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->301785194],
  Cell[54627, 1286, 8293, 144, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->110435470],
  Cell[64050, 1473, 8337, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->62045655],
  Cell[72390, 1620, 8634, 149, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->740460753],
  Cell[82767, 1834, 8338, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->738392584],
  Cell[91108, 1981, 8557, 148, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->302097381],
  Cell[99668, 2131, 8545, 148, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->504860724],
  Cell[109305, 2322, 8338, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->205174279],
  Cell[117646, 2469, 8899, 154, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->294329022],
  Cell[127665, 2666, 8338, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->233692661],
  Cell[136006, 2813, 7886, 137, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->387982082],
  Cell[145056, 2994, 8337, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->50493065],
  Cell[163591, 3395, 8338, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->127278850],
  Cell[171932, 3542, 8785, 152, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->166359594],
  Cell[181848, 3737, 8338, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->435263142],
  Cell[190189, 3884, 8377, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->87834694],
  Cell[199700, 4072, 8338, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->491792953],
  Cell[208041, 4219, 8106, 141, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->872898113],
  Cell[217324, 4404, 8338, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->174949575],
  Cell[225665, 4551, 8447, 146, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->168801680],
  Cell[235852, 4761, 8337, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->62242545],
  Cell[244192, 4908, 8813, 152, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->433827889],
  Cell[253008, 5062, 8809, 152, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->176357085],
  Cell[262950, 5257, 8338, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->855048825],
  Cell[271291, 5404, 8890, 154, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->15125746],
  Cell[281139, 5598, 8338, 145, 70, "Output",
   CellTags->"RasterizedOutput",
   CellID->223749417]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 303880, 6111},
 {"RasterizedOutput", 304024, 6115}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[583, 21, 3907, 94, 48, "AnchorBarGrid",
 CellID->1],
Cell[4493, 117, 288, 11, 44, "ObjectNameGrid"],
Cell[CellGroupData[{
Cell[4806, 132, 709, 20, 83, "Usage"],
Cell[CellGroupData[{
Cell[5540, 156, 738, 24, 31, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->655169872],
Cell[6281, 182, 31, 0, 70, "SectionHeaderSpacer"],
Cell[6315, 184, 53, 0, 70, "Notes"],
Cell[6371, 186, 8014, 223, 70, "3ColumnTableMod"],
Cell[14388, 411, 1152, 39, 70, "Notes",
 CellID->65118016],
Cell[15543, 452, 331, 8, 70, "Notes",
 CellID->189315782],
Cell[15877, 462, 31, 0, 70, "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15957, 468, 388, 15, 30, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->129106048],
Cell[CellGroupData[{
Cell[16370, 487, 194, 6, 25, "ExampleSection",
 CellID->31385617],
Cell[16567, 495, 65, 1, 31, "MathCaption",
 CellID->16454449],
Cell[16635, 498, 126, 4, 42, "Input",
 InitializationCell->True,
 CellID->861618089],
Cell[16764, 504, 85, 1, 33, "ExampleText",
 CellID->599657210],
Cell[CellGroupData[{
Cell[16874, 509, 376, 11, 43, "Input",
 CellID->620302983],
Cell[17253, 522, 10786, 244, 485, "Output",
 CellID->62697102]
}, Open  ]],
Cell[CellGroupData[{
Cell[28076, 771, 125, 3, 70, "ExampleDelimiter",
 CellID->533053980],
Cell[28204, 776, 99, 1, 70, "ExampleText",
 CellID->197612213],
Cell[CellGroupData[{
Cell[28328, 781, 706, 23, 70, "Input",
 CellID->168597186],
Cell[29037, 806, 1265, 30, 182, "Output",
 CellID->177496196],
Cell[30305, 838, 14673, 248, 429, "Output",
 CellTags->"RasterizedOutput",
 CellID->284296212]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45039, 1093, 169, 5, 70, "ExampleSection"],
Cell[CellGroupData[{
Cell[45233, 1102, 176, 5, 70, "ExampleSubsection"],
Cell[45412, 1109, 285, 9, 70, "ExampleText",
 CellID->437321114],
Cell[CellGroupData[{
Cell[45722, 1122, 561, 15, 70, "Input",
 CellID->181803667],
Cell[46286, 1139, 8338, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->301785194],
Cell[54627, 1286, 8293, 144, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->110435470]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[62969, 1436, 180, 5, 70, "ExampleSubsection"],
Cell[63152, 1443, 306, 9, 70, "ExampleText",
 CellID->278209333],
Cell[CellGroupData[{
Cell[63483, 1456, 564, 15, 70, "Input",
 CellID->843826586],
Cell[64050, 1473, 8337, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->62045655],
Cell[72390, 1620, 8634, 149, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->740460753]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[81073, 1775, 184, 5, 70, "ExampleSubsection"],
Cell[81260, 1782, 720, 27, 70, "ExampleText",
 CellID->41733359],
Cell[CellGroupData[{
Cell[82005, 1813, 759, 19, 70, "Input",
 CellID->595098710],
Cell[82767, 1834, 8338, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->738392584],
Cell[91108, 1981, 8557, 148, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->302097381],
Cell[99668, 2131, 8545, 148, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->504860724]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[108262, 2285, 175, 5, 70, "ExampleSubsection"],
Cell[108440, 2292, 282, 9, 70, "ExampleText",
 CellID->814948150],
Cell[CellGroupData[{
Cell[108747, 2305, 555, 15, 70, "Input",
 CellID->11837687],
Cell[109305, 2322, 8338, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->205174279],
Cell[117646, 2469, 8899, 154, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->294329022]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[126594, 2629, 179, 5, 70, "ExampleSubsection"],
Cell[126776, 2636, 302, 9, 70, "ExampleText",
 CellID->658376954],
Cell[CellGroupData[{
Cell[127103, 2649, 559, 15, 70, "Input",
 CellID->359996803],
Cell[127665, 2666, 8338, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->233692661],
Cell[136006, 2813, 7886, 137, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->387982082]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[143941, 2956, 180, 5, 70, "ExampleSubsection"],
Cell[144124, 2963, 305, 9, 70, "ExampleText",
 CellID->175491451],
Cell[CellGroupData[{
Cell[144454, 2976, 599, 16, 70, "Input",
 CellID->113189662],
Cell[145056, 2994, 8337, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->50493065],
Cell[153396, 3141, 8953, 209, 339, "Output",
 CellID->313182366]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[162398, 3356, 179, 5, 70, "ExampleSubsection"],
Cell[162580, 3363, 423, 11, 70, "ExampleText",
 CellID->121570406],
Cell[CellGroupData[{
Cell[163028, 3378, 560, 15, 70, "Input",
 CellID->614013900],
Cell[163591, 3395, 8338, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->127278850],
Cell[171932, 3542, 8785, 152, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->166359594]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[180766, 3700, 178, 5, 70, "ExampleSubsection"],
Cell[180947, 3707, 310, 9, 70, "ExampleText",
 CellID->857741043],
Cell[CellGroupData[{
Cell[181282, 3720, 563, 15, 70, "Input",
 CellID->722529988],
Cell[181848, 3737, 8338, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->435263142],
Cell[190189, 3884, 8377, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->87834694]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[198615, 4035, 181, 5, 70, "ExampleSubsection"],
Cell[198799, 4042, 313, 9, 70, "ExampleText",
 CellID->302397523],
Cell[CellGroupData[{
Cell[199137, 4055, 560, 15, 70, "Input",
 CellID->39107704],
Cell[199700, 4072, 8338, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->491792953],
Cell[208041, 4219, 8106, 141, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->872898113]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[216196, 4366, 182, 5, 70, "ExampleSubsection"],
Cell[216381, 4373, 315, 9, 70, "ExampleText",
 CellID->141435459],
Cell[CellGroupData[{
Cell[216721, 4386, 600, 16, 70, "Input",
 CellID->39108138],
Cell[217324, 4404, 8338, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->174949575],
Cell[225665, 4551, 8447, 146, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->168801680]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[234161, 4703, 182, 5, 70, "ExampleSubsection"],
Cell[234346, 4710, 723, 26, 70, "ExampleText",
 CellID->243930162],
Cell[CellGroupData[{
Cell[235094, 4740, 755, 19, 70, "Input",
 CellID->178145126],
Cell[235852, 4761, 8337, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->62242545],
Cell[244192, 4908, 8813, 152, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->433827889],
Cell[253008, 5062, 8809, 152, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->176357085]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[261866, 5220, 177, 5, 70, "ExampleSubsection"],
Cell[262046, 5227, 301, 9, 70, "ExampleText",
 CellID->607661633],
Cell[CellGroupData[{
Cell[262372, 5240, 575, 15, 70, "Input",
 CellID->415822390],
Cell[262950, 5257, 8338, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->855048825],
Cell[271291, 5404, 8890, 154, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->15125746]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[280230, 5564, 176, 5, 70, "ExampleSubsection"],
Cell[280409, 5571, 194, 7, 70, "ExampleText",
 CellID->312694359],
Cell[CellGroupData[{
Cell[280628, 5582, 508, 14, 70, "Input",
 CellID->440287942],
Cell[281139, 5598, 8338, 145, 70, "Output",
 CellTags->"RasterizedOutput",
 CellID->223749417],
Cell[289480, 5745, 10787, 244, 485, "Output",
 CellID->373383740]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[300306, 5994, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300374, 5999, 270, 12, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[300647, 6013, 251, 6, 70, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[300935, 6024, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[301214, 6038, 31, 0, 70, "SectionHeaderSpacer"],
Cell[301248, 6040, 221, 6, 70, "MoreAbout",
 CellID->407433163],
Cell[301472, 6048, 211, 6, 70, "MoreAbout",
 CellID->795991071],
Cell[301686, 6056, 223, 6, 70, "MoreAbout",
 CellID->163550859]
}, Open  ]],
Cell[301924, 6065, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

