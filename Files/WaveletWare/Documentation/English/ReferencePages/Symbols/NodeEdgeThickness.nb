(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     39894,        904]
NotebookOptionsPosition[     36072,        792]
NotebookOutlinePosition[     38578,        859]
CellTagsIndexPosition[     38458,        853]
WindowTitle->NodeEdgeThickness
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["WAVELET WARE PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"HuffmanTree\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/HuffmanTree"], "\<\"NodeColor\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/NodeColor"], "\<\"NodeEdgeColor\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/NodeEdgeColor"], "\<\"NodeFontColor\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/NodeFontColor"], "\<\"NodeFontSize\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/ref/NodeFontSize"], "\<\"NodeSize\"\>":>
       Documentation`HelpLookup["paclet:WaveletWare/ref/NodeSize"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"List of Options and Values\"\>":>
       Documentation`HelpLookup[
       "paclet:WaveletWare/guide/List of Options and Values"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"WaveletWare/ref/NodeEdgeThickness\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WaveletWare/ref/NodeEdgeThickness"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/WaveletWare/ref/\
NodeEdgeThickness.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$78166], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "WaveletWare/ref/NodeEdgeThickness", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["NodeEdgeThickness", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData["NodeEdgeThickness"], "InlineFormula"],
     "\[LineSeparator]is an option for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["HuffmanTree"]],"paclet:WaveletWare/ref/HuffmanTree"},
       "RefLink",
       BaseStyle->"InlineFormula"]], "InlineFormula"],
     " that sets the thickness of the edge of the nodes."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->373743744],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->394620413],

Cell["This loads the package:", "MathCaption",
 CellID->16454449],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->861618089],

Cell[TextData[{
 "The option ",
 StyleBox["NodeEdgeThickness",
  FontFamily->"Courier New",
  FontSize->12],
 " controls the thickness of the edges of the nodes of the tree.  The default \
value is ",
 ButtonBox["Medium",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Medium"],
 ".  Other values can be ",
 ButtonBox["Tiny",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Tiny"],
 ", ",
 ButtonBox["Small",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Small"],
 ", ",
 ButtonBox["Large",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Large"],
 " or a positive number."
}], "ExampleText",
 CellID->22534450],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"codes", ",", "old", ",", "new"}], "}"}], "=", 
   RowBox[{"MakeHuffmanCodes", "[", "\"\<mississippi\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"NodeEdgeThickness", "\[Rule]", "Large"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"HuffmanTree", "[", 
  RowBox[{"codes", ",", 
   RowBox[{"NodeEdgeThickness", "\[Rule]", ".015"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->757542834],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->691992943],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
YNtHiTaIRywvL3uxRGp1dTVUG+eJFe9yl1hTDJBQgYeOR+/d5AsD+HAy9XC9
B/gtoiwG8EHn8U2xBOHqwbGsDD5PnjxJJpPN344Prho3H3t6M6KAznMVvw1O
3TVFmrmtP/6p6dD0q+CByqr1WI8PFoyf/qOslNMP34ZHPX/3y7usrwIIKimz
+fuuGfZ8+ZfG859+I2+tVLFY3L31Jv0qgKC6avnV7u4vf2S8dPofKTRT3l/6
/qvGr+lXQaNVXzUajYWFixtGQqZfgcpnG+eMGP0qcJzGV80o+rMNBU3S8QH8
6uNKRfJticc0e4ELG5/Br9T0+I8P0A5eXFjgCHzAQLh+1jJ+JRvTm3+5uxuq
U5HDQLNTtrur9jt4PXNEJKPPLHClUknLGjojXtMM17WJmaUN9RNP6UzS6UGt
VkskEjpUnmRs8PiuXLlSr9dVf5EuvF5KQbxGz0VQDOB9jT7hej/eLVUlXqP5
IvOp7IQlkqlWq8vLy6q/xSC47953+GUNMAN4f6FnuN4PD87yEf46JIEHZ/mF
9fV1fx0ey333+uPHPewM4JWDR4CO3oDuuU/L/oCDs4ZKJqNSr9fFyVTtk9V7
iMViq6uriNKFL/k3VmnHhDaSz1+5lnntkoNk4p5nz57BQ2x9KR6PXzbpv/Ti
iy/Oz89/++23qr/+OEByJpM5d+7cSJKht1AosDs5FJgXhhIpZgwz78Pi4uLa
2tr+/r5tuofDw8Pt7e3l5eV2xgfDzPfnI1MPl9ydsCcAkiVjzSSCQgrrDc4h
0sPe3h6eiHi7X/KJuJLsnFLNj5IlUywWhX2i0SjK70geZQXF2czP1SSdTus5
6SxwK3lYqj4fSZYMgu22WR6KXFqTgYKPBsUw84zoOUA6guRhfuUXyZJBbGCY
qZZRq0/uUW1QikUEgrKsm51Hk+zOrzSXLBn0+0Sw6hSZT0LbzlqtdBpZsmu/
0layZOr1eiQSgRGy2ez43jPMzqgWcAtNYtpxJI/iVxpKlo9IxIafY7mMWxB4
iO6SDk1DCCVLplarieZgaE7SyRGDispXOoVQsnxyuRyEp1Ipry0M8vm8iGYp
OfCIMMOLcL0fdOTFgLbaObUQSpbMycmJCAAkWFiwtLSEOyrcRhFCyfI5OjoS
MxfSjJxOp3FHhce5hFCyfFCIIBkFSpqRNzc3cUeFq2hCKFk+1WoVktFnkWbk
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
CCGEEEIIIYQQQgghhBBCCCGEEEJc8v8Zn5lg
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->112750288],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
2xjeg2RPBEiyZChY5Ra2J30QadZTnjJKUsMhthQaLkrxKtkz+kuWTK1WE1sB
T2niPVRd1Enn6f90s/Mgkj2gs2TJUD+IlzLqXDezh3jxJU9N4t7Ozg7PPk9o
Enj0Ibl/9JQsn7m5OV5sHVOXirTS0jimx3UlkUjwmFaH7lJfkgdDN8mSEZsD
CjX9sPCelReJ1w/Km4YRlCwfXnKz2axPFmZQP4vdiKytdih+BCVLptFo8JI7
rMC1B7z8KlyUMoKS5WOaJlM9Ozvrt4UJisnY7RSegD2CkuXD0ysXCgUJRqb6
gd0uFotBcojhkUa5XJZgZOqAs9uNjY1Bcojh+UklRBoMHm+oWpw5gpLlw4fv
/Otu2+AxMySHGJ4Ifnl5WYKFq9Uqu9309DQkhxgqs0x1JpORYORSqcRup3Bf
1QhKlk+9Xmeqx8fHKcIU7NGarnGcAWzP5YhTOXyhg+usIXXteRsUMMm91HWv
RNNLshJ4HCu0C21DOZhMeEv8tL3gz2U+mve4lUewfUvuqY45nKNf6SNZPlw7
dVtaM7BtK/Ysi+Knwldc4KtHlG+r71+yuzr6x0urqy420keyfI6Pj/nmiFQq
1bIVL5K9VsN0FPKle/fcG5JCocBLrvJTsPqW7KqOfc257GklWQn7+/vcAmS4
Tru6+NVJuNH6yHrZbh07v1EulyORCLv+SZ4a1fQn2UVd608Hv9JQshL47AZx
5a2sx/qq/al7eacYhl9Zq02FfUh2VNd+0+5X2kqWD2mnGKBljJn53PyXFfco
ttOxrI8rq12Wp9Alm81yC+t2HFA/kh3UtZf5t6B3NZesitaY4fk4WfmN6OLi
onMM61S0OzaALd37j1JJ3EFAxVbPNZOeJHep66y/T75RCohkJVAwwMrvZVYI
f5ug/zSXf9uGFxy25PBRrd9djEYNAc23anqRLKiz+9zDh5WFm7lfXwySZCVQ
54WP8HCmpqYymQwVye7p2mq1SmEqtSm27ZlGcHZojqBkJVDsYZqml4Mv3KAW
YWVlJUBldgQlK4SKnhDceiKdTlP4GtxO0MzMzJUrV/qS/Oqrr966dSu4khVS
r9c3NjbSFrbzMdibFKWQEwbdtuI5894l47g/0ANyjPigqb70THwAdOCMp+wi
ewXohlyCHEPtFUD4GEpaqKCcKw7kQB3YfD5/9utomwkIyGe4vTmknwMMcgNy
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
AAAAAAAAAAAAAEBf/D+PTYov
    "], {{0, 318}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 318},
  PlotRange->{{0, 200}, {0, 318}}]], "Output",
 ImageSize->{204, 318},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->11947526]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["HuffmanTree"]],"paclet:WaveletWare/ref/HuffmanTree"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NodeColor"]],"paclet:WaveletWare/ref/NodeColor"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NodeEdgeColor"]],"paclet:WaveletWare/ref/NodeEdgeColor"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NodeFontColor"]],"paclet:WaveletWare/ref/NodeFontColor"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NodeFontSize"]],"paclet:WaveletWare/ref/NodeFontSize"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["NodeSize"]],"paclet:WaveletWare/ref/NodeSize"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["List of Options and Values"]],
   "paclet:WaveletWare/guide/List of Options and Values"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->797401622]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"NodeEdgeThickness",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:WaveletWare/guide/WaveletWare", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 8, 25, 9, 50, 46.1588210}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "WaveletWare`ImageProcessing`", "keywords" -> {}, "specialkeywords" -> {},
     "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Wavelet Ware Package Symbol", "language" -> "en", "paclet" -> 
    "WaveletWare Package", "status" -> "None", "summary" -> 
    "NodeEdgeThickness is an option for HuffmanTree that sets the thickness \
of the edge of the nodes.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "NodeEdgeThickness", "titlemodifier" -> "", "windowtitle" -> 
    "NodeEdgeThickness", "type" -> "Symbol", "uri" -> 
    "WaveletWare/ref/NodeEdgeThickness"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[5626, 155, 387, 15, 30, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->373743744]},
 "RasterizedOutput"->{
  Cell[7830, 240, 8338, 145, 339, "Output",
   CellTags->"RasterizedOutput",
   CellID->691992943],
  Cell[16171, 387, 8557, 148, 339, "Output",
   CellTags->"RasterizedOutput",
   CellID->112750288],
  Cell[24731, 537, 8544, 148, 339, "Output",
   CellTags->"RasterizedOutput",
   CellID->11947526]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 37990, 836},
 {"RasterizedOutput", 38133, 840}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[589, 21, 4156, 100, 48, "AnchorBarGrid",
 CellID->1],
Cell[4748, 123, 294, 11, 44, "ObjectNameGrid"],
Cell[5045, 136, 556, 15, 83, "Usage"],
Cell[CellGroupData[{
Cell[5626, 155, 387, 15, 30, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->373743744],
Cell[CellGroupData[{
Cell[6038, 174, 195, 6, 25, "ExampleSection",
 CellID->394620413],
Cell[6236, 182, 65, 1, 31, "MathCaption",
 CellID->16454449],
Cell[6304, 185, 126, 4, 42, "Input",
 InitializationCell->True,
 CellID->861618089],
Cell[6433, 191, 610, 24, 49, "ExampleText",
 CellID->22534450],
Cell[CellGroupData[{
Cell[7068, 219, 759, 19, 75, "Input",
 CellID->757542834],
Cell[7830, 240, 8338, 145, 339, "Output",
 CellTags->"RasterizedOutput",
 CellID->691992943],
Cell[16171, 387, 8557, 148, 339, "Output",
 CellTags->"RasterizedOutput",
 CellID->112750288],
Cell[24731, 537, 8544, 148, 339, "Output",
 CellTags->"RasterizedOutput",
 CellID->11947526]
}, Open  ]]
}, Open  ]],
Cell[33302, 689, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33370, 694, 270, 12, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[33643, 708, 1826, 52, 70, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[35506, 765, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[35785, 779, 31, 0, 70, "SectionHeaderSpacer"],
Cell[35819, 781, 211, 6, 70, "MoreAbout",
 CellID->797401622]
}, Open  ]],
Cell[36045, 790, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

